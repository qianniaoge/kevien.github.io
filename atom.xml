<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M0rk&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kevien.github.io/"/>
  <updated>2017-09-13T14:09:49.000Z</updated>
  <id>http://kevien.github.io/</id>
  
  <author>
    <name>M0rk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>windows权限提升</title>
    <link href="http://kevien.github.io/2017/09/13/windows%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    <id>http://kevien.github.io/2017/09/13/windows权限提升/</id>
    <published>2017-09-13T12:22:48.000Z</published>
    <updated>2017-09-13T14:09:49.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h4><ul>
<li><p>还是直接看代码吧，我们直接使用如下的代码进行线程所加载的模块的查看。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line">//powershell 获取进程所加载的dll方法  https://stackoverflow.com/questions/9041062/retrieving-dll-path-of-a-running-process</div><div class="line"></div><div class="line">//这里进程是自己的进程，所以能直接查看到所加载的dll文件  怎么换成notepad.exe的pid也可以了呢</div><div class="line"></div><div class="line">#include &lt;windows.h&gt; </div><div class="line">#include &lt;tlhelp32.h&gt; </div><div class="line">#include &lt;tchar.h&gt; </div><div class="line">#include &lt;stdio.h&gt;</div><div class="line"></div><div class="line">//  Forward declarations: </div><div class="line">BOOL ListProcessModules(DWORD dwPID);</div><div class="line">void printError(TCHAR* msg);</div><div class="line"></div><div class="line">int _tmain(int argc, TCHAR* argv[])</div><div class="line">&#123;</div><div class="line">	if (argc != 2)</div><div class="line">	&#123;</div><div class="line">		printf(&quot;\n Usage  : GetProcessDll.exe &lt;processid&gt; \n\n&quot;);</div><div class="line">		return 1;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	//ListProcessModules(GetCurrentProcessId());</div><div class="line">	DWORD pid = wcstod(argv[1], _T(&apos;\0&apos;));</div><div class="line">	ListProcessModules(pid);</div><div class="line">	return 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">BOOL ListProcessModules(DWORD dwPID)</div><div class="line">&#123;</div><div class="line">	HANDLE hModuleSnap = INVALID_HANDLE_VALUE;</div><div class="line">	MODULEENTRY32 me32;</div><div class="line"></div><div class="line">	//  Take a snapshot of all modules in the specified process. </div><div class="line">	hModuleSnap = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE, dwPID);</div><div class="line">	if (hModuleSnap == INVALID_HANDLE_VALUE)</div><div class="line">	&#123;</div><div class="line">		printError(TEXT(&quot;CreateToolhelp32Snapshot (of modules)&quot;));</div><div class="line">		return(FALSE);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	//  Set the size of the structure before using it. </div><div class="line">	me32.dwSize = sizeof(MODULEENTRY32);</div><div class="line"></div><div class="line">	//  Retrieve information about the first module, </div><div class="line">	//  and exit if unsuccessful </div><div class="line">	if (!Module32First(hModuleSnap, &amp;me32))</div><div class="line">	&#123;</div><div class="line">		printError(TEXT(&quot;Module32First&quot;));  // Show cause of failure </div><div class="line">		CloseHandle(hModuleSnap);     // Must clean up the snapshot object! </div><div class="line">		return(FALSE);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	//  Now walk the module list of the process, </div><div class="line">	//  and display information about each module </div><div class="line">	do</div><div class="line">	&#123;</div><div class="line">		_tprintf(TEXT(&quot;\n\n     MODULE NAME:     %s&quot;), me32.szModule);</div><div class="line">		_tprintf(TEXT(&quot;\n     executable     = %s&quot;), me32.szExePath);</div><div class="line">		_tprintf(TEXT(&quot;\n     process ID     = 0x%08X&quot;), me32.th32ProcessID);</div><div class="line">		_tprintf(TEXT(&quot;\n     ref count (g)  =     0x%04X&quot;), me32.GlblcntUsage);</div><div class="line">		_tprintf(TEXT(&quot;\n     ref count (p)  =     0x%04X&quot;), me32.ProccntUsage);</div><div class="line">		_tprintf(TEXT(&quot;\n     base address   = 0x%08X&quot;), (DWORD)me32.modBaseAddr);</div><div class="line">		_tprintf(TEXT(&quot;\n     base size      = %d&quot;), me32.modBaseSize);</div><div class="line"></div><div class="line">	&#125; while (Module32Next(hModuleSnap, &amp;me32));</div><div class="line"></div><div class="line">	_tprintf(TEXT(&quot;\n&quot;));</div><div class="line"></div><div class="line">	//  Do not forget to clean up the snapshot object. </div><div class="line">	CloseHandle(hModuleSnap);</div><div class="line">	return(TRUE);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">void printError(TCHAR* msg)</div><div class="line">&#123;</div><div class="line">	DWORD eNum;</div><div class="line">	TCHAR sysMsg[256];</div><div class="line">	TCHAR* p;</div><div class="line"></div><div class="line">	eNum = GetLastError();</div><div class="line">	FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,</div><div class="line">		NULL, eNum,</div><div class="line">		MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), // Default language</div><div class="line">		sysMsg, 256, NULL);</div><div class="line"></div><div class="line">	// Trim the end of the line and terminate it with a null</div><div class="line">	p = sysMsg;</div><div class="line">	while ((*p &gt; 31) || (*p == 9))</div><div class="line">		++p;</div><div class="line">	do &#123; *p-- = 0; &#125; while ((p &gt;= sysMsg) &amp;&amp;</div><div class="line">		((*p == &apos;.&apos;) || (*p &lt; 33)));</div><div class="line"></div><div class="line">	// Display the message</div><div class="line">	_tprintf(TEXT(&quot;\n  WARNING: %s failed with error %d (%s)&quot;), msg, eNum, sysMsg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>如下图所示<br><img src="/2017/09/13/windows权限提升/pic.png" alt=""><br>我们可以看到，当我们查看notepad.exe进程中的dll时是可以成功的，但是要查看svhost.exe(pid=4620)的时候，程序报错了， CreateToolhelp32Snapshot (of modules) failed with error 5 (?????)</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;还是直接看代码吧，我们直接使用如下的代码进行线程所加载的模块的查看。&lt;/p&gt;
&lt;figure class=&quot;highlig
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170913安全动态</title>
    <link href="http://kevien.github.io/2017/09/13/20170913%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/13/20170913安全动态/</id>
    <published>2017-09-13T02:13:04.000Z</published>
    <updated>2017-09-13T09:04:11.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>CVE-2016-10190 FFmpeg Http协议 heap buffer overflow漏洞分析及利用<br><a href="http://www.freebuf.com/column/147585.html" target="_blank" rel="external">http://www.freebuf.com/column/147585.html</a></li>
<li>Catfish—缓存漏洞&amp;&amp;配合CSRF到Getshell<br><a href="https://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247484120&amp;idx=1&amp;sn=aaeec3238102fdf88a22ffb1b9f30a47" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247484120&amp;idx=1&amp;sn=aaeec3238102fdf88a22ffb1b9f30a47</a></li>
<li>【干货分享】手把手教你Android Logcat组件安全<br><a href="http://blog.nsfocus.net/android-logcat-security/" target="_blank" rel="external">http://blog.nsfocus.net/android-logcat-security/</a></li>
<li>逆向 OBi200 谷歌语音设备<br><a href="https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-1/" target="_blank" rel="external">https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-1/</a><br><a href="https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-2/" target="_blank" rel="external">https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-2/</a></li>
<li>[ IoTDevice ]  ARM exploitation for IoT - part 2<br><a href="https://quequero.org/2017/09/arm-exploitation-iot-episode-2" target="_blank" rel="external">https://quequero.org/2017/09/arm-exploitation-iot-episode-2</a></li>
<li>windows-event-forwarding - 一款使用 Windows 事件转发来进行事件的检测与响应的工具<br><a href="https://github.com/palantir/windows-event-forwarding" target="_blank" rel="external">https://github.com/palantir/windows-event-forwarding</a><br><a href="&#109;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#104;&#116;&#x74;&#x70;&#x73;&#x3a;&#x2f;&#x2f;&#x6d;&#x65;&#x64;&#105;&#117;&#109;&#x2e;&#99;&#x6f;&#x6d;&#x2f;&#64;&#x70;&#x61;&#108;&#x61;&#110;&#x74;&#105;&#114;&#x2f;&#119;&#x69;&#x6e;&#100;&#111;&#x77;&#x73;&#45;&#x65;&#x76;&#x65;&#110;&#x74;&#45;&#102;&#111;&#114;&#119;&#97;&#x72;&#100;&#x69;&#110;&#x67;&#45;&#102;&#x6f;&#x72;&#x2d;&#x6e;&#x65;&#116;&#x77;&#x6f;&#x72;&#107;&#45;&#x64;&#x65;&#102;&#x65;&#x6e;&#115;&#101;&#x2d;&#99;&#x62;&#x32;&#48;&#x38;&#100;&#x35;&#x66;&#102;&#56;&#54;&#x66;">&#104;&#116;&#x74;&#x70;&#x73;&#x3a;&#x2f;&#x2f;&#x6d;&#x65;&#x64;&#105;&#117;&#109;&#x2e;&#99;&#x6f;&#x6d;&#x2f;&#64;&#x70;&#x61;&#108;&#x61;&#110;&#x74;&#105;&#114;&#x2f;&#119;&#x69;&#x6e;&#100;&#111;&#x77;&#x73;&#45;&#x65;&#x76;&#x65;&#110;&#x74;&#45;&#102;&#111;&#114;&#119;&#97;&#x72;&#100;&#x69;&#110;&#x67;&#45;&#102;&#x6f;&#x72;&#x2d;&#x6e;&#x65;&#116;&#x77;&#x6f;&#x72;&#107;&#45;&#x64;&#x65;&#102;&#x65;&#x6e;&#115;&#101;&#x2d;&#99;&#x62;&#x32;&#48;&#x38;&#100;&#x35;&#x66;&#102;&#56;&#54;&#x66;</a></li>
<li>ZDI 对补丁日的总结<br><a href="https://www.thezdi.com/blog/2017/9/12/the-september-2017-security-update-review" target="_blank" rel="external">https://www.thezdi.com/blog/2017/9/12/the-september-2017-security-update-review</a></li>
<li>[ Industry News ]  Kromtech 安全中心的人发现 超过 4000 个 ElasticSearch 服务器托管着 PoS 恶意软件(AlinaPOS、 JackPOS)<br><a href="https://www.bleepingcomputer.com/news/security/over-4-000-elasticsearch-servers-found-hosting-pos-malware-files/" target="_blank" rel="external">https://www.bleepingcomputer.com/news/security/over-4-000-elasticsearch-servers-found-hosting-pos-malware-files/</a></li>
<li>Strust2漏洞影响多个Cisco产品<br><a href="http://thehackernews.com/2017/09/apache-struts-flaws-cisco.html" target="_blank" rel="external">http://thehackernews.com/2017/09/apache-struts-flaws-cisco.html</a></li>
<li>CURL会有后门吗？<br><a href="https://daniel.haxx.se/blog/2017/09/12/the-backdoor-threat/" target="_blank" rel="external">https://daniel.haxx.se/blog/2017/09/12/the-backdoor-threat/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;CVE-2016-10190 FFmpeg Http协议 heap buffer overflo
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170912安全动态</title>
    <link href="http://kevien.github.io/2017/09/12/20170912%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/12/20170912安全动态/</id>
    <published>2017-09-12T13:47:54.000Z</published>
    <updated>2017-09-12T16:17:55.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>被黑掉的 WordPress 服务器分析<br><a href="https://www.codemetrix.net/examining-a-hacked-php-server/" target="_blank" rel="external">https://www.codemetrix.net/examining-a-hacked-php-server/</a></li>
<li>通过 DNS 响应欺骗来绕过域控制验证<br><a href="https://labs.detectify.com/2017/09/11/guest-blog-bypassing-domain-control-verification-with-dns-response-spoofing/" target="_blank" rel="external">https://labs.detectify.com/2017/09/11/guest-blog-bypassing-domain-control-verification-with-dns-response-spoofing/</a></li>
<li>使用 Excel.Application 和 DCOM 进行横向渗透<br><a href="https://posts.specterops.io/lateral-movement-using-excel-application-and-dcom-enigma0x3-on-wordpress-com-d11d56e504dc" target="_blank" rel="external">https://posts.specterops.io/lateral-movement-using-excel-application-and-dcom-enigma0x3-on-wordpress-com-d11d56e504dc</a></li>
<li>Siofra - DLL 劫持漏洞扫描器、PE 感染工具<br><a href="https://github.com/falexorr/Siofra" target="_blank" rel="external">https://github.com/falexorr/Siofra</a></li>
<li>基于 Windows Event Forwarding 机制的网络防御措施，之前也推送过一篇微软的《基于 Windows Event Forwarding 的入侵检测》<br><https: medium.com="" @palantir="" windows-event-forwarding-for-network-defense-cb208d5ff86f="" https:="" docs.microsoft.com="" en-us="" windows="" threat-protection="" use-windows-event-forwarding-to-assist-in-instrusion-detection=""></https:></li>
<li>Cuckoo Sandbox 分析框架更新 2.0.4 版本<br><a href="https://cuckoosandbox.org/blog/cuckoo-sandbox-204" target="_blank" rel="external">https://cuckoosandbox.org/blog/cuckoo-sandbox-204</a></li>
<li>The Road To HSTS<br><a href="https://engineeringblog.yelp.com/2017/09/the-road-to-hsts.html" target="_blank" rel="external">https://engineeringblog.yelp.com/2017/09/the-road-to-hsts.html</a></li>
<li>PaX/Grsecurity 新手教程   Grsecurity 是一套增强 Linux 内核安全的内核补丁集，能够轻松应对各种严重安全威胁。<br><a href="https://github.com/hardenedlinux/grsecurity-101-tutorials" target="_blank" rel="external">https://github.com/hardenedlinux/grsecurity-101-tutorials</a></li>
<li>据 Check Point 安全人员说 Windows 10 内置的 Linux Shell 可以被利用来隐藏恶意软件<br><a href="https://motherboard.vice.com/en_us/article/xwwexa/windows-10s-built-in-linux-shell-could-be-abused-to-hide-malware-researchers-say" target="_blank" rel="external">https://motherboard.vice.com/en_us/article/xwwexa/windows-10s-built-in-linux-shell-could-be-abused-to-hide-malware-researchers-say</a></li>
<li>Docker Daemon - Unprotected TCP Socket (Metasploit)<br><a href="https://www.exploit-db.com/exploits/42650/" target="_blank" rel="external">https://www.exploit-db.com/exploits/42650/</a></li>
<li>idb: 用于简化iOS渗透测试及研究的工具<br><a href="https://github.com/dmayer/idb" target="_blank" rel="external">https://github.com/dmayer/idb</a></li>
<li>【技术分享】在细节中捕捉恶魔 ：提升Cuckoo沙箱捕获恶意Office样本行为的能力<br><a href="http://bobao.360.cn/learning/detail/4409.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4409.html</a></li>
<li>[用 Java 写一个 JVM] （一）刚好够运行 HelloWorld<br><a href="https://www.v2ex.com/t/390110#reply16" target="_blank" rel="external">https://www.v2ex.com/t/390110#reply16</a></li>
<li>安息吧 REST API，GraphQL 长存<br><a href="https://segmentfault.com/a/1190000011109222" target="_blank" rel="external">https://segmentfault.com/a/1190000011109222</a></li>
<li>【技术分享】见招拆招：详谈COM接口函数Hook技术<br><a href="http://bobao.360.cn/learning/detail/4405.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4405.html</a></li>
<li>聊聊CVE漏洞编号和正式公开那些事<br><a href="http://blog.nsfocus.net/cve-vulnerability-numbers-officially-disclose/" target="_blank" rel="external">http://blog.nsfocus.net/cve-vulnerability-numbers-officially-disclose/</a></li>
<li>Chrome Unsafe-inline CSP Bypass<br><a href="https://www.math1as.com/index.php/archives/507/" target="_blank" rel="external">https://www.math1as.com/index.php/archives/507/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;被黑掉的 WordPress 服务器分析&lt;br&gt;&lt;a href=&quot;https://www.cod
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170911安全动态</title>
    <link href="http://kevien.github.io/2017/09/11/20170911%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/11/20170911安全动态/</id>
    <published>2017-09-11T10:20:11.000Z</published>
    <updated>2017-09-11T15:51:27.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Pwning the Dlink 850L routers and abusing the MyDlink Cloud protocol，研究员公开了 Dlink 850L 路由器的多个 0Day<br><a href="https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html" target="_blank" rel="external">https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html</a></li>
<li>逆向 Aura 智能闹钟<br><a href="https://courk.fr/index.php/2017/09/10/reverse-engineering-exploitation-connected-clock/" target="_blank" rel="external">https://courk.fr/index.php/2017/09/10/reverse-engineering-exploitation-connected-clock/</a></li>
<li>IOT 安全 – Part 2: IOT 攻击面<br><a href="http://payatu.com/iot-security-part-2-101-iot-attack-surface/" target="_blank" rel="external">http://payatu.com/iot-security-part-2-101-iot-attack-surface/</a></li>
<li>struts-pwn_CVE-2017-9805: S2-052 漏洞利用脚本<br><a href="https://github.com/mazen160/struts-pwn_CVE-2017-9805" target="_blank" rel="external">https://github.com/mazen160/struts-pwn_CVE-2017-9805</a></li>
<li>GreatSCT - 一款应用白名单绕过工具<br><a href="https://github.com/GreatSCT/GreatSCT" target="_blank" rel="external">https://github.com/GreatSCT/GreatSCT</a></li>
<li>古老的 MS08-067 漏洞中 MSRPC NetPathCanonicalize 路径格式化函数在处理 “..” 时的栈破坏漏洞分析<br><a href="http://www.tiagoalexandre.com/security/exploit%20development/2017/09/08/MS08-067" target="_blank" rel="external">http://www.tiagoalexandre.com/security/exploit%20development/2017/09/08/MS08-067</a></li>
<li>利用 ADS（Alternate Data Streams）Bypass UAC<br><a href="https://www.redcanary.com/blog/using-alternate-data-streams-bypass-user-account-controls/" target="_blank" rel="external">https://www.redcanary.com/blog/using-alternate-data-streams-bypass-user-account-controls/</a></li>
<li>维基解密是如何遭到黑客攻击的<br><a href="https://zhuanlan.zhihu.com/p/29162387" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/29162387</a></li>
<li>Web 安全方向上的资料整理<br><a href="https://github.com/CHYbeta/Web-Security-Learning" target="_blank" rel="external">https://github.com/CHYbeta/Web-Security-Learning</a></li>
<li>虐待二进制执行分析框架 Triton，挑战它的控制流图还原功能<br><a href="https://blog.quarkslab.com/mistreating-triton.html" target="_blank" rel="external">https://blog.quarkslab.com/mistreating-triton.html</a></li>
<li>软件供应链来源攻击分析报告<br><a href="https://mp.weixin.qq.com/s/I6cJ7xgT5mTESL0TXa1DBw" target="_blank" rel="external">https://mp.weixin.qq.com/s/I6cJ7xgT5mTESL0TXa1DBw</a></li>
<li>西方红玫瑰和辣条先生黑产组织深度分析报告<br><a href="http://www.freebuf.com/articles/paper/145777.html" target="_blank" rel="external">http://www.freebuf.com/articles/paper/145777.html</a></li>
<li>iOS也不安全？高危漏洞威胁近半果粉<br><a href="https://mp.weixin.qq.com/s/bwPwySM3ZjqLWyNN99a5ow" target="_blank" rel="external">https://mp.weixin.qq.com/s/bwPwySM3ZjqLWyNN99a5ow</a></li>
<li>如何将Pastebin上的信息应用于安全分析和威胁情报领域<br><a href="https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/" target="_blank" rel="external">https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/</a></li>
<li>DEDECMS 会员中心代码投稿缺陷可getshell<br><a href="https://mp.weixin.qq.com/s/_t6h7PosyVGsSAChqDQRfg" target="_blank" rel="external">https://mp.weixin.qq.com/s/_t6h7PosyVGsSAChqDQRfg</a></li>
<li>Windows内核驱动漏洞利用代码开发简介（part-1） - 环境设置  Windows内核漏洞利用代码开发开发简介（part2）：如何利用堆缓冲区溢出漏洞到系统shell<br><a href="https://glennmcgui.re/introduction-to-windows-kernel-exploitation-pt-1/" target="_blank" rel="external">https://glennmcgui.re/introduction-to-windows-kernel-exploitation-pt-1/</a><br><https: glennmcgui.re="" introduction-to-windows-kernel-driver-exploitation-pt-2=""></https:></li>
<li>苹果Touch ID安全性浅谈<br><a href="&#x6d;&#97;&#105;&#x6c;&#x74;&#x6f;&#x3a;&#x68;&#116;&#116;&#112;&#x73;&#x3a;&#x2f;&#47;&#109;&#x65;&#100;&#105;&#117;&#109;&#x2e;&#99;&#x6f;&#109;&#47;&#x40;&#x66;&#x73;&#116;&#105;&#x65;&#104;&#108;&#x65;&#x2f;&#100;&#x65;&#109;&#121;&#x73;&#116;&#x69;&#x66;&#x79;&#x69;&#110;&#x67;&#x2d;&#97;&#112;&#x70;&#x6c;&#x65;&#x73;&#45;&#116;&#x6f;&#117;&#x63;&#104;&#x2d;&#x69;&#x64;&#45;&#52;&#x38;&#x38;&#51;&#x64;&#x35;&#x31;&#50;&#x31;&#98;&#55;&#55;">&#x68;&#116;&#116;&#112;&#x73;&#x3a;&#x2f;&#47;&#109;&#x65;&#100;&#105;&#117;&#109;&#x2e;&#99;&#x6f;&#109;&#47;&#x40;&#x66;&#x73;&#116;&#105;&#x65;&#104;&#108;&#x65;&#x2f;&#100;&#x65;&#109;&#121;&#x73;&#116;&#x69;&#x66;&#x79;&#x69;&#110;&#x67;&#x2d;&#97;&#112;&#x70;&#x6c;&#x65;&#x73;&#45;&#116;&#x6f;&#117;&#x63;&#104;&#x2d;&#x69;&#x64;&#45;&#52;&#x38;&#x38;&#51;&#x64;&#x35;&#x31;&#50;&#x31;&#98;&#55;&#55;</a></li>
<li>Vulners Python API wrapper<br><a href="https://github.com/vulnersCom/api" target="_blank" rel="external">https://github.com/vulnersCom/api</a></li>
<li>手工逆 Chrome 扩展后门的一些思路<br><a href="https://mp.weixin.qq.com/s?__biz=MzA3NTEzMTUwNA==&amp;mid=2651081304&amp;idx=1&amp;sn=8f63e1cfd3261763ff8d982c045d0c51" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzA3NTEzMTUwNA==&amp;mid=2651081304&amp;idx=1&amp;sn=8f63e1cfd3261763ff8d982c045d0c51</a></li>
<li>【技术分享】how2heap总结-上  堆溢出<br><a href="http://bobao.360.cn/learning/detail/4386.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4386.html</a></li>
<li>python的多进程编程<br><a href="https://www.keakon.net/2017/09/09/Python%E7%9A%84%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%BC%96%E7%A8%8B" target="_blank" rel="external">https://www.keakon.net/2017/09/09/Python%E7%9A%84%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%BC%96%E7%A8%8B</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">深入的讲解了一些原理性的东西</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Pwning the Dlink 850L routers and abusing the My
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170908安全动态</title>
    <link href="http://kevien.github.io/2017/09/08/20170908%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/08/20170908安全动态/</id>
    <published>2017-09-08T02:40:59.000Z</published>
    <updated>2017-09-10T09:35:26.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Django debug page XSS漏洞（CVE-2017-12794）分析<br><a href="https://www.leavesongs.com/PENETRATION/django-debug-page-xss.html" target="_blank" rel="external">https://www.leavesongs.com/PENETRATION/django-debug-page-xss.html</a></li>
<li>Python 反序列化漏洞利用<br><a href="https://crowdshield.com/blog.php?name=exploiting-python-deserialization-vulnerabilities" target="_blank" rel="external">https://crowdshield.com/blog.php?name=exploiting-python-deserialization-vulnerabilities</a></li>
<li>攻击嵌入式设备与网络协议，来自 zer0con 大会<br><a href="https://pierrekim.github.io/advisories/z0-Owning_embedded_devices_and_network_protocols-redacted.pdf" target="_blank" rel="external">https://pierrekim.github.io/advisories/z0-Owning_embedded_devices_and_network_protocols-redacted.pdf</a></li>
<li>Source for macOS 10.12.5 and 10.12.6  macOS源码<br><a href="https://opensource.apple.com/release/macos-10125.html" target="_blank" rel="external">https://opensource.apple.com/release/macos-10125.html</a><br><a href="https://opensource.apple.com/release/macos-10126.html" target="_blank" rel="external">https://opensource.apple.com/release/macos-10126.html</a></li>
<li>SymGDB - 一款基于 Triton 的 GDB 符号执行插件<br><a href="https://github.com/SQLab/symgdbhttps://hitcon.org/2017/CMT/slide-files/d2_s1_r0.pdf" target="_blank" rel="external">https://github.com/SQLab/symgdbhttps://hitcon.org/2017/CMT/slide-files/d2_s1_r0.pdf</a></li>
<li>DKMC - 将 Payload 放到图片中实现免杀效果的工具<br><a href="https://github.com/Mr-Un1k0d3r/DKMC" target="_blank" rel="external">https://github.com/Mr-Un1k0d3r/DKMC</a></li>
<li>Windows 内核驱动漏洞利用系列 Part 1<br><a href="https://glennmcgui.re/introduction-to-windows-kernel-exploitation-pt-1/" target="_blank" rel="external">https://glennmcgui.re/introduction-to-windows-kernel-exploitation-pt-1/</a></li>
<li>Linux进程间代码注入<br><a href="https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html" target="_blank" rel="external">https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html</a></li>
<li>PiFinger：检测当前网络中是否存在Wifi- Pineapple，并评估当前wifi网络的安全性<br><a href="https://github.com/besimaltnok/PiFinger" target="_blank" rel="external">https://github.com/besimaltnok/PiFinger</a></li>
<li>Hunting Pastebin with PasteHunter<br><a href="https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/" target="_blank" rel="external">https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/</a></li>
<li>看我如何破解Dlink 850路由器然后滥用MyDlink Cloud协议<br><a href="https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html" target="_blank" rel="external">https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html</a></li>
<li>Abusing JavaScript frameworks to bypass XSS mitigations<br><a href="http://blog.portswigger.net/2017/09/abusing-javascript-frameworks-to-bypass.html" target="_blank" rel="external">http://blog.portswigger.net/2017/09/abusing-javascript-frameworks-to-bypass.html</a></li>
<li>Using Alternate Data Streams to Bypass User Account Controls<br><https: www.redcanary.com="" blog="" using-alternate-data-streams-bypass-user-account-controls=""><br><a href="https://github.com/enigma0x3/Misc-PowerShell-Stuff/blob/master/Invoke-WScriptBypassUAC.ps1" target="_blank" rel="external">https://github.com/enigma0x3/Misc-PowerShell-Stuff/blob/master/Invoke-WScriptBypassUAC.ps1</a></https:></li>
<li>渗透3389端口<br><a href="http://www.hackingarticles.in/penetration-testing-remote-desktop-port-3389/" target="_blank" rel="external">http://www.hackingarticles.in/penetration-testing-remote-desktop-port-3389/</a></li>
<li>安全研究人员披露D-Link路由器漏洞<br><a href="http://www.securityweek.com/unpatched-d-link-router-vulnerabilities-disclosed" target="_blank" rel="external">http://www.securityweek.com/unpatched-d-link-router-vulnerabilities-disclosed</a></li>
<li>机器学习对抗资源集合<br><a href="https://github.com/yenchenlin/awesome-adversarial-machine-learning" target="_blank" rel="external">https://github.com/yenchenlin/awesome-adversarial-machine-learning</a></li>
<li>开源可定制远程管理工具（RAT）<br><a href="https://github.com/SySS-Research/outis" target="_blank" rel="external">https://github.com/SySS-Research/outis</a></li>
<li>XML的花式利用<br><a href="https://blog.pragmatists.com/xml-be-cautious-69a981fdc56a?gi=38c5799a5aa4" target="_blank" rel="external">https://blog.pragmatists.com/xml-be-cautious-69a981fdc56a?gi=38c5799a5aa4</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>C/C++ 开源库及示例代码<br><a href="https://github.com/programthink/opensource/blob/master/libs/cpp.wiki" target="_blank" rel="external">https://github.com/programthink/opensource/blob/master/libs/cpp.wiki</a></li>
<li>vc samples<br><a href="https://github.com/Microsoft/VCSamples" target="_blank" rel="external">https://github.com/Microsoft/VCSamples</a></li>
<li>Automated malcode analysis system<br><a href="https://github.com/dzzie/SysAnalyzer" target="_blank" rel="external">https://github.com/dzzie/SysAnalyzer</a></li>
<li>一个基于命令行的翻译工具<br><a href="https://github.com/soimort/translate-shell" target="_blank" rel="external">https://github.com/soimort/translate-shell</a><br><img src="/2017/09/08/20170908安全动态/trans.png" alt=""></li>
<li>python生成验证码<br><a href="https://lizonghang.github.io/2016/07/30/Python%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/" target="_blank" rel="external">https://lizonghang.github.io/2016/07/30/Python%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Django debug page XSS漏洞（CVE-2017-12794）分析&lt;br&gt;&lt;a 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>指针参数传递与数据安全</title>
    <link href="http://kevien.github.io/2017/09/07/%E6%8C%87%E9%92%88%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8/"/>
    <id>http://kevien.github.io/2017/09/07/指针参数传递与数据安全/</id>
    <published>2017-09-07T07:27:19.000Z</published>
    <updated>2017-09-13T11:38:53.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="知识扫盲"><a href="#知识扫盲" class="headerlink" title="知识扫盲"></a>知识扫盲</h4><ul>
<li>理解常值变量和符号常量的区别<br><br>在定义时用const修饰的普通变量称为常值变量.例如：<br><br>const int MaxLint = 1000;<br><br>const float Pi = 3.1415926;<br><br>指针做函数参数时，参数的传递效率非常高，通过指针可以对指针所指内存进行读/写。<br>在实际的编程中，若函数的形参为指针，则该函数只是读取指针所指内存的数据，则应将该指针用const修饰，以限制在函数体内对指针所指内存的修改。这样，即兼顾了指针参数的高效传递，又兼顾了指针所指数据的安全。如果函数的形参为引用，且该函数只是读取引用所关联的变量，则也应该采用相同的措施。<h4 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">#include &quot;iostream&quot;</div><div class="line">using namespace std;</div><div class="line">//void sp_to_dash(const char *s)</div><div class="line">//&#123;</div><div class="line">//	while(*s)</div><div class="line">//	&#123;</div><div class="line">//		if(*s == &apos; &apos;) *s = &apos;_&apos;;//添加const修饰，这里在修改指针所指变量的值时候，编译器会报错</div><div class="line">//		cout&lt;&lt; *s++;</div><div class="line">//	&#125;</div><div class="line">//&#125;</div><div class="line"></div><div class="line">void sp_to_dash(const char *s)</div><div class="line">&#123;</div><div class="line">	while(*s)</div><div class="line">	&#123;</div><div class="line">		if(*s == &apos; &apos;) cout&lt;&lt;&apos;_&apos;;</div><div class="line">		else cout&lt;&lt;*s;</div><div class="line">		s++;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">	sp_to_dash(&quot;hello !&quot;);</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;知识扫盲&quot;&gt;&lt;a href=&quot;#知识扫盲&quot; class=&quot;headerlink&quot; title=&quot;知识扫盲&quot;&gt;&lt;/a&gt;知识扫盲&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;理解常值变量和符号常量的区别&lt;br&gt;&lt;br&gt;在定义时用const修饰的普通变量称为常值变量.例如：&lt;br&gt;&lt;br
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170907安全动态</title>
    <link href="http://kevien.github.io/2017/09/07/20170907%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/07/20170907安全动态/</id>
    <published>2017-09-07T02:21:37.000Z</published>
    <updated>2017-09-07T17:12:05.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>3gstudent/Pentest-Tips: A collection of pentest tips<br><a href="https://github.com/3gstudent/Pentest-and-Development-Tips" target="_blank" rel="external">https://github.com/3gstudent/Pentest-and-Development-Tips</a></li>
<li>数字签名攻击报告：正在摧毁软件身份“信用体系”的安全危机<br><a href="http://www.freebuf.com/articles/network/146274.html" target="_blank" rel="external">http://www.freebuf.com/articles/network/146274.html</a></li>
<li>Hunting With Active Directory Replication Metadata<br><a href="https://posts.specterops.io/hunting-with-active-directory-replication-metadata-1dab2f681b19" target="_blank" rel="external">https://posts.specterops.io/hunting-with-active-directory-replication-metadata-1dab2f681b19</a></li>
<li>Syzygy - PE 文件的文件重写工具（Binary Rewriting），可以实现代码块分析和重构等功能<br><a href="http://doar-e.github.io/blog/2017/08/05/binary-rewriting-with-syzygy/" target="_blank" rel="external">http://doar-e.github.io/blog/2017/08/05/binary-rewriting-with-syzygy/</a></li>
<li>InfoCON - 专门收集各大信息安全会议资料的网站<br><a href="https://infocon.org/cons/" target="_blank" rel="external">https://infocon.org/cons/</a></li>
<li>FrauDroid - 一个精确的大规模自动化手机广告欺诈检测的方法<br><a href="https://arxiv.org/pdf/1709.01213.pdf" target="_blank" rel="external">https://arxiv.org/pdf/1709.01213.pdf</a></li>
<li>滥用 .htaccess 实现 Web 漏洞的利用<br><a href="&#x6d;&#x61;&#x69;&#108;&#116;&#111;&#58;&#x68;&#116;&#116;&#112;&#115;&#58;&#47;&#47;&#109;&#101;&#x64;&#105;&#x75;&#109;&#46;&#x63;&#x6f;&#x6d;&#x2f;&#64;&#x69;&#x6e;&#115;&#101;&#99;&#x75;&#x72;&#x69;&#116;&#x79;&#95;&#57;&#x32;&#52;&#55;&#x37;&#47;&#117;&#116;&#x69;&#x6c;&#105;&#122;&#x69;&#x6e;&#x67;&#45;&#104;&#116;&#x61;&#x63;&#99;&#101;&#115;&#115;&#45;&#102;&#x6f;&#x72;&#x2d;&#x65;&#120;&#x70;&#108;&#x6f;&#x69;&#x74;&#97;&#x74;&#x69;&#111;&#x6e;&#x2d;&#112;&#x75;&#x72;&#x70;&#x6f;&#x73;&#101;&#115;&#45;&#112;&#x61;&#114;&#x74;&#45;&#x31;&#x2d;&#x35;&#55;&#x33;&#x33;&#100;&#100;&#x37;&#x66;&#x63;&#56;&#x65;&#x62;">&#x68;&#116;&#116;&#112;&#115;&#58;&#47;&#47;&#109;&#101;&#x64;&#105;&#x75;&#109;&#46;&#x63;&#x6f;&#x6d;&#x2f;&#64;&#x69;&#x6e;&#115;&#101;&#99;&#x75;&#x72;&#x69;&#116;&#x79;&#95;&#57;&#x32;&#52;&#55;&#x37;&#47;&#117;&#116;&#x69;&#x6c;&#105;&#122;&#x69;&#x6e;&#x67;&#45;&#104;&#116;&#x61;&#x63;&#99;&#101;&#115;&#115;&#45;&#102;&#x6f;&#x72;&#x2d;&#x65;&#120;&#x70;&#108;&#x6f;&#x69;&#x74;&#97;&#x74;&#x69;&#111;&#x6e;&#x2d;&#112;&#x75;&#x72;&#x70;&#x6f;&#x73;&#101;&#115;&#45;&#112;&#x61;&#114;&#x74;&#45;&#x31;&#x2d;&#x35;&#55;&#x33;&#x33;&#100;&#100;&#x37;&#x66;&#x63;&#56;&#x65;&#x62;</a></li>
<li>Wireless IP Camera (P2P) WIFICAM 无线摄像头的多个高危漏洞详情<br><a href="https://pierrekim.github.io/blog/2017-03-08-camera-goahead-0day.html" target="_blank" rel="external">https://pierrekim.github.io/blog/2017-03-08-camera-goahead-0day.html</a></li>
<li>黑客免费提供的Cobian RAT中暗藏后门<br><a href="http://thehackernews.com/2017/09/backdoored-hacking-tools.html" target="_blank" rel="external">http://thehackernews.com/2017/09/backdoored-hacking-tools.html</a></li>
<li>如何制作基础认证钓鱼页面<br><a href="https://securitycafe.ro/2017/09/06/phishy-basic-authentication-prompts/" target="_blank" rel="external">https://securitycafe.ro/2017/09/06/phishy-basic-authentication-prompts/</a></li>
<li>JavaScript WebSocket Backdoor: 浏览器后门<br><a href="https://n0where.net/javascript-websocket-backdoor-browserbackdoor/" target="_blank" rel="external">https://n0where.net/javascript-websocket-backdoor-browserbackdoor/</a></li>
<li>Java-Deserialization-Cheat-Sheet  java反序列化<br><https: github.com="" grrrdog="" java-deserialization-cheat-sheet=""></https:></li>
<li>IPTables工作原理分析<br><https: n0where.net="" how-does-it-work-iptables=""></https:></li>
<li>Command and Control – DNS  DNS隧道<br><a href="https://pentestlab.blog/2017/09/06/command-and-control-dns/" target="_blank" rel="external">https://pentestlab.blog/2017/09/06/command-and-control-dns/</a></li>
<li>其它</li>
<li><p>Visual Studio 2015 中的 Visual C++<br><a href="https://msdn.microsoft.com/zh-cn/library/60k1461a.aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/60k1461a.aspx</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">如果大学时候用这种教材学的话，应该会好很多吧。。。</div></pre></td></tr></table></figure>
</li>
<li><p>linux的静态编译和动态编译<br><a href="http://blog.csdn.net/l_yangliu/article/details/6951005" target="_blank" rel="external">http://blog.csdn.net/l_yangliu/article/details/6951005</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">通过gcc去理解动态链接和静态链接的区别</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;3gstudent/Pentest-Tips: A collection of pentest 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>yara使用说明</title>
    <link href="http://kevien.github.io/2017/09/06/yara%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    <id>http://kevien.github.io/2017/09/06/yara使用说明/</id>
    <published>2017-09-06T08:55:40.000Z</published>
    <updated>2017-09-07T18:37:23.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul>
<li>yara工具用来帮助安全研究人员鉴别和对恶意软件进行分类的工具。我们可以通过编写规则来进行恶意软件的识别。<h4 id="yara-规则"><a href="#yara-规则" class="headerlink" title="yara 规则"></a>yara 规则</h4><a href="http://yara.readthedocs.io/en/v3.6.3/index.html" target="_blank" rel="external">最新规则官方文档V3.6.3</a><br><br>规则示例：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">rule silent_banker : banker</div><div class="line">&#123;</div><div class="line">    meta:</div><div class="line">        description = &quot;This is just an example&quot;</div><div class="line">        thread_level = 3</div><div class="line">        in_the_wild = true</div><div class="line">    strings:</div><div class="line">        $a = &#123;6A 40 68 00 30 00 00 6A 14 8D 91&#125;</div><div class="line">        $b = &#123;8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9&#125;</div><div class="line">        $c = &quot;UVODFRYSIHLNWPEJXQZAKCBGMT&quot;</div><div class="line">    condition:</div><div class="line">        $a or $b or $c</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这个就是一个名为rule silent_banker的规则，其中banker是规则的tag字段(可以有多个tag)，meta字段是规则的描述信息，strings是规则字段，condition则是条件判断的字段，这个规则的意思就是只要满足了字符串或a或b或c就会命中规则。<br>这里只是一个简单的规则，规则的创建可以使用通配符、大小写非敏感的字符串、正则表达式、特殊的操作符号等其它的特征。<br>通过python使用yara<br><img src="/2017/09/06/yara使用说明/yarapython.png" alt=""><br><img src="/2017/09/06/yara使用说明/help.png" alt=""><br>yara语法<br><br>silent-_banker叫做identifiers，是大小写敏感的且不能超过128个字符，且不能用以下的关键词，因为这些是yara的关键词<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">all	and	any	ascii	at	condition	contains</div><div class="line">entrypoint	false	filesize	fullword	for	global	in</div><div class="line">import	include	int8	int16	int32	int8be	int16be</div><div class="line">int32be	matches	meta	nocase	not	or	of</div><div class="line">private	rule	strings	them	true	uint8	uint16</div><div class="line">uint32	uint8be	uint16be	uint32be	wide</div></pre></td></tr></table></figure></p>
<p>字符串可以是文本字符串也可以是十六进制，ascii类型的使用双引号包裹，十六进制字符串使用大括号包裹。<br><br>注释语法和c语言相同。<br></p>
<p>* 三种string；<br><br>1.文本类型字符串<br><br>2.十六进制字符串<br><br>3.正则表达式</p>
<ul>
<li>十六进制Example<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">rule AlternativesExample1</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">       $hex_string = &#123; F4 23 ( 62 B4 | 56 ) 45 &#125;</div><div class="line"></div><div class="line">    condition:</div><div class="line">       $hex_string</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>valid<br>F42362B445或者F4235645</p>
<ul>
<li>字符串Example<br><br>默认是敏感的,但是可以通过nocase关键字设置成不敏感的<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">rule CaseInsensitiveTextExample</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $text_string = &quot;foobar&quot; nocase</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $text_string</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这样Foobar, FOOBAR, and fOoBaR都会被匹配到。</p>
<ul>
<li><p>宽字节的匹配<br><br>一个字符占两个字节</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">rule WideCharTextExample1</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $wide_string = &quot;Borland&quot; wide</div><div class="line"></div><div class="line">    condition:</div><div class="line">       $wide_string</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>fullword关键词<br><br>rule WideCharTextExample1</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $fullword_string = &quot;domain&quot; fullword</div><div class="line"></div><div class="line">    condition:</div><div class="line">       $fullword_string</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>www.mydomain.com  www.my-domain.com www.domain.com</p>
<ul>
<li><p>正则表达式<br><br>使用斜线包裹，而非双引号或者大括号。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"> rule RegExpExample1</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $re1 = /md5: [0-9a-fA-F]&#123;32&#125;/</div><div class="line">        $re2 = /state: (on|off)/</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $re1 and $re2</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>条件判断语句Conditions<br><br>可以没有特征strings但是不能没有strings字段<br><br>可以设定特征出现的次数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"> rule CountExample</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $a = &quot;dummy1&quot;</div><div class="line">        $b = &quot;dummy2&quot;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        #a == 6 and #b &gt; 10</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>偏移地址offset</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">rule InExample</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $a = &quot;dummy1&quot;</div><div class="line">        $b = &quot;dummy2&quot;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $a in (0..100) and $b in (100..filesize)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>特征a出现在0-0x100偏移且特征b出现在0x100之后。</p>
<ul>
<li>文件大小<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> rule FileSizeExample</div><div class="line">&#123;</div><div class="line">    condition:</div><div class="line">       filesize &gt; 200KB</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这个只能匹配文件，如果是运行着的程序的话，那么将永远不会匹配，因为这个时候filesize没有意义。</p>
<ul>
<li>特定位置的数据获取<br>PE文件的判断<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"> rule IsPE</div><div class="line">&#123;</div><div class="line">  condition:</div><div class="line">     // MZ signature at offset 0 and ...</div><div class="line">     uint16(0) == 0x5A4D and</div><div class="line">     // ... PE signature at offset stored in MZ header at 0x3C</div><div class="line">     uint32(uint32(0x3C)) == 0x00004550</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>PE文件结构中的前两个字节是DOS签名5A4D,即“MZ”。</p>
<ul>
<li><p>特征集合<br>rule OfExample1<br>{<br>strings:</p>
<pre><code>$a = &quot;dummy1&quot;
$b = &quot;dummy2&quot;
$c = &quot;dummy3&quot;
</code></pre><p>condition:</p>
<pre><code>2 of ($a,$b,$c)
</code></pre><p>}<br>满足两个特征即可</p>
</li>
</ul>
</li>
<li><p>引用其他规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">rule Rule1</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $a = &quot;dummy1&quot;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $a</div><div class="line">&#125;</div><div class="line"></div><div class="line">rule Rule2</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $a = &quot;dummy2&quot;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $a and Rule1</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>全局规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">global rule SizeLimit</div><div class="line">&#123;</div><div class="line">    condition:</div><div class="line">        filesize &lt; 2MB</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>规则标签<br>方便对输出的信息进行归类。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">rule TagsExample1 : Foo Bar Baz</div><div class="line">&#123;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"></div><div class="line">rule TagsExample2 : Bar</div><div class="line">&#123;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Metadata</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">rule MetadataExample</div><div class="line">&#123;</div><div class="line">    meta:</div><div class="line">        my_identifier_1 = &quot;Some string data&quot;</div><div class="line">        my_identifier_2 = 24</div><div class="line">        my_identifier_3 = true</div><div class="line"></div><div class="line">    strings:</div><div class="line">        $my_text_string = &quot;text here&quot;</div><div class="line">        $my_hex_string = &#123; E2 34 A1 C8 23 FB &#125;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $my_text_string or $my_hex_string</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>模块引用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">import &quot;pe&quot;</div><div class="line"></div><div class="line">rule Test</div><div class="line">&#123;</div><div class="line">  strings:</div><div class="line">      $a = &quot;some string&quot;</div><div class="line"></div><div class="line">  condition:</div><div class="line">      $a and pe.entry_point == 0x1000</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>文件包含</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">include &quot;other.yar&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><ul>
<li>容易踩坑的点<br>当扫描的是某个进程文件时候，这个时候是没有filesize属性的，也就永远不会满足的。此外还有通过文件偏移来判断PE也是不可行的。</li>
<li>web<br><a href="https://github.com/Tigzy/yaraeditor" target="_blank" rel="external">https://github.com/Tigzy/yaraeditor</a><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><a href="http://www.freebuf.com/articles/system/26373.html" target="_blank" rel="external">恶意软件模式匹配利器 – YARA</a><br><a href="http://www.freebuf.com/articles/96903.html" target="_blank" rel="external">YARA：抗击恶意代码的神兵利器</a><br><a href="https://www.aldeid.com/wiki/Pescanner" target="_blank" rel="external">PEScanner</a><br><a href="https://github.com/Neo23x0/yarGen" target="_blank" rel="external">yara规则自动生成</a><br><a href="https://countuponsecurity.com/tag/pescanner-py/" target="_blank" rel="external">UNLEASHING YARA – PART 2</a><br><a href="http://www.freebuf.com/sectool/92399.html" target="_blank" rel="external">教你构建自己的yara数据库</a><br><a href="https://github.com/Neo23x0/yarAnalyzer" target="_blank" rel="external">yarAnalyzer</a><br><a href="http://www.aptno1.com/YC/249.html" target="_blank" rel="external">yara简介及API解析</a><br><a href="http://blog.csdn.net/wowolook/article/details/44307283" target="_blank" rel="external">两个开源恶意代码的查杀引擎 clamav yara</a><br><a href="http://bruteforcelab.com/yara-a-beginners-guide.html" target="_blank" rel="external">http://bruteforcelab.com/yara-a-beginners-guide.html</a><br><a href="https://blog.malwarebytes.com/threat-analysis/2013/10/using-yara-to-attribute-malware/" target="_blank" rel="external">https://blog.malwarebytes.com/threat-analysis/2013/10/using-yara-to-attribute-malware/</a><br><a href="https://securityintelligence.com/signature-based-detection-with-yara/" target="_blank" rel="external">https://securityintelligence.com/signature-based-detection-with-yara/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;yara工具用来帮助安全研究人员鉴别和对恶意软件进行分类的工具。我们可以通过编写规则来进行恶意软件的识别。&lt;h4 id=&quot;yar
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170906安全动态</title>
    <link href="http://kevien.github.io/2017/09/06/20170906%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/06/20170906安全动态/</id>
    <published>2017-09-06T03:55:40.000Z</published>
    <updated>2017-09-07T06:36:09.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Struts2 S2-052 RCE分析与利用<br><a href="https://paper.seebug.org/383/" target="_blank" rel="external">https://paper.seebug.org/383/</a></li>
<li>使用 QL 寻找 Apache Struts 中的远程代码执行漏洞(CVE-2017-9805)<br><a href="https://lgtm.com/blog/apache_struts_CVE-2017-9805" target="_blank" rel="external">https://lgtm.com/blog/apache_struts_CVE-2017-9805</a><br><a href="https://xianzhi.aliyun.com/forum/read/2067.html" target="_blank" rel="external">https://xianzhi.aliyun.com/forum/read/2067.html</a></li>
<li>CSS-in-JS 打破了 JS 和 CSS 之间的边界，为 CSS 注入提供了新的攻击界面<br><a href="https://reactarmory.com/answers/how-can-i-use-css-in-js-securely" target="_blank" rel="external">https://reactarmory.com/answers/how-can-i-use-css-in-js-securely</a></li>
<li>HEVD Stack Overflow 漏洞的利用，包括对 GS stack cookies 特性的绕过<br><a href="https://reactarmory.com/answers/how-can-i-use-css-in-js-securely" target="_blank" rel="external">https://reactarmory.com/answers/how-can-i-use-css-in-js-securely</a></li>
<li>联想笔记本（还有其他品牌）的 Synaptics 触控板驱动存在一个 Bug，每秒钟会扫描一次系统<br><a href="https://randomascii.wordpress.com/2017/09/05/hey-synaptics-can-you-please-stop-polling" target="_blank" rel="external">https://randomascii.wordpress.com/2017/09/05/hey-synaptics-can-you-please-stop-polling</a></li>
<li>如何 Dump 一个 Flash 芯片，来自 quarkslab<br><a href="https://blog.quarkslab.com/flash-dumping-part-i.html" target="_blank" rel="external">https://blog.quarkslab.com/flash-dumping-part-i.html</a></li>
<li>恶意的 Chrome 扩展程序窃取 Roblox 游戏币，通过 Discord 发送窃取的 Cookie<br><a href="http://blog.trendmicro.com/trendlabs-security-intelligence/malicous-chrome-extensions-stealing-roblox-game-currency-sending-cookies-via-discord/" target="_blank" rel="external">http://blog.trendmicro.com/trendlabs-security-intelligence/malicous-chrome-extensions-stealing-roblox-game-currency-sending-cookies-via-discord/</a></li>
<li>ypass macOS 10.13 内核新加的 “Secure Kernel Extension Loading” 内核模块加载保护特性<br><a href="https://objective-see.com/blog/blog_0x21.html" target="_blank" rel="external">https://objective-see.com/blog/blog_0x21.html</a></li>
<li>MTuner - 一个可用于 Windows, PS4, PS3 上的 memory profiler、内存泄漏分析工具<br><a href="https://github.com/milostosic/MTuner" target="_blank" rel="external">https://github.com/milostosic/MTuner</a></li>
<li>domain_analyzer - 一个可以搜寻域名的各类信息并分析安全问题的工具<br><a href="https://github.com/eldraco/domain_analyzer" target="_blank" rel="external">https://github.com/eldraco/domain_analyzer</a></li>
<li>Linux(x86)栈溢出exploit开发技巧“return-to-libc”<br><a href="https://mp.weixin.qq.com/s/W1lUMJHVT_6_7GYNsxWdWA" target="_blank" rel="external">https://mp.weixin.qq.com/s/W1lUMJHVT_6_7GYNsxWdWA</a></li>
<li>DIY监控程序: 滥用Apple的Call Relay协议<br><a href="http://www.martinvigo.com/diy-spy-program-abusing-apple-call-relay-protocol/" target="_blank" rel="external">http://www.martinvigo.com/diy-spy-program-abusing-apple-call-relay-protocol/</a></li>
<li>Mastercard互联网网关服务：Hashing设计缺陷<br><a href="http://tinyhack.com/2017/09/05/mastercard-internet-gateway-service-hashing-design-flaw/" target="_blank" rel="external">http://tinyhack.com/2017/09/05/mastercard-internet-gateway-service-hashing-design-flaw/</a></li>
<li>滥用可写Windows服务<br><a href="https://blog.didierstevens.com/2017/09/05/abusing-a-writable-windows-service/" target="_blank" rel="external">https://blog.didierstevens.com/2017/09/05/abusing-a-writable-windows-service/</a></li>
<li>通过静态分析检测Python Web应用程序中漏洞<br><a href="https://github.com/python-security/pyt" target="_blank" rel="external">https://github.com/python-security/pyt</a></li>
<li>Re-enjoying the ActiveX (and others) Fun in Chinese Customized Browsers<br><a href="https://justhaifei1.blogspot.com/2017/09/re-enjoying-activex-and-others.html" target="_blank" rel="external">https://justhaifei1.blogspot.com/2017/09/re-enjoying-activex-and-others.html</a></li>
<li>security things in Linux v4.13<br><a href="https://outflux.net/blog/archives/2017/09/05/security-things-in-linux-v4-13/" target="_blank" rel="external">https://outflux.net/blog/archives/2017/09/05/security-things-in-linux-v4-13/</a></li>
<li>Remotely Dump Linux RAM: LiMEaide<br><a href="https://n0where.net/remotely-dump-linux-ram-limeaide/" target="_blank" rel="external">https://n0where.net/remotely-dump-linux-ram-limeaide/</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4>macOS版微信竟可以这样消息防撤回<br><a href="http://www.jianshu.com/p/7f65287a2e7a" target="_blank" rel="external">http://www.jianshu.com/p/7f65287a2e7a</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Struts2 S2-052 RCE分析与利用&lt;br&gt;&lt;a href=&quot;https://pape
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170905安全动态</title>
    <link href="http://kevien.github.io/2017/09/05/20170905%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/05/20170905安全动态/</id>
    <published>2017-09-05T02:20:28.000Z</published>
    <updated>2017-09-06T11:42:26.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Injecting missing methods at runtime<br><a href="https://www.hopperapp.com/blog/?p=219" target="_blank" rel="external">https://www.hopperapp.com/blog/?p=219</a></li>
<li>利用 PasteHunter 从 Pastebin 中挖掘信息<br><a href="https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/" target="_blank" rel="external">https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/</a></li>
<li>基于 GDB 和 PEDA 的交互式 Linux Exploit 开发环境<br><a href="http://ropshell.com/peda/Linux_Interactive_Exploit_Development_with_GDB_and_PEDA_Slides.pdf" target="_blank" rel="external">http://ropshell.com/peda/Linux_Interactive_Exploit_Development_with_GDB_and_PEDA_Slides.pdf</a></li>
<li>macOS 全盘镜像（Image）文件静态解析工具<br><a href="https://github.com/ydkhatri/mac_apt" target="_blank" rel="external">https://github.com/ydkhatri/mac_apt</a></li>
<li>基于 SetThreadContext 的 DLL 注入<br><a href="https://blogs.microsoft.co.il/pavely/2017/09/05/dll-injection-with-setthreadcontext/" target="_blank" rel="external">https://blogs.microsoft.co.il/pavely/2017/09/05/dll-injection-with-setthreadcontext/</a></li>
<li>分析一个电信劫持跳转下载情色APP的案例<br><a href="https://www.92ez.com/?action=show&amp;id=23453" target="_blank" rel="external">https://www.92ez.com/?action=show&amp;id=23453</a></li>
<li>揭秘盗取“羊毛党”比特币的钓鱼攻击事件 | 一例C2服务器跟踪分析报告<br><a href="http://www.freebuf.com/articles/network/145985.html" target="_blank" rel="external">http://www.freebuf.com/articles/network/145985.html</a></li>
<li>SDN渗透测试实践<br><http: nss.kaist.ac.kr="" ?page_id="50"><br><http: 2017="" www.kitploit.com="" 09="" sdnpwn-sdn-penetration-testing-toolkit.html=""></http:></http:></li>
<li>基于Web的OSINT和主动侦察工具包<br><https: github.com="" ex0dus-0x="" d0xk1t=""></https:></li>
<li>Radium-Keylogger：基于Python的多功能键盘记录器<br><https: github.com="" mehulj94="" radium-keylogger=""></https:></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Injecting missing methods at runtime&lt;br&gt;&lt;a href=
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>window消息钩取</title>
    <link href="http://kevien.github.io/2017/09/04/window%E6%B6%88%E6%81%AF%E9%92%A9%E5%8F%96/"/>
    <id>http://kevien.github.io/2017/09/04/window消息钩取/</id>
    <published>2017-09-04T12:48:02.000Z</published>
    <updated>2017-09-05T03:45:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h4><p>在操作系统中安装全局钩子以后，只要进程接收到可以发出钩子的消息后，全局钩子的DLL文件会被操作系统自动或者强行地加载到该进程中。<br>主要是SetWindowsHookEx()这个API函数<br>Hook  SetWindowsHookEx(<br>    int idHook,   //hook type<br>    HOOKPROC lpfn //hook procedure<br>    HINSTANCE hMOd // hook Procedure 所属的DLL句柄<br>    DWORD dwThreadId // 想要挂钩的线程ID<br>)<br>钩子过程是由操作系统调用的回调函数，安装消息钩子的时候，钩子过程需要存在于某个DLL内部，且该DLL的实例句柄即是hMod.<br>这里要注意，当dwThreadId参数被设置为0时候，则安装的是全局钩子，他会影响到运行中的所有进程。<br>像是使用SetWindowsHookEx()设置好钩子之后，在某个进程中生成指定消息时，操作系统会将相关的DLL文件强制注入到相应进程，然后调用注册的钩子函数。</p>
<h4 id="实验记录"><a href="#实验记录" class="headerlink" title="实验记录"></a>实验记录</h4><ul>
<li>这里练习一下WH_KEYBOARD 这个键盘钩子，记录下钩子过程的地址后面用的到,为10046f00，其实就是keyboardProc函数<br><img src="/2017/09/04/window消息钩取/0.png" alt=""></li>
<li>附加进程-&gt;勾选debugging options中的Break on new module(dll)-&gt;运行HookMain.exe-&gt;在notepad中键盘输入-&gt;此时就有如下<br><img src="/2017/09/04/window消息钩取/1.png" alt=""></li>
<li>如下图所示，每当notepad.exe发生键盘输入事件的时候，调试就会停在此处。<br><img src="/2017/09/04/window消息钩取/2.png" alt=""><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4></li>
<li>我觉得这张图能很好的阐释windows钩子的原理<br><img src="/2017/09/04/window消息钩取/3.png" alt=""><br>spy++是一个功能十分强大的消息钩取程序，能够查看操作系统中来往的所有消息。</li>
<li>在windows中SetWindowsHookEx()这个API可以轻松实现消息钩子。<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4>逆向工程核心原理</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;原理介绍&quot;&gt;&lt;a href=&quot;#原理介绍&quot; class=&quot;headerlink&quot; title=&quot;原理介绍&quot;&gt;&lt;/a&gt;原理介绍&lt;/h4&gt;&lt;p&gt;在操作系统中安装全局钩子以后，只要进程接收到可以发出钩子的消息后，全局钩子的DLL文件会被操作系统自动或者强行地加载到该进程
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170904安全动态</title>
    <link href="http://kevien.github.io/2017/09/04/20170904%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/04/20170904安全动态/</id>
    <published>2017-09-04T03:51:17.000Z</published>
    <updated>2017-09-04T08:32:51.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>使用RDP跳过网络隔离<br><a href="https://rastamouse.me/2017/08/jumping-network-segregation-with-rdp/" target="_blank" rel="external">https://rastamouse.me/2017/08/jumping-network-segregation-with-rdp/</a></li>
<li>Malware source code database<br><a href="https://github.com/mwsrc" target="_blank" rel="external">https://github.com/mwsrc</a></li>
<li><p>Radare 2 逆向框架在二进制漏洞利用中的应用<br><a href="https://www.megabeets.net/a-journey-into-radare-2-part-1/" target="_blank" rel="external">https://www.megabeets.net/a-journey-into-radare-2-part-1/</a><br><a href="https://www.megabeets.net/a-journey-into-radare-2-part-2/" target="_blank" rel="external">https://www.megabeets.net/a-journey-into-radare-2-part-2/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">像是od和ida的结合体，有兴趣的童鞋可以实践一下，发篇文章。</div></pre></td></tr></table></figure>
</li>
<li><p>恶意样本分析手册——API函数篇<br><a href="http://blog.nsfocus.net/malware-sample-analysis-api/" target="_blank" rel="external">http://blog.nsfocus.net/malware-sample-analysis-api/</a></p>
</li>
<li>x86 架构有可能多于一种 Opcodes 对应同一条汇编指令，比如 0xCC/0xCD 0x03 都对应 int 3 指令。这篇 Blog 作者利用这个特性检测调试器的存在<br><a href="http://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html" target="_blank" rel="external">http://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html</a></li>
<li>Windows COM 远程控制<br><a href="https://pentestlab.blog/2017/09/01/command-and-control-windows-com/" target="_blank" rel="external">https://pentestlab.blog/2017/09/01/command-and-control-windows-com/</a></li>
<li>《Windows for Reverse Engineers》，这篇 Paper 总结了很多 Windows 系统与逆向有关的机制和特性<br><a href="http://www.cse.tkk.fi/fi/opinnot/T-110.6220/2014_Reverse_Engineering_Malware_AND_Mobile_Platform_Security_AND_Software_Security/luennot-files/T1106220.pdf" target="_blank" rel="external">http://www.cse.tkk.fi/fi/opinnot/T-110.6220/2014_Reverse_Engineering_Malware_AND_Mobile_Platform_Security_AND_Software_Security/luennot-files/T1106220.pdf</a></li>
<li>利用 Numpy v1.11.0 的整数溢出漏洞实现 Python 沙箱环境的逃逸：<br><a href="https://hackernoon.com/python-sandbox-escape-via-a-memory-corruption-bug-19dde4d5fea5" target="_blank" rel="external">https://hackernoon.com/python-sandbox-escape-via-a-memory-corruption-bug-19dde4d5fea5</a></li>
<li>2017年8月最佳的 5 个安全工具<br><a href="https://medium.com/hack-with-github/top-5-security-tools-august-2017-bbae4e155c59" target="_blank" rel="external">https://medium.com/hack-with-github/top-5-security-tools-august-2017-bbae4e155c59</a></li>
<li>Web 中的代码重用攻击：通过脚本小工具绕过跨站脚本防御措施<br><a href="http://sebastian-lekies.de/papers/ccs_gadgets.pdf" target="_blank" rel="external">http://sebastian-lekies.de/papers/ccs_gadgets.pdf</a></li>
<li>监视 Windows 终端活动 Part2<br><a href="https://www.fireeye.com/blog/threat-research/2017/08/monitoring-windows-console-activity-part-two.html" target="_blank" rel="external">https://www.fireeye.com/blog/threat-research/2017/08/monitoring-windows-console-activity-part-two.html</a></li>
<li>浅谈多浏览器的自动化测试<br><a href="http://www.freebuf.com/articles/others-articles/145586.html" target="_blank" rel="external">http://www.freebuf.com/articles/others-articles/145586.html</a></li>
<li>Use COM Object hijacking to maintain persistence——Hijack explorer.exe<br><a href="https://3gstudent.github.io/3gstudent.github.io/Use-COM-Object-hijacking-to-maintain-persistence-Hijack-explorer.exe/" target="_blank" rel="external">https://3gstudent.github.io/3gstudent.github.io/Use-COM-Object-hijacking-to-maintain-persistence-Hijack-explorer.exe/</a></li>
<li>利用 InstallUtil.exe 绕过应用白名单的文件禁止执行保护<br><a href="http://subt0x10.blogspot.com/2017/09/banned-file-execution-via.html" target="_blank" rel="external">http://subt0x10.blogspot.com/2017/09/banned-file-execution-via.html</a></li>
<li>EvilAbigail:Automated Linux evil maid attack<br><a href="https://github.com/GDSSecurity/EvilAbigail" target="_blank" rel="external">https://github.com/GDSSecurity/EvilAbigail</a></li>
<li>HomeBrew 去年下载量排名<br><a href="https://brew.sh/analytics/install-on-request/" target="_blank" rel="external">https://brew.sh/analytics/install-on-request/</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>uptime   获取主机运行</li>
<li>Introduction to Code Signing<br><a href="https://msdn.microsoft.com/en-us/library/ms537361(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/ms537361(v=vs.85).aspx</a></li>
<li>Authenticode签名在未签名代码中的应用详解<br><a href="http://bobao.360.cn/learning/detail/4341.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4341.html</a></li>
<li>为何大量网站不能抓取?爬虫突破封禁的6种常见方法【岂安低调分享】<br><a href="https://mp.weixin.qq.com/s?__biz=MzIxNDE4MzA4OQ==&amp;mid=2651024379&amp;idx=1&amp;sn=bd30294fb00cf22a20759503ebb0169e&amp;scene=21" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzIxNDE4MzA4OQ==&amp;mid=2651024379&amp;idx=1&amp;sn=bd30294fb00cf22a20759503ebb0169e&amp;scene=21</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;使用RDP跳过网络隔离&lt;br&gt;&lt;a href=&quot;https://rastamouse.me/20
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170901安全动态</title>
    <link href="http://kevien.github.io/2017/09/01/20170901%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/01/20170901安全动态/</id>
    <published>2017-09-01T03:04:37.000Z</published>
    <updated>2017-09-03T07:12:09.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>模板引擎的相关漏洞利用<br><a href="https://mp.weixin.qq.com/s?__biz=MzA3Mzk1MDk1NA==&amp;mid=2651903993&amp;idx=1&amp;sn=8347385192b406f1bfe50c03c22b610d&amp;chksm=84e3447cb394cd6a509562640ab9b73e09c8ae8701a9dc3589c2c45e2819da930c9e5c984ee9&amp;mpshare=1&amp;scene=23&amp;srcid=0901TU90QnMmmecbDKGCNW0E#rd" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzA3Mzk1MDk1NA==&amp;mid=2651903993&amp;idx=1&amp;sn=8347385192b406f1bfe50c03c22b610d&amp;chksm=84e3447cb394cd6a509562640ab9b73e09c8ae8701a9dc3589c2c45e2819da930c9e5c984ee9&amp;mpshare=1&amp;scene=23&amp;srcid=0901TU90QnMmmecbDKGCNW0E#rd</a></li>
<li><p>BlackHat 官方陆续在 Youtube 上公开 BlackHat USA 2017 会议的视频<br><a href="https://www.youtube.com/channel/UCJ6q9Ie29ajGqKApbLqfBOg" target="_blank" rel="external">https://www.youtube.com/channel/UCJ6q9Ie29ajGqKApbLqfBOg</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">关注的小伙伴儿赶紧看一下了</div></pre></td></tr></table></figure>
</li>
<li><p>Instagram 遭受数据泄露，黑客获得大量用户信息，包括私人手机号、邮箱地址等：<br><a href="https://www.techposts.net/instagram-suffered-data-breach-hacker-gained-contact-information/" target="_blank" rel="external">https://www.techposts.net/instagram-suffered-data-breach-hacker-gained-contact-information/</a></p>
</li>
<li>HackSysExtremeVulnerableDriver 驱动一个任意地址写漏洞的分析和利用<br><a href="https://blahcat.github.io/2017/08/31/arbitrary-write-primitive-in-windows-kernel-hevd/" target="_blank" rel="external">https://blahcat.github.io/2017/08/31/arbitrary-write-primitive-in-windows-kernel-hevd/</a></li>
<li>澳大利亚的维多利亚洲去年被盗汽车 1.6 万辆，损失 1.7 亿美金。有位研究员打算写一个车载车牌扫描器，车辆被盗时会自动报警通知<br><a href="https://medium.freecodecamp.org/how-i-replicated-an-86-million-project-in-57-lines-of-code-277031330ee9" target="_blank" rel="external">https://medium.freecodecamp.org/how-i-replicated-an-86-million-project-in-57-lines-of-code-277031330ee9</a></li>
<li>集成 Google Voice 功能的 OBi200 VOIP 网关设备固件的逆向<br><a href="https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-1/" target="_blank" rel="external">https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-1/</a></li>
<li>CertReq 工具可以被用于将 Windows 系统存储的证书信息发送至远程服务器<br><a href="https://www.doyler.net/security-not-included/certreq-exfiltration" target="_blank" rel="external">https://www.doyler.net/security-not-included/certreq-exfiltration</a></li>
<li>反调试与绕过的奇淫技巧 Mac和IOS<br><a href="http://iosre.com/t/topic/9351" target="_blank" rel="external">http://iosre.com/t/topic/9351</a></li>
<li>2000元不到，他就在某宝上整出了一套伪基站装备<br><a href="https://mp.weixin.qq.com/s/C0vV0l1JvlR1XnNEpo9hhA" target="_blank" rel="external">https://mp.weixin.qq.com/s/C0vV0l1JvlR1XnNEpo9hhA</a></li>
<li>RedSnarf：用于Windows环境的渗透测试工具<br><a href="https://github.com/nccgroup/redsnarf" target="_blank" rel="external">https://github.com/nccgroup/redsnarf</a></li>
<li>复现CVE-2017-12858<br><a href="http://www.hhjack.com/analysis_cve-2017-12858/" target="_blank" rel="external">http://www.hhjack.com/analysis_cve-2017-12858/</a></li>
<li>实现 macOS 内核监控的几种方法<br><a href="https://paper.seebug.org/380/" target="_blank" rel="external">https://paper.seebug.org/380/</a></li>
<li>引用外部脚本的隐患及防御<br><a href="https://mp.weixin.qq.com/s/EFoqTCdedJrNkzMYokrm7A" target="_blank" rel="external">https://mp.weixin.qq.com/s/EFoqTCdedJrNkzMYokrm7A</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4>这样用每次都要在命令前输入proxychains4，比较麻烦，可以用proxychains4代理一个shell，在shell中执行的命令就会自动使用代理了，例如：<br>proxychains4  -q /bin/bash<br>可以把上面的命令加入到用户的.bashrc或者.bash_profile中,用户登录后自动代理一个bash shell,这就有点像全局代理了<br>抽时间研究一下AdminLTE框架</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;模板引擎的相关漏洞利用&lt;br&gt;&lt;a href=&quot;https://mp.weixin.qq.com
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>defcon-25-workshop代码解读 partII</title>
    <link href="http://kevien.github.io/2017/08/31/defcon-25-workshop%E4%BB%A3%E7%A0%81%E8%A7%A3%E8%AF%BB-partII/"/>
    <id>http://kevien.github.io/2017/08/31/defcon-25-workshop代码解读-partII/</id>
    <published>2017-08-31T09:48:55.000Z</published>
    <updated>2017-09-01T10:44:10.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>11.locklogger - injects into winlogon.exe and keylogs  注入winlogon.exe以及键盘记录<br>dll注入winlogon并进行键盘记录，这里的关键点应该是dll注入winlogon进程<br><a href="http://blog.csdn.net/suppercoder/article/details/17167537" target="_blank" rel="external">关于win7的session0隔离的总结</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">使用OutputDebugStringA()函数可以将调试信息输出，然后用debugview工具进行查看。</div><div class="line">ANSI的ASCII字符集及其派生字符集（也称多字节字符集）比较旧，Unicode字符集比较新，固定以双字节表示一个字。</div><div class="line">操作字符串的API在声明时，会指定字符集。每个含有字符串的API同时有两个版本：即ANSI，Unicode。尾部带A的API是ANSI版本，带W的API是Unicode版本。例如：SetWindowTextA，是ANSI函数；而SetWindowTextW，是Unicode函数.</div><div class="line">_tmain()是unicode版本的的main()</div><div class="line">VS注释与取消注释快捷键</div><div class="line">CTRL + K , CTRL + C(注释)</div><div class="line">CTRL + K , CTRL + U(取消注释)</div></pre></td></tr></table></figure>
</li>
<li><p>12.puppetstrings - take a free ride into ring 0<br>没太懂</p>
</li>
<li>13.ThreadContinue - injection using SetThreadContext() and NtContinue()<br>利用SetThreadContext() and NtContinue()进行dll注入。</li>
<li>14.getsystem - gets system using Named Pipe impersonation<br>获取system权限，原理还不是太明白</li>
<li>15.steamroll - brute forces login credentials<br><img src="/2017/08/31/defcon-25-workshop代码解读-partII/1.png" alt=""><br>爆破登录信息，代码量比较大，之前看到过一个非常简单的爆破代码，利用的是LogonUser()函数。</li>
<li>16.combrowser - using IE COM object to make web requests<br>使用IE COM对象发送web请求，感觉用途不太大</li>
<li>17.httpbrowser - using HTTP API to make web requests<br>使用http的接口进行网络请求，之前发包好像用的都是自己封装的api函数。</li>
<li>18.toxicserpent - log all network traffic, poison, port knock C2<br>流量日志</li>
<li><p>19.RunShellcode - run shellcode from .NET</p>
</li>
<li><p>20.offsetfix - converting static analysis offsets with ASLR</p>
</li>
<li><p>21.rawhook - simple example showing function prologue hooking</p>
</li>
<li><p>22.wmiquery - shows how to look up AV using WMI<br>使用wmi查询AV</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;11.locklogger - injects into winlogon.exe and keylogs  注入winlogon.exe以及键盘记录&lt;br&gt;dll注入winlogon并进行键盘记录，这里的关键点应该是dll注入winlogon进程&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170831安全动态</title>
    <link href="http://kevien.github.io/2017/08/31/20170831%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/31/20170831安全动态/</id>
    <published>2017-08-31T06:54:08.000Z</published>
    <updated>2017-09-01T10:44:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>停更两天练车去了，经过近两个月的周末终于换来了驾照:D</p>
<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>HITB GSEC CTF Win Pwn 解题全记录之 babyshellcode<br><a href="https://paper.seebug.org/378/" target="_blank" rel="external">https://paper.seebug.org/378/</a></li>
<li>HITB CTF 2017 Pwn题研究<br><a href="http://0x48.pw/2017/08/29/0x49/" target="_blank" rel="external">http://0x48.pw/2017/08/29/0x49/</a></li>
<li>Pwnhub之奇妙的巨蟒 Writeup<br><a href="http://0x48.pw/2017/08/29/0x38/" target="_blank" rel="external">http://0x48.pw/2017/08/29/0x38/</a></li>
<li>通过一系列挑战来循序渐进学习 ROP<br><a href="https://ropemporium.com/" target="_blank" rel="external">https://ropemporium.com/</a></li>
<li>通过 NMAP 探测 SAP 服务<br><a href="https://erpscan.com/press-center/blog/sap-services-detection-via-nmap-probes/" target="_blank" rel="external">https://erpscan.com/press-center/blog/sap-services-detection-via-nmap-probes/</a></li>
<li>Disrupting AWS S3 Logging，这篇 Blog 介绍亚马逊 AWS 云中是如何存储用户行为日志的，如果用户的云主机被攻破，攻击者能不能进一步破坏云主机的日志记录<br><a href="http://blog.thinkst.com/2017/08/disrupting-aws-s3-logging.html" target="_blank" rel="external">http://blog.thinkst.com/2017/08/disrupting-aws-s3-logging.html</a></li>
<li>USB Malware Implicated in Fileless Attacks<br><a href="http://blog.trendmicro.com/trendlabs-security-intelligence/usb-malware-implicated-fileless-attacks/" target="_blank" rel="external">http://blog.trendmicro.com/trendlabs-security-intelligence/usb-malware-implicated-fileless-attacks/</a></li>
<li>Nili - 一款集网络扫描、中间人攻击、协议逆向与 Fuzz 为一体的工具<br><a href="https://github.com/niloofarkheirkhah/nili" target="_blank" rel="external">https://github.com/niloofarkheirkhah/nili</a></li>
<li>Jinja2 模版注入过滤器绕过<br><a href="https://0day.work/jinja2-template-injection-filter-bypasses/" target="_blank" rel="external">https://0day.work/jinja2-template-injection-filter-bypasses/</a></li>
<li>大数据时代下的隐私保护<br><a href="https://mp.weixin.qq.com/s/Gykx7qrRUL6qgE7hT6hhPA" target="_blank" rel="external">https://mp.weixin.qq.com/s/Gykx7qrRUL6qgE7hT6hhPA</a></li>
<li>专注于逆向工程方向的 Rolf Rolles 和 Möbius 公开了许多他们之前的研究<br><a href="http://www.msreverseengineering.com/research" target="_blank" rel="external">http://www.msreverseengineering.com/research</a></li>
<li>pawn - 从基于 Intel 的工作站和笔记本电脑中提取 BIOS 固件的工具<br><a href="https://github.com/google/pawn" target="_blank" rel="external">https://github.com/google/pawn</a></li>
<li>代码未写，漏洞已出—架构和设计的安全<br><a href="http://djt.qq.com/article/view/1555" target="_blank" rel="external">http://djt.qq.com/article/view/1555</a></li>
<li>先知XSS挑战赛 - L3m0n Writeup<br><a href="https://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247484070&amp;idx=1&amp;sn=673e20a08d9ae6c3de60ca48110b920a" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247484070&amp;idx=1&amp;sn=673e20a08d9ae6c3de60ca48110b920a</a></li>
<li>Anti-disassembly on ARM (IDA, specifically)<br><a href="https://kbdsmoke.me/anti-disassembly-on-arm-ida-specifically/" target="_blank" rel="external">https://kbdsmoke.me/anti-disassembly-on-arm-ida-specifically/</a></li>
<li>如何绕过Windows Server 2008 R2上的身份验证<br><a href="http://www.hackingtutorials.org/general-tutorials/bypass-authentication-windows-server-2008-r2/" target="_blank" rel="external">http://www.hackingtutorials.org/general-tutorials/bypass-authentication-windows-server-2008-r2/</a></li>
<li>DOM Based Angular Sandbox Escapes by Gareth Hayes<br><a href="https://www.youtube.com/watch?v=jlSI5aVTEIg&amp;feature=youtu.be&amp;a=" target="_blank" rel="external">https://www.youtube.com/watch?v=jlSI5aVTEIg&amp;feature=youtu.be&amp;a=</a></li>
<li>PyMultitor：Python多线程Tor代理<br><a href="https://github.com/realgam3/pymultitor" target="_blank" rel="external">https://github.com/realgam3/pymultitor</a></li>
<li>[质量局!!]HITB GSEC CTF WIN PWN解题全记录之BABYSTACK<br><a href="https://whereisk0shl.top/post/hitb_gsec_ctf_babystack_writeup" target="_blank" rel="external">https://whereisk0shl.top/post/hitb_gsec_ctf_babystack_writeup</a></li>
<li>Oracle Java和Apache Xerces PDF/Docx服务器端拒绝服务漏洞<br><a href="https://blogs.securiteam.com/index.php/archives/3271" target="_blank" rel="external">https://blogs.securiteam.com/index.php/archives/3271</a></li>
<li>Decoding malware via simple statistical analysis<br><a href="https://blog.nviso.be/2017/08/30/decoding-malware-via-simple-statistical-analysis/" target="_blank" rel="external">https://blog.nviso.be/2017/08/30/decoding-malware-via-simple-statistical-analysis/</a></li>
<li>Pharos Binary Static Analysis Tools Released on Github Pharos二进制静态分析工具<br><a href="https://insights.sei.cmu.edu/sei_blog/2017/08/pharos-binary-static-analysis-tools-released-on-github.html" target="_blank" rel="external">https://insights.sei.cmu.edu/sei_blog/2017/08/pharos-binary-static-analysis-tools-released-on-github.html</a></li>
<li>How To Chain Commands in Linux<br><a href="https://n0where.net/how-to-chain-commands-in-linux/" target="_blank" rel="external">https://n0where.net/how-to-chain-commands-in-linux/</a></li>
<li>Bug Bounty：热门航空网站上的SQLi和XSS漏洞<br><a href="&#x6d;&#97;&#x69;&#108;&#x74;&#x6f;&#x3a;&#x68;&#116;&#116;&#x70;&#x73;&#x3a;&#x2f;&#47;&#x6d;&#101;&#x64;&#105;&#x75;&#109;&#x2e;&#99;&#111;&#109;&#x2f;&#x40;&#x6d;&#x6b;&#104;&#105;&#122;&#101;&#x72;&#x6a;&#x61;&#118;&#101;&#100;&#x2f;&#115;&#x71;&#108;&#105;&#x2d;&#120;&#115;&#115;&#45;&#x76;&#x75;&#108;&#x6e;&#101;&#114;&#x61;&#x62;&#105;&#x6c;&#105;&#116;&#105;&#101;&#x73;&#45;&#x69;&#x6e;&#x2d;&#x61;&#45;&#112;&#x6f;&#112;&#117;&#x6c;&#97;&#114;&#45;&#97;&#x69;&#114;&#108;&#105;&#110;&#101;&#115;&#x2d;&#x77;&#101;&#x62;&#x73;&#x69;&#x74;&#x65;&#x2d;&#x62;&#117;&#103;&#x62;&#111;&#x75;&#110;&#x74;&#x79;&#x2d;&#x70;&#111;&#99;&#45;&#x35;&#x63;&#x30;&#x64;&#x37;&#49;&#102;&#57;&#51;&#x35;&#99;&#49;">&#x68;&#116;&#116;&#x70;&#x73;&#x3a;&#x2f;&#47;&#x6d;&#101;&#x64;&#105;&#x75;&#109;&#x2e;&#99;&#111;&#109;&#x2f;&#x40;&#x6d;&#x6b;&#104;&#105;&#122;&#101;&#x72;&#x6a;&#x61;&#118;&#101;&#100;&#x2f;&#115;&#x71;&#108;&#105;&#x2d;&#120;&#115;&#115;&#45;&#x76;&#x75;&#108;&#x6e;&#101;&#114;&#x61;&#x62;&#105;&#x6c;&#105;&#116;&#105;&#101;&#x73;&#45;&#x69;&#x6e;&#x2d;&#x61;&#45;&#112;&#x6f;&#112;&#117;&#x6c;&#97;&#114;&#45;&#97;&#x69;&#114;&#108;&#105;&#110;&#101;&#115;&#x2d;&#x77;&#101;&#x62;&#x73;&#x69;&#x74;&#x65;&#x2d;&#x62;&#117;&#103;&#x62;&#111;&#x75;&#110;&#x74;&#x79;&#x2d;&#x70;&#111;&#99;&#45;&#x35;&#x63;&#x30;&#x64;&#x37;&#49;&#102;&#57;&#51;&#x35;&#99;&#49;</a></li>
<li>Understanding Log Analysis of Web Server<br><a href="http://www.hackingarticles.in/understanding-log-analysis-web-server/" target="_blank" rel="external">http://www.hackingarticles.in/understanding-log-analysis-web-server/</a></li>
<li>[BBP系列二] Uber XSS via Cookie<br><a href="http://zhchbin.github.io/2017/08/30/Uber-XSS-via-Cookie/" target="_blank" rel="external">http://zhchbin.github.io/2017/08/30/Uber-XSS-via-Cookie/</a></li>
<li>Malicious GIT HTTP Server<br><a href="https://packetstormsecurity.com/files/143965/git_submodule_command_exec.rb.txt" target="_blank" rel="external">https://packetstormsecurity.com/files/143965/git_submodule_command_exec.rb.txt</a></li>
<li>探索低功耗蓝牙之看我如何逆向物联网灯泡并控制它<br><a href="http://www.freebuf.com/articles/terminal/145528.html" target="_blank" rel="external">http://www.freebuf.com/articles/terminal/145528.html</a></li>
<li>逆向一款恶意Eclipse插件的经历<br><a href="http://www.freebuf.com/articles/web/145677.html" target="_blank" rel="external">http://www.freebuf.com/articles/web/145677.html</a></li>
<li>Exploit之初识Linux下缓冲区溢出<br><a href="http://www.freebuf.com/column/146179.html" target="_blank" rel="external">http://www.freebuf.com/column/146179.html</a></li>
<li>安全人员学习笔记——Web中间件之Tomcat篇<br><a href="http://www.freebuf.com/column/146169.html" target="_blank" rel="external">http://www.freebuf.com/column/146169.html</a></li>
<li>花生壳黑吃黑之一：Web练手基地<br><a href="http://www.freebuf.com/sectool/145718.html" target="_blank" rel="external">http://www.freebuf.com/sectool/145718.html</a></li>
<li>数字签名攻击报告：正在摧毁软件身份“信用体系”的安全危机<br><a href="http://bobao.360.cn/learning/detail/4333.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4333.html</a></li>
<li>“大宝剑”的用法：玩玩DEFCON后渗透工具Koadic<br><a href="http://www.freebuf.com/sectool/145674.html" target="_blank" rel="external">http://www.freebuf.com/sectool/145674.html</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>python计算字符串哈希<br>hashlib.md5(“abc”).hexdigest()</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;停更两天练车去了，经过近两个月的周末终于换来了驾照:D&lt;/p&gt;
&lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;HITB GSEC CTF
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170828安全动态&amp;&amp;defcon-25-workshop代码解读</title>
    <link href="http://kevien.github.io/2017/08/28/20170828%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/28/20170828安全动态/</id>
    <published>2017-08-28T01:21:21.000Z</published>
    <updated>2017-08-28T14:47:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>利用xwizard.exe加载dll<br><a href="http://www.4hou.com/technology/6969.html" target="_blank" rel="external">http://www.4hou.com/technology/6969.html</a></li>
<li>安全研究人员警告：超过1700台IoT设备和相关的telnet凭据已被泄露并公开放在网上<br><a href="http://securityaffairs.co/wordpress/62365/iot/iot-devices-credentials-leaked.html" target="_blank" rel="external">http://securityaffairs.co/wordpress/62365/iot/iot-devices-credentials-leaked.html</a></li>
<li>Apple iOS &lt;=10.3.1 - Kernel Exploit<br><a href="https://www.exploit-db.com/exploits/42555/" target="_blank" rel="external">https://www.exploit-db.com/exploits/42555/</a></li>
<li>大量服务器的登录凭证被PDF钓鱼泄露<br><a href="http://www.ringzerolabs.com/2017/08/large-victim-credential-server.html" target="_blank" rel="external">http://www.ringzerolabs.com/2017/08/large-victim-credential-server.html</a><br><a href="https://www.bilibili.com/video/av13897953/" target="_blank" rel="external">https://www.bilibili.com/video/av13897953/</a></li>
<li>AVPASS：可绕过Android恶意软件检测系统的工具<br><a href="https://github.com/sslab-gatech/avpass/blob/master/docs/README.md" target="_blank" rel="external">https://github.com/sslab-gatech/avpass/blob/master/docs/README.md</a><h4 id="每日代码分享"><a href="#每日代码分享" class="headerlink" title="每日代码分享"></a>每日代码分享</h4>来源:<br><a href="https://github.com/zerosum0x0/defcon-25-workshop" target="_blank" rel="external">https://github.com/zerosum0x0/defcon-25-workshop</a><br>这里主要介绍了window后渗透以及恶意软件的开发中的一些trick，做免杀的童鞋可以重点关注一下<br>1.asynclog - basic keylogger using GetAsyncKeyState()<br>不同于使用钩子函数进行键盘的记录，这里使用了GetAsyncKeyState()做键盘记录，api函数在User32.dll中实现。<br>3.hooklog 挂钩WH_KEYBOARD_LL 事件  注意要区分WH_KEYBOARD  这里的LL是low level的缩写<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">区别如下：</div><div class="line">https://stackoverflow.com/questions/10718009/difference-between-wh-keyboard-and-wh-keyboard-ll</div><div class="line">简单来说就是一个需要dll一个不需要dll.</div><div class="line">这里可以通过代码了解windows的消息机制。</div></pre></td></tr></table></figure>
</li>
</ul>
<p>4.IGO pre-main execution with C++ initialization<br>我理解的就是在main函数执行之前，会进行初始化的操作，通过编译链接运行代码，可以发现还可以在main函数之前执行我们的代码，确实和平常我们一贯的思路不一样。<br>5.tlscallback  pre-main execution with Thread Local Storage callback<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这个还不是特别明白用途 tlscallback.h头文件中的魔法</div></pre></td></tr></table></figure></p>
<p>6.importless - PE using WinAPI that has no imports<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">还不太懂，感觉好像不用IAT就可以使用windows的api，这里以MessageBox函数为例。</div></pre></td></tr></table></figure></p>
<p>7.printscreen - takes a screenshot by simulation of printscreen keypress<br>模拟按键printscreen键，过360<br>8.screenshot - takes a screenshot using device context and GDI+<br>还是屏幕截图，利用的是device contest和GDI+，也是过360的<br>9.reverseshell - basic reverse TCP shell<br>这里通过tasklist命令查找不到相应进程pid的映像名称，而网络连接中是可以看到的。<br>10.passfilter - password complexity filter DLL with logging<br>通过dll注入当密码改变的时候保存修改后的密码。<br>11.locklogger - injects into winlogon.exe and keylogs</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;利用xwizard.exe加载dll&lt;br&gt;&lt;a href=&quot;http://www.4hou.c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>可激活windows和office的KMS服务搭建</title>
    <link href="http://kevien.github.io/2017/08/26/%E5%8F%AF%E6%BF%80%E6%B4%BBwindows%E5%92%8Coffice%E7%9A%84KMS%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    <id>http://kevien.github.io/2017/08/26/可激活windows和office的KMS服务搭建/</id>
    <published>2017-08-26T08:15:32.000Z</published>
    <updated>2017-08-26T08:35:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><ul>
<li>碍于windows激活工具存在后门的情况，搭建一个kms服务器的方法倒是不错，也是朋友推荐的。<br>然后网上搜索了一下。<br>KMS(Key Management Service) .这个功能是在windows Vista中的Enterprise版本和Windows Server 2008中首次出现的一种新型产品激活机制，目的是为了Microsoft更好的“反盗版”。<br><a href="https://baike.baidu.com/item/KMS/66195" target="_blank" rel="external">摘自百度</a></li>
<li>github上开源了一个kms服务器的源码，<a href="https://github.com/Wind4/vlmcsd" target="_blank" rel="external">link</a><br>想深入研究原理的可以分析一下源码。<h4 id="安装和使用"><a href="#安装和使用" class="headerlink" title="安装和使用"></a>安装和使用</h4></li>
</ul>
<ol>
<li>一般安装在linux服务上，我的是安装在ubuntu服务器上的，安装脚本如下<br><a href="https://raw.githubusercontent.com/Wind4/vlmcsd/211e463ddd71f5df884080ce98d0fc5eb369b51f/scripts/install.sh" target="_blank" rel="external">https://raw.githubusercontent.com/Wind4/vlmcsd/211e463ddd71f5df884080ce98d0fc5eb369b51f/scripts/install.sh</a></li>
<li>安装完成后 vlmcsd -h 看一下所支持的命令<br>kms 默认的端口是1688，当然也可以自定义端口，参数是 -P</li>
<li>这个时候可以参考说明进行激活了,注意:自定义了端口的需要在host后面加上自定义的端口<br><a href="https://github.com/Wind4/vlmcsd/tree/211e463ddd71f5df884080ce98d0fc5eb369b51f" target="_blank" rel="external">https://github.com/Wind4/vlmcsd/tree/211e463ddd71f5df884080ce98d0fc5eb369b51f</a><br><a href="https://wwww.lvmoo.com/archives/517.html" target="_blank" rel="external">https://wwww.lvmoo.com/archives/517.html</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;碍于windows激活工具存在后门的情况，搭建一个kms服务器的方法倒是不错，也是朋友推荐的。&lt;br&gt;然后网上搜索了一下。&lt;br
    
    </summary>
    
      <category term="其它" scheme="http://kevien.github.io/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>20170825安全动态</title>
    <link href="http://kevien.github.io/2017/08/25/20170825%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/25/20170825安全动态/</id>
    <published>2017-08-25T02:15:19.000Z</published>
    <updated>2017-08-31T07:43:48.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>利用xwizard.exe加载dll<br><a href="http://www.4hou.com/technology/6969.html" target="_blank" rel="external">http://www.4hou.com/technology/6969.html</a></li>
<li>NativePayload_DNS - 通过 DNS 流量传输后门载荷以绕过反病毒软件的 C# 代码示例<br><a href="https://github.com/DamonMohammadbagher/NativePayload_DNS" target="_blank" rel="external">https://github.com/DamonMohammadbagher/NativePayload_DNS</a></li>
<li>物联网中的 ARM 漏洞利用<br><a href="https://mp.weixin.qq.com/s/VSWhMKjhq2Ge4bNvd7YBiA" target="_blank" rel="external">https://mp.weixin.qq.com/s/VSWhMKjhq2Ge4bNvd7YBiA</a></li>
<li>由正则引起的Wecenter拒绝服务漏洞<br><a href="http://www.0aa.me/index.php/archives/139/" target="_blank" rel="external">http://www.0aa.me/index.php/archives/139/</a></li>
<li>Salamandra：封闭环境中检测和定位spy microphones的工具<br><a href="https://github.com/eldraco/Salamandra" target="_blank" rel="external">https://github.com/eldraco/Salamandra</a></li>
<li>pentest-tools：渗透测试常用脚本收集<br><a href="https://github.com/gwen001/pentest-tools" target="_blank" rel="external">https://github.com/gwen001/pentest-tools</a></li>
<li>DPAT：域密码导出可用于Hashcat破解<br><a href="http://bobao.360.cn/learning/detail/4313.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4313.html</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>如何设置域名的 SPF 记录<br><a href="https://wzyboy.im/post/865.html" target="_blank" rel="external">https://wzyboy.im/post/865.html</a></li>
<li>pe装载器<br><a href="http://bbs.pediy.com/thread-106310.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-106310.htm</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;利用xwizard.exe加载dll&lt;br&gt;&lt;a href=&quot;http://www.4hou.c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux调试工具GDB入门</title>
    <link href="http://kevien.github.io/2017/08/24/linux%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7GDB%E5%85%A5%E9%97%A8/"/>
    <id>http://kevien.github.io/2017/08/24/linux调试工具GDB入门/</id>
    <published>2017-08-24T09:11:37.000Z</published>
    <updated>2017-08-24T09:12:35.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul>
<li>linux 调试工具 GDB 使用教程<br><a href="http://bbs.pediy.com/thread-77746.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-77746.htm</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;linux 调试工具 GDB 使用教程&lt;br&gt;&lt;a href=&quot;http
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>window逆向基础</title>
    <link href="http://kevien.github.io/2017/08/24/window%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/"/>
    <id>http://kevien.github.io/2017/08/24/window逆向基础/</id>
    <published>2017-08-24T09:06:38.000Z</published>
    <updated>2017-08-28T03:52:51.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="常见汇编指令助记"><a href="#常见汇编指令助记" class="headerlink" title="常见汇编指令助记"></a>常见汇编指令助记</h4><p>JG / JNLE：Jump when Greater / Jump when Not Less or Equal<br>JL / JNGE：Jump when Less / Jump when Not Greater or Equal<br>JGE / JNL：Jump when Greater or Equal / Jump when Not Less<br>JLE / JNG：Jump when Less or Equal / Jump when Not Greater<br>JE / JZ：Jump when Less / Jump when Zero</p>
<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul>
<li>API 函数 －－ API 绝密档案系列之一<br><a href="http://bbs.pediy.com/user-22319-1.htm" target="_blank" rel="external">http://bbs.pediy.com/user-22319-1.htm</a></li>
<li>Win32环境下函数调用的堆栈之研究<br><a href="http://bbs.pediy.com/thread-69909.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-69909.htm</a></li>
<li>汇编的学习<br><a href="http://bbs.pediy.com/user-90551-1-1.htm" target="_blank" rel="external">http://bbs.pediy.com/user-90551-1-1.htm</a><br><a href="http://bbs.pediy.com/user-202613-0-1.htm" target="_blank" rel="external">http://bbs.pediy.com/user-202613-0-1.htm</a></li>
<li>window线程<br><a href="http://bbs.pediy.com/thread-77556.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-77556.htm</a></li>
<li>C++类虚函数逆向学习总结<br><a href="http://bbs.pediy.com/thread-60538.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-60538.htm</a></li>
<li>MFC逆向初级研究<br><a href="http://bbs.pediy.com/thread-41087.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-41087.htm</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;常见汇编指令助记&quot;&gt;&lt;a href=&quot;#常见汇编指令助记&quot; class=&quot;headerlink&quot; title=&quot;常见汇编指令助记&quot;&gt;&lt;/a&gt;常见汇编指令助记&lt;/h4&gt;&lt;p&gt;JG / JNLE：Jump when Greater / Jump when Not Le
    
    </summary>
    
    
  </entry>
  
</feed>
