<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M0rk&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kevien.github.io/"/>
  <updated>2017-08-28T10:06:14.000Z</updated>
  <id>http://kevien.github.io/</id>
  
  <author>
    <name>M0rk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>20170828安全动态&amp;&amp;defcon代码分享</title>
    <link href="http://kevien.github.io/2017/08/28/20170828%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/28/20170828安全动态/</id>
    <published>2017-08-28T01:21:21.000Z</published>
    <updated>2017-08-28T10:06:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>利用xwizard.exe加载dll<br><a href="http://www.4hou.com/technology/6969.html" target="_blank" rel="external">http://www.4hou.com/technology/6969.html</a></li>
<li>安全研究人员警告：超过1700台IoT设备和相关的telnet凭据已被泄露并公开放在网上<br><a href="http://securityaffairs.co/wordpress/62365/iot/iot-devices-credentials-leaked.html" target="_blank" rel="external">http://securityaffairs.co/wordpress/62365/iot/iot-devices-credentials-leaked.html</a></li>
<li>Apple iOS &lt;=10.3.1 - Kernel Exploit<br><a href="https://www.exploit-db.com/exploits/42555/" target="_blank" rel="external">https://www.exploit-db.com/exploits/42555/</a></li>
<li>大量服务器的登录凭证被PDF钓鱼泄露<br><a href="http://www.ringzerolabs.com/2017/08/large-victim-credential-server.html" target="_blank" rel="external">http://www.ringzerolabs.com/2017/08/large-victim-credential-server.html</a><br><a href="https://www.bilibili.com/video/av13897953/" target="_blank" rel="external">https://www.bilibili.com/video/av13897953/</a></li>
<li>AVPASS：可绕过Android恶意软件检测系统的工具<br><a href="https://github.com/sslab-gatech/avpass/blob/master/docs/README.md" target="_blank" rel="external">https://github.com/sslab-gatech/avpass/blob/master/docs/README.md</a><h4 id="每日代码分享"><a href="#每日代码分享" class="headerlink" title="每日代码分享"></a>每日代码分享</h4>来源:<br><a href="https://github.com/zerosum0x0/defcon-25-workshop" target="_blank" rel="external">https://github.com/zerosum0x0/defcon-25-workshop</a><br>这里主要介绍了window后渗透以及恶意软件的开发中的一些trick，做免杀的童鞋可以重点关注一下<br>1.asynclog - basic keylogger using GetAsyncKeyState()<br>不同于使用钩子函数进行键盘的记录，这里使用了GetAsyncKeyState()做键盘记录，api函数在User32.dll中实现。<br>3.hooklog 挂钩WH_KEYBOARD_LL 事件  注意要区分WH_KEYBOARD  这里的LL是low level的缩写<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">区别如下：</div><div class="line">https://stackoverflow.com/questions/10718009/difference-between-wh-keyboard-and-wh-keyboard-ll</div><div class="line">简单来说就是一个需要dll一个不需要dll.</div><div class="line">这里可以通过代码了解windows的消息机制。</div></pre></td></tr></table></figure>
</li>
</ul>
<p>4.IGO pre-main execution with C++ initialization<br>我理解的就是在main函数执行之前，会进行初始化的操作，通过编译链接运行代码，可以发现还可以在main函数之前执行我们的代码，确实和平常我们一贯的思路不一样。<br>5.tlscallback  pre-main execution with Thread Local Storage callback<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这个还不是特别明白用途 tlscallback.h头文件中的魔法</div></pre></td></tr></table></figure></p>
<p>6.importless - PE using WinAPI that has no imports<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">还不太懂，感觉好像不用IAT就可以使用windows的api，这里以MessageBox函数为例。</div></pre></td></tr></table></figure></p>
<p>7.printscreen - takes a screenshot by simulation of printscreen keypress<br>模拟按键printscreen键，过360<br>8.screenshot - takes a screenshot using device context and GDI+<br>还是屏幕截图，利用的是device contest和GDI+，也是过360的<br>9.reverseshell - basic reverse TCP shell<br>这里通过tasklist命令查找不到相应进程pid的映像名称，而网络连接中是可以看到的。<br>10.passfilter - password complexity filter DLL with logging<br>通过dll注入当密码改变的时候保存修改后的密码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;利用xwizard.exe加载dll&lt;br&gt;&lt;a href=&quot;http://www.4hou.c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>可激活windows和office的KMS服务搭建</title>
    <link href="http://kevien.github.io/2017/08/26/%E5%8F%AF%E6%BF%80%E6%B4%BBwindows%E5%92%8Coffice%E7%9A%84KMS%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    <id>http://kevien.github.io/2017/08/26/可激活windows和office的KMS服务搭建/</id>
    <published>2017-08-26T08:15:32.000Z</published>
    <updated>2017-08-26T08:35:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><ul>
<li>碍于windows激活工具存在后门的情况，搭建一个kms服务器的方法倒是不错，也是朋友推荐的。<br>然后网上搜索了一下。<br>KMS(Key Management Service) .这个功能是在windows Vista中的Enterprise版本和Windows Server 2008中首次出现的一种新型产品激活机制，目的是为了Microsoft更好的“反盗版”。<br><a href="https://baike.baidu.com/item/KMS/66195" target="_blank" rel="external">摘自百度</a></li>
<li>github上开源了一个kms服务器的源码，<a href="https://github.com/Wind4/vlmcsd" target="_blank" rel="external">link</a><br>想深入研究原理的可以分析一下源码。<h4 id="安装和使用"><a href="#安装和使用" class="headerlink" title="安装和使用"></a>安装和使用</h4></li>
</ul>
<ol>
<li>一般安装在linux服务上，我的是安装在ubuntu服务器上的，安装脚本如下<br><a href="https://raw.githubusercontent.com/Wind4/vlmcsd/211e463ddd71f5df884080ce98d0fc5eb369b51f/scripts/install.sh" target="_blank" rel="external">https://raw.githubusercontent.com/Wind4/vlmcsd/211e463ddd71f5df884080ce98d0fc5eb369b51f/scripts/install.sh</a></li>
<li>安装完成后 vlmcsd -h 看一下所支持的命令<br>kms 默认的端口是1688，当然也可以自定义端口，参数是 -P</li>
<li>这个时候可以参考说明进行激活了,注意:自定义了端口的需要在host后面加上自定义的端口<br><a href="https://github.com/Wind4/vlmcsd/tree/211e463ddd71f5df884080ce98d0fc5eb369b51f" target="_blank" rel="external">https://github.com/Wind4/vlmcsd/tree/211e463ddd71f5df884080ce98d0fc5eb369b51f</a><br><a href="https://wwww.lvmoo.com/archives/517.html" target="_blank" rel="external">https://wwww.lvmoo.com/archives/517.html</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;碍于windows激活工具存在后门的情况，搭建一个kms服务器的方法倒是不错，也是朋友推荐的。&lt;br&gt;然后网上搜索了一下。&lt;br
    
    </summary>
    
      <category term="其它" scheme="http://kevien.github.io/categories/%E5%85%B6%E5%AE%83/"/>
    
    
  </entry>
  
  <entry>
    <title>20170825安全动态</title>
    <link href="http://kevien.github.io/2017/08/25/20170825%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/25/20170825安全动态/</id>
    <published>2017-08-25T02:15:19.000Z</published>
    <updated>2017-08-25T04:59:15.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>利用xwizard.exe加载dll<br><a href="http://www.4hou.com/technology/6969.html" target="_blank" rel="external">http://www.4hou.com/technology/6969.html</a></li>
<li>NativePayload_DNS - 通过 DNS 流量传输后门载荷以绕过反病毒软件的 C# 代码示例<br><a href="https://github.com/DamonMohammadbagher/NativePayload_DNS" target="_blank" rel="external">https://github.com/DamonMohammadbagher/NativePayload_DNS</a></li>
<li>物联网中的 ARM 漏洞利用<br><a href="https://mp.weixin.qq.com/s/VSWhMKjhq2Ge4bNvd7YBiA" target="_blank" rel="external">https://mp.weixin.qq.com/s/VSWhMKjhq2Ge4bNvd7YBiA</a></li>
<li>由正则引起的Wecenter拒绝服务漏洞<br><a href="http://www.0aa.me/index.php/archives/139/" target="_blank" rel="external">http://www.0aa.me/index.php/archives/139/</a></li>
<li>Salamandra：封闭环境中检测和定位spy microphones的工具<br><a href="https://github.com/eldraco/Salamandra" target="_blank" rel="external">https://github.com/eldraco/Salamandra</a></li>
<li>pentest-tools：渗透测试常用脚本收集<br><a href="https://github.com/gwen001/pentest-tools" target="_blank" rel="external">https://github.com/gwen001/pentest-tools</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>如何设置域名的 SPF 记录<br><a href="https://wzyboy.im/post/865.html" target="_blank" rel="external">https://wzyboy.im/post/865.html</a></li>
<li>pe装载器<br><a href="http://bbs.pediy.com/thread-106310.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-106310.htm</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;利用xwizard.exe加载dll&lt;br&gt;&lt;a href=&quot;http://www.4hou.c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux调试工具GDB入门</title>
    <link href="http://kevien.github.io/2017/08/24/linux%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7GDB%E5%85%A5%E9%97%A8/"/>
    <id>http://kevien.github.io/2017/08/24/linux调试工具GDB入门/</id>
    <published>2017-08-24T09:11:37.000Z</published>
    <updated>2017-08-24T09:12:35.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul>
<li>linux 调试工具 GDB 使用教程<br><a href="http://bbs.pediy.com/thread-77746.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-77746.htm</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;linux 调试工具 GDB 使用教程&lt;br&gt;&lt;a href=&quot;http
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>window逆向基础</title>
    <link href="http://kevien.github.io/2017/08/24/window%E9%80%86%E5%90%91%E5%9F%BA%E7%A1%80/"/>
    <id>http://kevien.github.io/2017/08/24/window逆向基础/</id>
    <published>2017-08-24T09:06:38.000Z</published>
    <updated>2017-08-28T03:52:51.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="常见汇编指令助记"><a href="#常见汇编指令助记" class="headerlink" title="常见汇编指令助记"></a>常见汇编指令助记</h4><p>JG / JNLE：Jump when Greater / Jump when Not Less or Equal<br>JL / JNGE：Jump when Less / Jump when Not Greater or Equal<br>JGE / JNL：Jump when Greater or Equal / Jump when Not Less<br>JLE / JNG：Jump when Less or Equal / Jump when Not Greater<br>JE / JZ：Jump when Less / Jump when Zero</p>
<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul>
<li>API 函数 －－ API 绝密档案系列之一<br><a href="http://bbs.pediy.com/user-22319-1.htm" target="_blank" rel="external">http://bbs.pediy.com/user-22319-1.htm</a></li>
<li>Win32环境下函数调用的堆栈之研究<br><a href="http://bbs.pediy.com/thread-69909.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-69909.htm</a></li>
<li>汇编的学习<br><a href="http://bbs.pediy.com/user-90551-1-1.htm" target="_blank" rel="external">http://bbs.pediy.com/user-90551-1-1.htm</a><br><a href="http://bbs.pediy.com/user-202613-0-1.htm" target="_blank" rel="external">http://bbs.pediy.com/user-202613-0-1.htm</a></li>
<li>window线程<br><a href="http://bbs.pediy.com/thread-77556.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-77556.htm</a></li>
<li>C++类虚函数逆向学习总结<br><a href="http://bbs.pediy.com/thread-60538.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-60538.htm</a></li>
<li>MFC逆向初级研究<br><a href="http://bbs.pediy.com/thread-41087.htm" target="_blank" rel="external">http://bbs.pediy.com/thread-41087.htm</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;常见汇编指令助记&quot;&gt;&lt;a href=&quot;#常见汇编指令助记&quot; class=&quot;headerlink&quot; title=&quot;常见汇编指令助记&quot;&gt;&lt;/a&gt;常见汇编指令助记&lt;/h4&gt;&lt;p&gt;JG / JNLE：Jump when Greater / Jump when Not Le
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170824安全动态</title>
    <link href="http://kevien.github.io/2017/08/24/20170824%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/24/20170824安全动态/</id>
    <published>2017-08-24T02:16:19.000Z</published>
    <updated>2017-08-24T15:29:04.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>thefuck，就是之前推特上面的那个思路，但是加了自动帮你correct的功能<br><a href="https://github.com/nvbn/thefuck" target="_blank" rel="external">https://github.com/nvbn/thefuck</a></li>
<li>不是修改数据的攻击就叫数据攻击<br><a href="https://media.weibo.cn/article?id=2309404144223724113779&amp;from=timeline&amp;isappinstalled=1&amp;jumpfrom=weibocom" target="_blank" rel="external">https://media.weibo.cn/article?id=2309404144223724113779&amp;from=timeline&amp;isappinstalled=1&amp;jumpfrom=weibocom</a></li>
<li>两个绕waf的xss payload<br><a href="https://twitter.com/i_bo0om/status/900270098392403968" target="_blank" rel="external">https://twitter.com/i_bo0om/status/900270098392403968</a></li>
<li>kalirouter:如何将Kali Linux转换为一个路由器（向在另一台机器上运行的拦截代理（如BurpSuite）发送HTTP和HTTPS流量、可以通过wireshark记录所有流量）<br><a href="https://github.com/koenbuyens/kalirouter" target="_blank" rel="external">https://github.com/koenbuyens/kalirouter</a></li>
<li>raven：针对Linkedin信息收集工具<br><https: github.com="" 0x09al="" raven=""></https:></li>
<li>waf openstar<br><a href="https://github.com/starjun/openstar" target="_blank" rel="external">https://github.com/starjun/openstar</a></li>
<li>如何使用Shodan命令行获取一个国家最受欢迎的服务列表   ,主要对一些服务的统计<br><https: 48142="" asciinema.org="" a=""></https:></li>
<li>小技巧 使用certutil 传送文件<br><a href="http://carnal0wnage.attackresearch.com/2017/08/certutil-for-delivery-of-files.html" target="_blank" rel="external">http://carnal0wnage.attackresearch.com/2017/08/certutil-for-delivery-of-files.html</a></li>
<li>跨平台Macro钓鱼攻击payload<br><a href="&#109;&#97;&#105;&#108;&#x74;&#x6f;&#x3a;&#104;&#x74;&#x74;&#x70;&#x73;&#x3a;&#x2f;&#x2f;&#109;&#x65;&#x64;&#105;&#117;&#109;&#x2e;&#x63;&#111;&#x6d;&#47;&#64;&#x6d;&#97;&#108;&#x63;&#x6f;&#x6d;&#118;&#101;&#x74;&#116;&#x65;&#114;&#47;&#109;&#117;&#108;&#116;&#105;&#45;&#112;&#x6c;&#97;&#x74;&#102;&#x6f;&#114;&#x6d;&#x2d;&#109;&#x61;&#x63;&#114;&#x6f;&#45;&#x70;&#104;&#105;&#x73;&#x68;&#105;&#x6e;&#103;&#x2d;&#x70;&#x61;&#x79;&#108;&#111;&#97;&#100;&#x73;&#x2d;&#x33;&#x62;&#54;&#56;&#x38;&#101;&#x38;&#101;&#102;&#102;&#x36;&#56;">&#104;&#x74;&#x74;&#x70;&#x73;&#x3a;&#x2f;&#x2f;&#109;&#x65;&#x64;&#105;&#117;&#109;&#x2e;&#x63;&#111;&#x6d;&#47;&#64;&#x6d;&#97;&#108;&#x63;&#x6f;&#x6d;&#118;&#101;&#x74;&#116;&#x65;&#114;&#47;&#109;&#117;&#108;&#116;&#105;&#45;&#112;&#x6c;&#97;&#x74;&#102;&#x6f;&#114;&#x6d;&#x2d;&#109;&#x61;&#x63;&#114;&#x6f;&#45;&#x70;&#104;&#105;&#x73;&#x68;&#105;&#x6e;&#103;&#x2d;&#x70;&#x61;&#x79;&#108;&#111;&#97;&#100;&#x73;&#x2d;&#x33;&#x62;&#54;&#56;&#x38;&#101;&#x38;&#101;&#102;&#102;&#x36;&#56;</a></li>
<li>canisrufus：隐藏的基于Python的Windows后门，使用Github作为CC服务器<br><a href="https://github.com/maldevel/canisrufus" target="_blank" rel="external">https://github.com/maldevel/canisrufus</a></li>
<li><p>portia：在内网渗透中自动化执行<br><a href="https://github.com/SpiderLabs/portia" target="_blank" rel="external">https://github.com/SpiderLabs/portia</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">一键日内网？</div></pre></td></tr></table></figure>
</li>
<li><p>如何安全的使用PGP<br><a href="&#109;&#x61;&#105;&#108;&#x74;&#111;&#58;&#x68;&#116;&#x74;&#x70;&#x73;&#x3a;&#47;&#x2f;&#x6d;&#101;&#x64;&#x69;&#117;&#109;&#46;&#x63;&#x6f;&#109;&#47;&#x40;&#116;&#x68;&#101;&#x67;&#114;&#117;&#103;&#113;&#47;&#x74;&#104;&#x65;&#x2d;&#x7a;&#101;&#x6e;&#x2d;&#111;&#102;&#45;&#x70;&#x67;&#x70;&#x2d;&#54;&#x66;&#53;&#x35;&#100;&#52;&#52;&#x36;&#x35;&#55;&#x64;&#100;">&#x68;&#116;&#x74;&#x70;&#x73;&#x3a;&#47;&#x2f;&#x6d;&#101;&#x64;&#x69;&#117;&#109;&#46;&#x63;&#x6f;&#109;&#47;&#x40;&#116;&#x68;&#101;&#x67;&#114;&#117;&#103;&#113;&#47;&#x74;&#104;&#x65;&#x2d;&#x7a;&#101;&#x6e;&#x2d;&#111;&#102;&#45;&#x70;&#x67;&#x70;&#x2d;&#54;&#x66;&#53;&#x35;&#100;&#52;&#52;&#x36;&#x35;&#55;&#x64;&#100;</a></p>
</li>
<li>sRDI：Shellcode反射式DLL注入<br><a href="https://silentbreaksecurity.com/srdi-shellcode-reflective-dll-injection/" target="_blank" rel="external">https://silentbreaksecurity.com/srdi-shellcode-reflective-dll-injection/</a></li>
<li>逆向Humble Bundle应用程序以获得API访问<br><https: 21="" 2017="" www.schiff.io="" blog="" 07="" reverse-engineering-humble-bundle-api=""></https:></li>
<li>360加固保关键技术浅析<br><a href="http://www.freebuf.com/articles/terminal/145102.html" target="_blank" rel="external">http://www.freebuf.com/articles/terminal/145102.html</a></li>
<li>利用 HTTP 请求的编码绕过 WAF 防御<br><a href="https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2017/august/request-encoding-to-bypass-web-application-firewalls/" target="_blank" rel="external">https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2017/august/request-encoding-to-bypass-web-application-firewalls/</a></li>
<li>小技巧：利用轻量级系统监控工具Sysmon监控Minikatz的密码转储<br><a href="http://www.mottoin.com/105035.html" target="_blank" rel="external">http://www.mottoin.com/105035.html</a><br>关于 sysmon的config文件 可以参考这个  <a href="https://github.com/SwiftOnSecurity/sysmon-config" target="_blank" rel="external">https://github.com/SwiftOnSecurity/sysmon-config</a></li>
<li>Sysmon View：跟踪和可视化Sysmon日志<br><https: cybernext.org="" sysmon-view=""><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">试了一下，效果还不错</div></pre></td></tr></table></figure>
</https:></li>
</ul>
<p><img src="/2017/08/24/20170824安全动态/sysmon.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;thefuck，就是之前推特上面的那个思路，但是加了自动帮你correct的功能&lt;br&gt;&lt;a h
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>栈帧</title>
    <link href="http://kevien.github.io/2017/08/23/%E6%A0%88%E5%B8%A7/"/>
    <id>http://kevien.github.io/2017/08/23/栈帧/</id>
    <published>2017-08-23T13:45:03.000Z</published>
    <updated>2017-08-23T14:32:27.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><ul>
<li>主要通过od来跟踪调试一下，理解一下栈的调用情况。<h4 id="环境及代码"><a href="#环境及代码" class="headerlink" title="环境及代码"></a>环境及代码</h4>环境win7 32位+vc6.0<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#include &quot;stdio.h&quot;</div><div class="line"></div><div class="line">long add(long a, long b)</div><div class="line">&#123;</div><div class="line">    long x = a, y = b;</div><div class="line">    return (x + y);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(int argc, char* argv[])</div><div class="line">&#123;</div><div class="line">    long a = 1, b = 2;</div><div class="line">    </div><div class="line">    printf(&quot;%d\n&quot;, add(a, b));</div><div class="line">	</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p>在这之前，首先找到main函数，并加上一定的注释以及对应的断点。<br>1.首先是进入main函数之前，我们查看一下ebp的值是0012ff88，esp是0012ff50，注意此时下一条指令的地址是00401279，如下图<br><img src="/2017/08/23/栈帧/1.png" alt=""><br>2.这个时候f7进入main函数，这个时候esp变成0012ff4c即减小了4，ebp不变<br><img src="/2017/08/23/栈帧/2.png" alt=""><br>3.然后呢，有一个跳转到push ebp，所以执行这个代码时候，ebp的值会入栈，esp的值加4，变成00112ff48<br><img src="/2017/08/23/栈帧/3.png" alt=""><br>4.f8执行 mov ebp,esp命令，这个时候ebp的值发生变化，变成和esp一样的值都是0012ff48<br><img src="/2017/08/23/栈帧/4.png" alt=""><br>5.f8执行 sub esp,48 扩展栈空间，esp减小48h个长度，ebp保持不变<br><img src="/2017/08/23/栈帧/5.png" alt=""><br>6.f8 然后就是将ebx，esi，edi等入栈的操作等<br>。。。<br>7.函数的返回要注意清场,栈顶和栈底是一样的都是0012ff48<br><img src="/2017/08/23/栈帧/6.png" alt=""><br>8.f8执行pop ebp，这个时候是将栈顶中的值0012ff88放到ebp中，那么ebp的值发生变化成为0012ff88，执行pop操作，esp+4 为0012ff4c<br><img src="/2017/08/23/栈帧/7.png" alt=""><br>9.f8 执行retn指令，esp发生变化+4变为0012ff50，ebp的值为0012ff88，eip指向00401279，即call main函数的下一条指令执行<br><img src="/2017/08/23/栈帧/8.png" alt=""></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul>
<li>main函数的过程中，进入之前栈底指针ebp是0012ff88，栈顶指针是0012ff50，结束函数之后，没有发生变化，即栈维持这平衡。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;主要通过od来跟踪调试一下，理解一下栈的调用情况。&lt;h4 id=&quot;环境及代码&quot;&gt;&lt;a href=&quot;#环境及代码&quot; class=&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170823安全动态</title>
    <link href="http://kevien.github.io/2017/08/23/20170823%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/23/20170823安全动态/</id>
    <published>2017-08-23T02:04:28.000Z</published>
    <updated>2017-08-23T09:56:23.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>浏览器漏洞挖掘思路<br><a href="https://zhuanlan.zhihu.com/p/28719766" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/28719766</a></li>
<li>Discuz X3.3补丁安全分析<br><a href="http://bobao.360.cn/learning/detail/4302.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4302.html</a></li>
<li>lighttpd域处理拒绝服务漏洞环境从复现到分析<br><a href="http://bobao.360.cn/learning/detail/4301.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4301.html</a></li>
<li>Java 8 Jar＆Android APK逆向工程工具（Decompiler，Editor，Debugger＆More）<br><a href="https://github.com/Konloch/bytecode-viewer/" target="_blank" rel="external">https://github.com/Konloch/bytecode-viewer/</a></li>
<li>TechWorld2017热点回顾 | 机器学习在安全攻防的实践<br><a href="http://blog.nsfocus.net/machine-learning-techworld2017/" target="_blank" rel="external">http://blog.nsfocus.net/machine-learning-techworld2017/</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>开源|基于区块链的智能合约快速上手<br><a href="https://www.v2ex.com/t/385110#reply1" target="_blank" rel="external">https://www.v2ex.com/t/385110#reply1</a></li>
<li>一个可以使用各种图片的网站，图链网。以后可以在markdown里面多添加几张图片就不会那么单调了<br><a href="http://tulian.net/" target="_blank" rel="external">http://tulian.net/</a></li>
<li>多服务器 云探针、云监控 —— ServerStatus 一键管理脚本<br><a href="https://doub.io/shell-jc3/" target="_blank" rel="external">https://doub.io/shell-jc3/</a></li>
<li>逆向微信 Make WeChat Great Again<br><a href="http://yulingtianxia.com/blog/2017/02/28/Make-WeChat-Great-Again/" target="_blank" rel="external">http://yulingtianxia.com/blog/2017/02/28/Make-WeChat-Great-Again/</a></li>
<li>sudo 更改文件的所有者以及所在的组  chown -R root:wheel xxx.app </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;浏览器漏洞挖掘思路&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>OllyDbg使用入门</title>
    <link href="http://kevien.github.io/2017/08/22/OllyDbg%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8/"/>
    <id>http://kevien.github.io/2017/08/22/OllyDbg使用入门/</id>
    <published>2017-08-22T02:56:17.000Z</published>
    <updated>2017-08-27T14:51:36.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一些常用的操作"><a href="#一些常用的操作" class="headerlink" title="一些常用的操作"></a>一些常用的操作</h4><ul>
<li>可通过双击汇编窗口注释区或者右键给汇编代码添加注释，方便自己后续阅读，这里有一个小技巧，可以通过ida的静态分析方法进行静态分析加注释<br><img src="/2017/08/22/OllyDbg使用入门/1.png" alt=""><h4 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h4></li>
<li>有时候在调试的时候，一直在循环里，如果想要跳出循环，这个时候鼠标点到下一个命令的执行处，f4即可，即运行到当前代码处</li>
<li>在用vs较高版本编译程序测试溢出等的时候注意要关闭保护功能(如常见的dep以及aslr)，在项目菜单的属性里面设置<br><img src="/2017/08/22/OllyDbg使用入门/aslr.png" alt=""><br><img src="/2017/08/22/OllyDbg使用入门/sec.png" alt=""></li>
<li>在跟踪调试的时候，我们关注的是每步执行过后寄存器的变化情况，这个时候观察寄存器的窗口，红色的表示是发生了变化的数据。<br><img src="/2017/08/22/OllyDbg使用入门/0.png" alt=""></li>
<li>在进行动态分析的时候，最好完整的分析一个栈的出入过程，加上注释之后，对代码分析有好处</li>
<li>刚开始调试的时候，容易跑飞，这个时候注意观察左上角的提示框，回显示你的module，不要进去了什么kernel模块</li>
<li>注意由于基本上我们使用的系统上数据或者代码都是小端存储的，所以在看反汇编代码的时候看到机器码的时候，一定要倒过来看<br><img src="/2017/08/22/OllyDbg使用入门/2.png" alt=""></li>
<li>通过菜单中的查看内存map，整个可执行文件结构在内存中的地址映射<br><img src="/2017/08/22/OllyDbg使用入门/3.png" alt=""><br>此外还有L可以查看log data信息，E查看可执行模块，B查看断点信息。</li>
<li>在vc6编译的程序中，函数返回之前会有一句call  _checkesp，这里会有一个checkesp函数的调用，来检查栈是否平衡，如果不平衡会出现如下的错误，我在这里做一个测试，在return语句之前加一条内联汇编push ebx，这样就破坏了栈平衡如下图所示<br><img src="/2017/08/22/OllyDbg使用入门/4.png" alt=""></li>
<li>vc中函数的调用方式是cdecl，这种函数调用约定对参数的传递依靠栈内存，在调用函数前，将通过压栈操作将参数从右至左依次送入栈中，当函数返回的时候，需要将参数使用的空间回收，这里的回收指的是恢复esp寄存器的值到函数调用前的值，对于cdecl调用方式而言，平衡堆栈的操作是由函数调用方来做的，在这里也就是要由main()函数来做的，可以看到反汇编代码add esp，8就是用来平衡栈的。主要用于平衡上面的两个push操作。<br><img src="/2017/08/22/OllyDbg使用入门/5.png" alt=""></li>
<li>函数返回值通常保存在eax寄存器中，在c语言中，main()函数的返回值为0，即return0，因此xor eax,eax 就是对eax进行了清零操作。</li>
<li>windows系统下，对API函数的调用遵循约定是stdcall，对于stdcall而言，参数依然是从右向左依次入栈，而参数的平栈则是在api函数内部完成的，而不是在函数调用时候完成的。<br><a href="6.png"></a><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4></li>
<li>OllyDbg 入门系列<br><a href="http://bbs.pediy.com/user-24467-3-1.htm" target="_blank" rel="external">http://bbs.pediy.com/user-24467-3-1.htm</a></li>
<li>拿几个ctf的简单题目练习一下<br><a href="https://github.com/lcatro/SISE_Traning_CTF_RE" target="_blank" rel="external">https://github.com/lcatro/SISE_Traning_CTF_RE</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一些常用的操作&quot;&gt;&lt;a href=&quot;#一些常用的操作&quot; class=&quot;headerlink&quot; title=&quot;一些常用的操作&quot;&gt;&lt;/a&gt;一些常用的操作&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;可通过双击汇编窗口注释区或者右键给汇编代码添加注释，方便自己后续阅读，这里有一个小技巧，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170822安全动态</title>
    <link href="http://kevien.github.io/2017/08/22/20170822%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/22/20170822安全动态/</id>
    <published>2017-08-22T00:36:14.000Z</published>
    <updated>2017-08-22T10:21:19.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>[渗透测试]Tunnel Manager - From RCE to Docker Escape<br><a href="https://xianzhi.aliyun.com/forum/read/2009.html" target="_blank" rel="external">https://xianzhi.aliyun.com/forum/read/2009.html</a></li>
<li>开源扫描器<br><a href="https://github.com/We5ter/Scanners-Box/blob/master/README_CN.md" target="_blank" rel="external">https://github.com/We5ter/Scanners-Box/blob/master/README_CN.md</a></li>
<li>Responder Responder is a LLMNR, NBT-NS and MDNS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication.<br><a href="https://github.com/SpiderLabs/R
.esponder" target="_blank" rel="external">https://github.com/SpiderLabs/R
.esponder</a></li>
<li>malloc.c源码阅读之__libc_free<br><a href="http://0x48.pw/2017/08/07/0x37/" target="_blank" rel="external">http://0x48.pw/2017/08/07/0x37/</a></li>
<li>CVE-2016-0095从PoC到Exploit<br><a href="http://weaponx.site/2017/08/11/CVE-2016-0095%E4%BB%8EPoC%E5%88%B0Exploit/" target="_blank" rel="external">http://weaponx.site/2017/08/11/CVE-2016-0095%E4%BB%8EPoC%E5%88%B0Exploit/</a></li>
<li>network_backdoor_scanner  后渗透后门程序,适合在已经攻陷的内网中做下一步的网络信息扫描..<br><a href="https://github.com/lcatro/network_backdoor_scanner" target="_blank" rel="external">https://github.com/lcatro/network_backdoor_scanner</a></li>
<li>PowerShdll - 实现 powershell 功能的 dll 文件，以 rundll32 运行，可绕过 powershell.exe 的运行限制<br><a href="https://github.com/p3nt4/PowerShdll" target="_blank" rel="external">https://github.com/p3nt4/PowerShdll</a></li>
<li>一道CrackMe题目分析（含样本下载）<br><a href="https://secrary.com/CrackMe/AdvancedKeygenme/" target="_blank" rel="external">https://secrary.com/CrackMe/AdvancedKeygenme/</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4>awesome-sec-talks  国外一些安全的视频<br><a href="https://github.com/PaulSec/awesome-sec-talks" target="_blank" rel="external">https://github.com/PaulSec/awesome-sec-talks</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;[渗透测试]Tunnel Manager - From RCE to Docker Escape
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>windbg使用</title>
    <link href="http://kevien.github.io/2017/08/21/windbg%E4%BD%BF%E7%94%A8/"/>
    <id>http://kevien.github.io/2017/08/21/windbg使用/</id>
    <published>2017-08-21T01:00:27.000Z</published>
    <updated>2017-08-21T08:27:16.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><p><a href="http://bbs.pediy.com/thread-94457.htm" target="_blank" rel="external">WinDbg学习笔记（一）–认识WinDbg</a><br><a href="http://bbs.pediy.com/thread-34379.htm" target="_blank" rel="external">从Ollydbg说起—–WinDbg用户态调试教程</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://bbs.pediy.com/thread-94457
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170821安全动态</title>
    <link href="http://kevien.github.io/2017/08/21/20170821%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/21/20170821安全动态/</id>
    <published>2017-08-21T01:00:15.000Z</published>
    <updated>2017-08-22T01:16:23.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li><p>dns日志记录方法<br><a href="https://green-m.github.io/2017/08/21/windows-dns-log/" target="_blank" rel="external">https://green-m.github.io/2017/08/21/windows-dns-log/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">亲测，可行</div></pre></td></tr></table></figure>
</li>
<li><p>vulscan - Nmap 的漏洞探测脚本，根据版本信息判断是否存在漏洞<br><a href="https://github.com/scipag/vulscan" target="_blank" rel="external">https://github.com/scipag/vulscan</a><br><img src="/2017/08/21/20170821安全动态/1.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">渗透的童鞋可以试下</div></pre></td></tr></table></figure>
</li>
<li><p>TURNING LFI INTO RFI<br><a href="https://l.avala.mp/?p=241" target="_blank" rel="external">https://l.avala.mp/?p=241</a></p>
</li>
<li><p>绕过极限证<br><a href="https://github.com/FanhuaandLuomu/geetest_break" target="_blank" rel="external">https://github.com/FanhuaandLuomu/geetest_break</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">攻防技术总是此消彼长的，有新的技术防御技术出现，对应的攻击技术也会出现</div></pre></td></tr></table></figure>
</li>
<li><p>udp2raw tunnel:通过raw socket给UDP包加上TCP或ICMP header，进而绕过UDP屏蔽或QoS，或在UDP不稳定的环境下提升稳定性。可以有效防止在使用kcptun或者finalspeed的情况下udp端口被运营商限速。<br><a href="https://github.com/wangyu-/udp2raw-tunnel" target="_blank" rel="external">https://github.com/wangyu-/udp2raw-tunnel</a></p>
</li>
<li>Honeywell Tuxedo 家用安保系统的逆向分析<br><a href="https://markclayton.github.io/reverse-engineering-my-home-security-system-decompiling-firmware-updates.html" target="_blank" rel="external">https://markclayton.github.io/reverse-engineering-my-home-security-system-decompiling-firmware-updates.html</a></li>
<li>sniffMK - macOS 上的鼠标与键盘事件嗅探工具<br><a href="https://github.com/objective-see/sniffMK" target="_blank" rel="external">https://github.com/objective-see/sniffMK</a></li>
<li>portia - 基于 Python 实现的自动化后渗透工具，拥有权限提升、横向渗透等功能：<br><a href="https://github.com/SpiderLabs/portia" target="_blank" rel="external">https://github.com/SpiderLabs/portia</a></li>
<li>tornado - 一款 MITM 攻击工具<br><a href="https://github.com/rebellionil/tornado" target="_blank" rel="external">https://github.com/rebellionil/tornado</a></li>
<li>劫持无线鼠标并攻击目标计算机<br><a href="https://www.toshellandback.com/2017/08/16/mousejack/" target="_blank" rel="external">https://www.toshellandback.com/2017/08/16/mousejack/</a></li>
<li>IDA反汇编/反编译静态分析iOS模拟器程序 系列文章<br><a href="http://blog.csdn.net/column/details/ios-ida.html" target="_blank" rel="external">http://blog.csdn.net/column/details/ios-ida.html</a></li>
<li>mac osx 中酷炫的命令行工具<br><a href="https://github.com/herrbischoff/awesome-osx-command-line" target="_blank" rel="external">https://github.com/herrbischoff/awesome-osx-command-line</a></li>
<li>两篇绕杀软的文章<br><a href="https://www.linkedin.com/pulse/bypass-all-anti-viruses-encrypted-payloads-c-damon-mohammadbagher?trk=v-feed" target="_blank" rel="external">https://www.linkedin.com/pulse/bypass-all-anti-viruses-encrypted-payloads-c-damon-mohammadbagher?trk=v-feed</a><br><a href="https://www.linkedin.com/pulse/bypass-anti-virus-detection-encrypted-payloads-using-venom-james-ceh?trk=v-feed" target="_blank" rel="external">https://www.linkedin.com/pulse/bypass-anti-virus-detection-encrypted-payloads-using-venom-james-ceh?trk=v-feed</a></li>
<li>dockerscan：docker安全分析工具<br><a href="https://github.com/cr0hn/dockerscan" target="_blank" rel="external">https://github.com/cr0hn/dockerscan</a></li>
<li>沙盒攻击面分析工具v1.0.9<br><a href="https://github.com/google/sandbox-attacksurface-analysis-tools/releases/tag/v1.0.9" target="_blank" rel="external">https://github.com/google/sandbox-attacksurface-analysis-tools/releases/tag/v1.0.9</a></li>
<li>使用代理扫描<br><a href="https://cybersyndicates.com/2015/12/nmap-and-proxychains-scanning-through-a-socks-piviot/" target="_blank" rel="external">https://cybersyndicates.com/2015/12/nmap-and-proxychains-scanning-through-a-socks-piviot/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;dns日志记录方法&lt;br&gt;&lt;a href=&quot;https://green-m.github.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IDA使用方法</title>
    <link href="http://kevien.github.io/2017/08/18/IDA%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://kevien.github.io/2017/08/18/IDA使用方法/</id>
    <published>2017-08-18T10:06:56.000Z</published>
    <updated>2017-08-28T04:22:15.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>IDA作用：<br>1.一般IDA是配合OD使用的，当od没有分析出函数名的时候，有时候通过IDA可以发现函数的名。</p>
<h4 id="常见操作"><a href="#常见操作" class="headerlink" title="常见操作"></a>常见操作</h4><p>在介绍常见操作之前，先来看一下用ida加载一个文件的时候，默认的展示窗口有哪些<br><img src="/2017/08/18/IDA使用方法/2.png" alt=""><br>注意在反汇编代码的窗口可以输入空格切换到Graphic View，可以更清楚的看清流程</p>
<ul>
<li>跳转到指定内存地址 快捷键G，可以调到相应的地址</li>
<li>寻找关键特征字符串，打开字符串参考窗口 shift+f12 ，类似于od中plugins中的中文搜索引擎中的智能搜索功能<br><img src="/2017/08/18/IDA使用方法/1.png" alt=""></li>
<li>函数的收缩和展开功能<br><img src="/2017/08/18/IDA使用方法/3.png" alt=""></li>
<li>在vc6中main()不是程序运行的第一个函数，而是程序员编写程序的第一个函数，main()函数是由启动函数来调用的，vc6中入口点是_mainCRTStartup()函数，如下图所示<br><img src="/2017/08/18/IDA使用方法/4.png" alt=""><br>双击即可到达这个函数的位置，<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">.text:00401130                 push    ebp</div><div class="line">.text:00401131                 mov     ebp, esp</div><div class="line">.text:00401133                 push    0FFFFFFFFh</div><div class="line">.text:00401135                 push    offset stru_422130</div><div class="line">.text:0040113A                 push    offset __except_handler3</div><div class="line">.text:0040113F                 mov     eax, large fs:0</div><div class="line">.text:00401145                 push    eax</div><div class="line">.text:00401146                 mov     large fs:0, esp</div><div class="line">.text:0040114D                 add     esp, 0FFFFFFF0h</div><div class="line">.text:00401150                 push    ebx</div><div class="line">.text:00401151                 push    esi</div><div class="line">.text:00401152                 push    edi</div><div class="line">.text:00401153                 mov     [ebp+ms_exc.old_esp], esp</div><div class="line">.text:00401156                 call    ds:__imp__GetVersion@0 ; GetVersion()</div><div class="line">.text:0040115C                 mov     __osver, eax</div><div class="line">.text:00401161                 mov     eax, __osver</div><div class="line">.text:00401166                 shr     eax, 8</div><div class="line">.text:00401169                 and     eax, 0FFh</div><div class="line">.text:0040116E                 mov     __winminor, eax</div><div class="line">.text:00401173                 mov     ecx, __osver</div><div class="line">.text:00401179                 and     ecx, 0FFh</div><div class="line">.text:0040117F                 mov     __winmajor, ecx</div><div class="line">.text:00401185                 mov     edx, __winmajor</div><div class="line">.text:0040118B                 shl     edx, 8</div><div class="line">.text:0040118E                 add     edx, __winminor</div><div class="line">.text:00401194                 mov     __winver, edx</div><div class="line">.text:0040119A                 mov     eax, __osver</div><div class="line">.text:0040119F                 shr     eax, 10h</div><div class="line">.text:004011A2                 and     eax, 0FFFFh</div><div class="line">.text:004011A7                 mov     __osver, eax</div><div class="line">.text:004011AC                 push    0</div><div class="line">.text:004011AE                 call    __heap_init</div><div class="line">.text:004011B3                 add     esp, 4</div><div class="line">.text:004011B6                 test    eax, eax</div><div class="line">.text:004011B8                 jnz     short loc_4011C4</div><div class="line">.text:004011BA                 push    1Ch</div><div class="line">.text:004011BC                 call    fast_error_exit</div><div class="line">.text:004011C1 ; ---------------------------------------------------------------------------</div><div class="line">.text:004011C1                 add     esp, 4</div><div class="line">.text:004011C4</div><div class="line">.text:004011C4 loc_4011C4:                             ; CODE XREF: _mainCRTStartup+88j</div><div class="line">.text:004011C4                 mov     [ebp+ms_exc.registration.TryLevel], 0</div><div class="line">.text:004011CB                 call    __ioinit</div><div class="line">.text:004011D0                 call    ds:__imp__GetCommandLineA@0 ; GetCommandLineA()</div><div class="line">.text:004011D6                 mov     __acmdln, eax</div><div class="line">.text:004011DB                 call    ___crtGetEnvironmentStringsA</div><div class="line">.text:004011E0                 mov     __aenvptr, eax</div><div class="line">.text:004011E5                 call    __setargv</div><div class="line">.text:004011EA                 call    __setenvp</div><div class="line">.text:004011EF                 call    __cinit</div><div class="line">.text:004011F4                 mov     ecx, __environ</div><div class="line">.text:004011FA                 mov     ___initenv, ecx</div><div class="line">.text:00401200                 mov     edx, __environ</div><div class="line">.text:00401206                 push    edx             ; envp</div><div class="line">.text:00401207                 mov     eax, ___argv</div><div class="line">.text:0040120C                 push    eax             ; argv</div><div class="line">.text:0040120D                 mov     ecx, ___argc</div><div class="line">.text:00401213                 push    ecx             ; argc</div><div class="line">.text:00401214                 call    _main_0</div></pre></td></tr></table></figure>
</li>
</ul>
<p>如上所示，是进入这个函数后的汇编代码，可以看到main函数在00401214位置处，启动函数从00401130地址处开始，期间调用了GetVersion()函数获得了系统版本号，调用__heap_init函数初始化了程序所使用的堆空间，调用了GetCommandLineA()函数获取了命令行参数,调用_crtGetEnvironmentStringsA()获取了环境变量字符串，在完成一系列启动所需的工作之后，终于在00401214处调用了main()函数。</p>
<ul>
<li>在调用printf时候的指令为call printf,而调用像是MessageBoxA时候的指令是call    ds:<strong>imp</strong>MessageBoxA@16 ; MessageBoxA(x,x,x,x)，printf函数在stdio.h头文件中，该函数是c语言的静态库，在链接的时候会将其代码接入到二进制文件中(静态包含)，而MessageBoxA的函数实现是在user32.dll这个动态链接库中，在代码中，这里只是留了进入MessageBoxA函数的一个地址，并没有具体的代码，MessageBoxA的具体地址存放在数据节区中，因此在反汇编代码中给出了提示，使用了前缀”ds”,<strong>imp</strong>表示导入函数，@16表示16个字节，16/4即函数又4个参数。注意 在od中汇编代码是这样call dword ptr ds:[&lt;&amp;USER32.MessageBoxA&gt;]，感觉没有ida的友好。</li>
<li>switch case default结构的特征<br><img src="/2017/08/18/IDA使用方法/6.png" alt=""></li>
</ul>
<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><p><a href="http://www.pediy.com/kssd/pediy12/ida.html" target="_blank" rel="external">IDA简易教程</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;IDA作用：&lt;br&gt;1.一般IDA是配合OD使用的，当od没有分析出函数名的时候，有时候通过IDA可以发现函数的名。&lt;/p&gt;
&lt;h4 id=
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170818安全动态</title>
    <link href="http://kevien.github.io/2017/08/18/20170818%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/18/20170818安全动态/</id>
    <published>2017-08-18T02:24:30.000Z</published>
    <updated>2017-08-19T09:56:02.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>漏洞根源在于人——知识深度篇<br><a href="http://www.freebuf.com/vuls/144705.html" target="_blank" rel="external">http://www.freebuf.com/vuls/144705.html</a></li>
<li>safari本地文件读取漏洞之扩展攻击面<br><a href="http://www.wupco.cn/?p=4134" target="_blank" rel="external">http://www.wupco.cn/?p=4134</a></li>
<li>Bypass 360主机卫士SQL注入防御<br><a href="http://www.cnblogs.com/xiaozi/p/7275134.html" target="_blank" rel="external">http://www.cnblogs.com/xiaozi/p/7275134.html</a></li>
<li>node-postgres code execution vulnerability<br><a href="https://node-postgres.com/announcements#2017-08-12-code-execution-vulnerability" target="_blank" rel="external">https://node-postgres.com/announcements#2017-08-12-code-execution-vulnerability</a></li>
<li>msdtc后门的实现思路<br><a href="http://www.4hou.com/system/6890.html" target="_blank" rel="external">http://www.4hou.com/system/6890.html</a></li>
<li>#164224 Urgent: Server side template injection via Smarty template allows for RCE<br><a href="https://hackerone.com/reports/164224" target="_blank" rel="external">https://hackerone.com/reports/164224</a></li>
<li>Using get_defined_functions To Hidden A PHP Backdoor<br><a href="http://reverse-tcp.xyz/2017/08/17/Using-get_defined_functions-to-hidden-a-php-backdoor/" target="_blank" rel="external">http://reverse-tcp.xyz/2017/08/17/Using-get_defined_functions-to-hidden-a-php-backdoor/</a></li>
<li>内网发现技巧补充<br><a href="https://mp.weixin.qq.com/s/l-Avt72ajCIo5GdMEwVx7A" target="_blank" rel="external">https://mp.weixin.qq.com/s/l-Avt72ajCIo5GdMEwVx7A</a></li>
<li>ssh如何方向代理稳定穿透内网<br><a href="http://bobao.360.cn/learning/detail/4234.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4234.html</a></li>
<li>ZDI 公开了两个 Foxit Reader 的 0Day，分别是 JavaScript API 触发的命令执行（CVE-2017-10951）和文件写漏洞（CVE-2017-10952），由于触发漏洞需要绕过 Safe Reading Mode，所以官方拒绝修复<br><a href="https://www.zerodayinitiative.com/blog/2017/8/17/busting-myths-in-foxit-reader" target="_blank" rel="external">https://www.zerodayinitiative.com/blog/2017/8/17/busting-myths-in-foxit-reader</a></li>
<li>mod0Umleitung - Windows 上的 DNS 转发服务器，可中途对 DNS 请求进行篡改以及返回自定义的 DNS 解析结果<br><a href="https://modzero.github.io/mod0Umleitung/" target="_blank" rel="external">https://modzero.github.io/mod0Umleitung/</a></li>
<li>结合 Blind SSRF 漏洞以及 HashiCorp Consul 的错误配置转换成高危的 RCE 漏洞<br><a href="http://www.kernelpicnic.net/2017/05/29/Pivoting-from-blind-SSRF-to-RCE-with-Hashicorp-Consul.html" target="_blank" rel="external">http://www.kernelpicnic.net/2017/05/29/Pivoting-from-blind-SSRF-to-RCE-with-Hashicorp-Consul.html</a></li>
<li>Koadic：COM 命令控制框架（JScript RAT，类似Meterpreter、Empire）<br><a href="http://www.kitploit.com/2017/08/koadic-com-command-control-framework.html" target="_blank" rel="external">http://www.kitploit.com/2017/08/koadic-com-command-control-framework.html</a></li>
<li>3个步骤实现简单语言解释器（自制简易编程语言）<br><a href="https://francisstokes.wordpress.com/2017/08/16/programming-language-from-scratch/" target="_blank" rel="external">https://francisstokes.wordpress.com/2017/08/16/programming-language-from-scratch/</a></li>
<li>AndroidManifest.xml文件安全探索<br><http: mp.weixin.qq.com="" s="" c1serfo7aq2pesloras-hq=""></http:></li>
<li>burpsuite插件开发被动式扫描<br><a href="http://www.itwzw.cn/burpsuite-ext-passivescan/" target="_blank" rel="external">http://www.itwzw.cn/burpsuite-ext-passivescan/</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>如何知道程序的运行时间<br>time xxx  ,time python demo.py</li>
<li>一次基于zio编写pwn的exp的尝试<br><a href="http://bestwing.me/2016/10/22/%E5%9F%BA%E4%BA%8Ezio%E7%9A%84exp%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95/" target="_blank" rel="external">http://bestwing.me/2016/10/22/%E5%9F%BA%E4%BA%8Ezio%E7%9A%84exp%E5%88%9D%E6%AC%A1%E5%B0%9D%E8%AF%95/</a></li>
<li>反汇编的利器 IDA 和 Hopper 的基本使用<br><a href="https://niyaoyao.github.io/2017/01/18/Learning-Reverse-From-Today-D3/" target="_blank" rel="external">https://niyaoyao.github.io/2017/01/18/Learning-Reverse-From-Today-D3/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;漏洞根源在于人——知识深度篇&lt;br&gt;&lt;a href=&quot;http://www.freebuf.co
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170817安全动态</title>
    <link href="http://kevien.github.io/2017/08/17/20170817%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/17/20170817安全动态/</id>
    <published>2017-08-17T01:57:37.000Z</published>
    <updated>2017-08-19T09:56:02.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>漏洞发现之细节决定成败<br><a href="http://www.freebuf.com/column/144527.html" target="_blank" rel="external">http://www.freebuf.com/column/144527.html</a></li>
<li>LNKup - 利用 Windows 快捷方式窃取用户 NTLM Hash 以及环境变量的工具<br><a href="https://github.com/Plazmaz/LNKUp" target="_blank" rel="external">https://github.com/Plazmaz/LNKUp</a></li>
<li>Puppeteer - 基于 DevTools 协议，用于自动化控制 Chrome 浏览器的 Node 库，可用来实现网络爬虫、网页截图、UI 测试等等<br><a href="https://github.com/GoogleChrome/puppeteer" target="_blank" rel="external">https://github.com/GoogleChrome/puppeteer</a></li>
<li>graudit - Bash 实现的源代码安全漏洞扫描器，可自定义漏洞的判断规则<br><a href="https://github.com/wireghoul/graudit" target="_blank" rel="external">https://github.com/wireghoul/graudit</a></li>
<li>在Windows上使用MSFVenom生成PowerShell脚本<br><https: 16="" 2017="" blog.didierstevens.com="" 08="" generating-powershell-scripts-with-msfvenom-on-windows=""></https:></li>
<li>浅谈简易端口扫描威胁感知系统的设计与实现<br><a href="http://www.freebuf.com/articles/network/144288.html" target="_blank" rel="external">http://www.freebuf.com/articles/network/144288.html</a><h4 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h4></li>
<li>堆栈溢出攻击原理<br><a href="http://blog.csdn.net/aemperor/article/details/47310593" target="_blank" rel="external">http://blog.csdn.net/aemperor/article/details/47310593</a></li>
<li>Shellcode生成器——msfvenom<br><a href="http://brieflyx.me/2015/linux-tools/msfvenom-intro/" target="_blank" rel="external">http://brieflyx.me/2015/linux-tools/msfvenom-intro/</a></li>
<li>gdb与peda指令学习学习笔记<br><a href="http://xq.dropsec.xyz/2016/10/30/gdb%E4%B8%8Epeda%E6%8C%87%E4%BB%A4%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" target="_blank" rel="external">http://xq.dropsec.xyz/2016/10/30/gdb%E4%B8%8Epeda%E6%8C%87%E4%BB%A4%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</a><br>mac下推荐使用Snitch Network Monitor,进行流量的查看以及拦截，最好拦截掉搜狗输入法和Alipay这样的程序，感觉时刻都在上传你的数据</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;漏洞发现之细节决定成败&lt;br&gt;&lt;a href=&quot;http://www.freebuf.com/c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux栈溢出学习笔记</title>
    <link href="http://kevien.github.io/2017/08/16/linux%E6%A0%88%E6%BA%A2%E5%87%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://kevien.github.io/2017/08/16/linux栈溢出学习笔记/</id>
    <published>2017-08-16T10:53:23.000Z</published>
    <updated>2017-08-19T04:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="gdb使用"><a href="#gdb使用" class="headerlink" title="gdb使用"></a>gdb使用</h4><p>gdb GNU Project Debugger<br>在linux下面调试程序必然会用到gdb，当然还有gdb的一个插件也是必须，那就是<a href="https://github.com/longld/peda" target="_blank" rel="external">peda</a><br>peda增强了gdb的功能，在调试过程中会显示反汇编的代码、寄存器、内存信息等</p>
<ul>
<li>aslr – 显示和设置GDB的aslr</li>
<li>checksec – 显示多种安全机制的开关</li>
<li>dumpargs – 当停到一个call 指令的时候，显示传递给函数的参数</li>
<li>dumpprop – dump所有ROP gadgets 在一定的内存范围内</li>
<li>elfheader – 获取被调试的ELF文件的头信息</li>
<li>lefsymbol –获取非调试状态下的 符号信息</li>
<li>lookup – 在一定地址范围内查找所有的地址以及引用</li>
<li>patch – Patch memory start at an address with string/hexstring/int</li>
<li>pattern – Generate, search, or write a cyclic pattern to memory</li>
<li>procinfo – 从/proc/pid/显示不同的信息</li>
<li>pshow – 显示peda的选项以及其它的设置</li>
<li>pset – 设置peda的选项以及其它的设置</li>
<li>readelf 获取ELF文件的头部信息</li>
<li>ropgadget – Get common ROP gadgets of binary or library</li>
<li>ropsearch – Search for ROP gadgets in memory</li>
<li>searchmem|find – Search for a pattern in memory; support regex search</li>
<li>shellcode – Generate or download common shellcodes.</li>
<li>skeleton – Generate python exploit code template</li>
<li>vmmap – Get virtual mapping address ranges of section(s) in debugged process</li>
<li>xormem – XOR a memory region with a key</li>
</ul>
<p>在gdb中，常用的就是如下的命令<br>attach  附加某个进程进行调试<br>run 运行程序 ，会在断点处停下来<br>break或者b  xxx ，下断点<br>next 类似于od中的单步步过<br>step 类似于od中的单步步入</p>
<h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><p><a href="http://blog.csdn.net/21cnbao/article/details/7385161" target="_blank" rel="external">Linux gdb调试器用法全面解析</a><br><a href="http://drops.xmd5.com/static/drops/tips-6597.html" target="_blank" rel="external">一步一步学ROP之linux_x86篇</a><br><a href="https://exploit-exercises.com/" target="_blank" rel="external">linux溢出练习</a><br><a href="http://www.cnblogs.com/pannengzhi/p/5203467.html" target="_blank" rel="external">linux Hook笔记</a><br><a href="http://paper.seebug.org/271/" target="_blank" rel="external">手把手教你栈溢出</a><br><a href="https://github.com/smokeleeteveryday/CTF_WRITEUPS/tree/master/2015/DEFCONCTF/babysfirst/r0pbaby" target="_blank" rel="external">DEF CON CTF Quals 2015: r0pbaby</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;gdb使用&quot;&gt;&lt;a href=&quot;#gdb使用&quot; class=&quot;headerlink&quot; title=&quot;gdb使用&quot;&gt;&lt;/a&gt;gdb使用&lt;/h4&gt;&lt;p&gt;gdb GNU Project Debugger&lt;br&gt;在linux下面调试程序必然会用到gdb，当然还有gdb的一
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170816安全动态</title>
    <link href="http://kevien.github.io/2017/08/16/20170816%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/16/20170816安全动态/</id>
    <published>2017-08-16T02:09:19.000Z</published>
    <updated>2017-08-16T07:57:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li>Babadook — PowerShell 编写的一个无连接弹性后门<br><a href="https://github.com/jseidl/Babadook" target="_blank" rel="external">https://github.com/jseidl/Babadook</a></li>
<li>利用 SVG Bypass Chrome XSS Auditor<br><a href="https://brutelogic.com.br/blog/chrome-xss-auditor-svg-bypass/" target="_blank" rel="external">https://brutelogic.com.br/blog/chrome-xss-auditor-svg-bypass/</a></li>
<li>iSpy - iOS 逆向分析、动态分析框架，支持 Class Dump、越狱检测 Bypass 等等特性<br><a href="https://n0where.net/ios-reverse-engineering-framework/" target="_blank" rel="external">https://n0where.net/ios-reverse-engineering-framework/</a></li>
<li>开源恶意软件沙盒分析工具<br><a href="https://n0where.net/open-source-malware-analysis-laboratory/" target="_blank" rel="external">https://n0where.net/open-source-malware-analysis-laboratory/</a></li>
<li>PytheM - Python 语言写的一款渗透测试框架<br><a href="https://n0where.net/python-pentesting-framework-pythem/" target="_blank" rel="external">https://n0where.net/python-pentesting-framework-pythem/</a></li>
<li>利用 CMSTP.exe Bypass UAC 以及强迫 Webdav 加载 DLL<br><a href="https://msitpros.com/?p=3960" target="_blank" rel="external">https://msitpros.com/?p=3960</a></li>
<li>直播windows98漏洞挖掘<br><a href="https://www.youtube.com/watch?v=hLGQYi8W5sw" target="_blank" rel="external">https://www.youtube.com/watch?v=hLGQYi8W5sw</a></li>
<li>Yahoo漏洞赏金计划：看我如何接管任意Flurry用户帐户<br><a href="http://lightningsecurity.io/blog/password-not-provided/" target="_blank" rel="external">http://lightningsecurity.io/blog/password-not-provided/</a></li>
<li>LNKUp：生成恶意LNK文件payload用于渗出数据<br><a href="https://github.com/Plazmaz/LNKUp" target="_blank" rel="external">https://github.com/Plazmaz/LNKUp</a></li>
<li>ClamAV® is an open source antivirus engine for detecting trojans, viruses, malware &amp; other malicious threats.<br><a href="https://www.clamav.net/" target="_blank" rel="external">https://www.clamav.net/</a><br><a href="https://github.com/Cisco-Talos/clamav-faq" target="_blank" rel="external">https://github.com/Cisco-Talos/clamav-faq</a></li>
<li>记一次 Linux 下 XordDos 木马的清除<br><a href="https://sebastianblade.com/linux-xorddos-trojan-removal/" target="_blank" rel="external">https://sebastianblade.com/linux-xorddos-trojan-removal/</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Babadook — PowerShell 编写的一个无连接弹性后门&lt;br&gt;&lt;a href=&quot;h
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170815安全动态</title>
    <link href="http://kevien.github.io/2017/08/15/20170815%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/15/20170815安全动态/</id>
    <published>2017-08-15T01:00:25.000Z</published>
    <updated>2017-08-15T12:06:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li><p>mac下的渗透测试框架<br><a href="http://buddhalabs.com/hackports/" target="_blank" rel="external">http://buddhalabs.com/hackports/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">没用过，看着不错的样子</div></pre></td></tr></table></figure>
</li>
<li><p>新的恶意软件滥用 PPT 播放进行传播（CVE-2017-0199）<br><a href="http://blog.trendmicro.com/trendlabs-security-intelligence/cve-2017-0199-new-malware-abuses-powerpoint-slide-show/" target="_blank" rel="external">http://blog.trendmicro.com/trendlabs-security-intelligence/cve-2017-0199-new-malware-abuses-powerpoint-slide-show/</a></p>
</li>
<li>Piper - 基于 PowerShell 编写的利用命名管道做端口转发的工具<br><a href="https://github.com/p3nt4/Piper" target="_blank" rel="external">https://github.com/p3nt4/Piper</a></li>
<li>Web 应用中将 LFI 漏洞转换为 RFI 漏洞的技巧<br><a href="https://l.avala.mp/?p=241" target="_blank" rel="external">https://l.avala.mp/?p=241</a></li>
<li>利用 CHM 文件 Bypass Device Guard UMCI（CVE-2017-8625）<br><a href="https://msitpros.com/?p=3909" target="_blank" rel="external">https://msitpros.com/?p=3909</a></li>
<li>史上反侦察力最强木马“隐魂”：撑起色情播放器百万推广陷阱<br><a href="http://www.freebuf.com/articles/web/143912.html" target="_blank" rel="external">http://www.freebuf.com/articles/web/143912.html</a></li>
<li>恶意软件中的逃避技术，十八般武艺样样齐全<br><a href="https://mp.weixin.qq.com/s/TkVQNBeTN-5dgOC4r3oJBg" target="_blank" rel="external">https://mp.weixin.qq.com/s/TkVQNBeTN-5dgOC4r3oJBg</a></li>
<li>浏览器安全 / Chrome XSS Auditor bypass<br><a href="http://paper.seebug.org/376/" target="_blank" rel="external">http://paper.seebug.org/376/</a></li>
<li>在Active Directory中检测违规密码<br><a href="https://jacksonvd.com/checking-for-breached-passwords-in-active-directory/" target="_blank" rel="external">https://jacksonvd.com/checking-for-breached-passwords-in-active-directory/</a></li>
<li>WMI_Forensics<br><a href="https://github.com/davidpany/WMI_Forensics" target="_blank" rel="external">https://github.com/davidpany/WMI_Forensics</a></li>
<li>微信Netting-QRLJacking分析利用-扫我二维码获取你的账号权限<br><a href="http://www.freebuf.com/column/144276.html" target="_blank" rel="external">http://www.freebuf.com/column/144276.html</a></li>
<li>如何利用HTA文件在IE/Edge浏览器中执行恶意代码<br><a href="http://bobao.360.cn/learning/detail/4248.html" target="_blank" rel="external">http://bobao.360.cn/learning/detail/4248.html</a></li>
<li>Dll注入<br><a href="http://www.freebuf.com/articles/system/143640.html" target="_blank" rel="external">http://www.freebuf.com/articles/system/143640.html</a></li>
<li>powershell版的mimikaze<br><a href="https://github.com/clymb3r/PowerShell/blob/master/Invoke-Mimikatz/Invoke-Mimikatz.ps1" target="_blank" rel="external">https://github.com/clymb3r/PowerShell/blob/master/Invoke-Mimikatz/Invoke-Mimikatz.ps1</a><br><img src="/2017/08/15/20170815安全动态/1.png" alt=""></li>
<li>用 Certbot 一键升级你的网站为 Https<br><a href="https://www.v2ex.com/t/383032#reply3" target="_blank" rel="external">https://www.v2ex.com/t/383032#reply3</a></li>
<li>nginx 防范 ddos 最佳实践有哪些？<br><a href="https://www.v2ex.com/t/382998#reply23" target="_blank" rel="external">https://www.v2ex.com/t/382998#reply23</a></li>
<li>一次对SNMP服务的渗透测试<br><a href="http://www.freebuf.com/column/144144.html" target="_blank" rel="external">http://www.freebuf.com/column/144144.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;mac下的渗透测试框架&lt;br&gt;&lt;a href=&quot;http://buddhalabs.com
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>20170814安全动态</title>
    <link href="http://kevien.github.io/2017/08/14/20170814%E5%AE%89%E5%85%A8%E5%8A%A8%E6%80%81/"/>
    <id>http://kevien.github.io/2017/08/14/20170814安全动态/</id>
    <published>2017-08-14T14:16:07.000Z</published>
    <updated>2017-08-15T00:59:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>更新的晚了点儿，今天去考科目二了，有惊无险，顺利通过，happy:)</p>
<h4 id="每日安全动态"><a href="#每日安全动态" class="headerlink" title="每日安全动态"></a>每日安全动态</h4><ul>
<li><p>知名终端模拟软件XSHELL多版本存在后门，或上传用户服务器账号密码！<br><a href="http://bobao.360.cn/news/detail/4263.html" target="_blank" rel="external">http://bobao.360.cn/news/detail/4263.html</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">今日头条，我想说这个各种后门的时代，一些软件能不用的尽量不用，用就用官方的、相对权威的</div></pre></td></tr></table></figure>
</li>
<li><p>如何通过 Atom 编辑器的插件攻破开发者的计算机<br><a href="http://blog.thinkst.com/2017/08/all-your-devs-are-belong-to-us-how-to.html" target="_blank" rel="external">http://blog.thinkst.com/2017/08/all-your-devs-are-belong-to-us-how-to.html</a></p>
</li>
<li>Google 公开的用于 Fuzz 的测试样本集<br><a href="https://github.com/google/fuzzer-test-suite" target="_blank" rel="external">https://github.com/google/fuzzer-test-suite</a></li>
<li>Linux 内核 UFO/非UFO 路径切换内存破坏漏洞的 PoC(CVE-2017-1000112)<br><a href="https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-1000112" target="_blank" rel="external">https://github.com/xairy/kernel-exploits/tree/master/CVE-2017-1000112</a></li>
<li>上周推送了一款 macOS 平台的广告恶意软件 Mughthesec，另一位研究员写了一篇分析它的 Blog<br><a href="https://babyphd.net/2017/08/wtf-is-safefinderoperatormac-campaign" target="_blank" rel="external">https://babyphd.net/2017/08/wtf-is-safefinderoperatormac-campaign</a></li>
<li><p>使用 Active Directory 的 Powershell 模块收集域信息<br><a href="https://adsecurity.org/?p=3719" target="_blank" rel="external">https://adsecurity.org/?p=3719</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">搞内网的童鞋可以学习一下</div></pre></td></tr></table></figure>
</li>
<li><p>攻击java反序列化<br><a href="https://nickbloor.co.uk/2017/08/13/attacking-java-deserialization/" target="_blank" rel="external">https://nickbloor.co.uk/2017/08/13/attacking-java-deserialization/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mark</div></pre></td></tr></table></figure>
</li>
<li><p>Python 字节码级别的逆向<br><a href="https://chriswarrick.com/blog/2017/08/03/gynvaels-mission-11-en-python-bytecode-reverse-engineering/" target="_blank" rel="external">https://chriswarrick.com/blog/2017/08/03/gynvaels-mission-11-en-python-bytecode-reverse-engineering/</a></p>
</li>
<li>tools - nullsecurity.net 团队收集的安全方向的工具、漏洞利用、POC、Shellcode 以及脚本<br><a href="https://github.com/nullsecuritynet/tools" target="_blank" rel="external">https://github.com/nullsecuritynet/tools</a></li>
<li>GOSINT - 开源威胁情报收集与处理框架<br><a href="https://github.com/ciscocsirt/gosint" target="_blank" rel="external">https://github.com/ciscocsirt/gosint</a></li>
<li>微软的 PowerShell 团队开发了一个 PowerShell Module Browser 工具，支持对安装的 PS 模块和工具进行搜索<br><a href="https://docs.microsoft.com/en-us/teamblog/announcing-unified-powershell-experience" target="_blank" rel="external">https://docs.microsoft.com/en-us/teamblog/announcing-unified-powershell-experience</a></li>
<li>blackhat-arsenal-tools - BlackHat 会议”军火库”涉及到的工具<br><a href="https://github.com/toolswatch/blackhat-arsenal-tools" target="_blank" rel="external">https://github.com/toolswatch/blackhat-arsenal-tools</a></li>
<li>ttyd 远程命令执行漏洞详情及POC<br><a href="https://www.nccgroup.trust/uk/our-research/technical-advisory-remote-shell-commands-execution-in-ttyd/?research=Technical" target="_blank" rel="external">https://www.nccgroup.trust/uk/our-research/technical-advisory-remote-shell-commands-execution-in-ttyd/?research=Technical</a></li>
<li>Pwnhub 第一次线下沙龙竞赛Web题解析，来自 PHITHON’s blog<br><a href="https://www.leavesongs.com/PENETRATION/pwnhub-first-shalon-ctf-web-writeup.html" target="_blank" rel="external">https://www.leavesongs.com/PENETRATION/pwnhub-first-shalon-ctf-web-writeup.html</a></li>
<li>免杀 MSF Windows Payload 的方法与实践<br><a href="https://mp.weixin.qq.com/s/OxgJIIPaXMXqrY5lPdukdA" target="_blank" rel="external">https://mp.weixin.qq.com/s/OxgJIIPaXMXqrY5lPdukdA</a></li>
<li>NSA开发的工控ICS/SCADA态势感知开源工具Grassmarlin（附下载地址）<br><a href="http://www.freebuf.com/sectool/143106.html" target="_blank" rel="external">http://www.freebuf.com/sectool/143106.html</a></li>
<li>ThinkPHP 5.0.10-3.2.3 缓存函数设计缺陷可导致 Getshell<br><a href="http://paper.seebug.org/374/" target="_blank" rel="external">http://paper.seebug.org/374/</a></li>
<li>WinREPL - x86/x64 汇编实时解释执行的工具<br><a href="https://github.com/zerosum0x0/WinREPL" target="_blank" rel="external">https://github.com/zerosum0x0/WinREPL</a></li>
<li>逆向恶意软件教程<br><a href="https://securedorg.github.io/RE102/" target="_blank" rel="external">https://securedorg.github.io/RE102/</a><br><a href="https://securedorg.github.io/RE101/" target="_blank" rel="external">https://securedorg.github.io/RE101/</a></li>
<li>CVE-2017-8625：使用CHM bypass 设备防护UMCI<br><a href="https://msitpros.com/?p=3909" target="_blank" rel="external">https://msitpros.com/?p=3909</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;更新的晚了点儿，今天去考科目二了，有惊无险，顺利通过，happy:)&lt;/p&gt;
&lt;h4 id=&quot;每日安全动态&quot;&gt;&lt;a href=&quot;#每日安全动态&quot; class=&quot;headerlink&quot; title=&quot;每日安全动态&quot;&gt;&lt;/a&gt;每日安全动态&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;知名终
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>macOS软件安全与逆向分析笔记</title>
    <link href="http://kevien.github.io/2017/08/13/macOS%E8%BD%AF%E4%BB%B6%E5%AE%89%E5%85%A8%E4%B8%8E%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/"/>
    <id>http://kevien.github.io/2017/08/13/macOS软件安全与逆向分析笔记/</id>
    <published>2017-08-13T03:52:59.000Z</published>
    <updated>2017-08-13T04:35:01.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Rootless安全机制"><a href="#Rootless安全机制" class="headerlink" title="Rootless安全机制"></a>Rootless安全机制</h4><ul>
<li>又称SIP，System Integrity Protection，系统完整性保护。通过Rootless，系统可以决定即时第三方程序获取了系统Root权限，也不能做一些事情。<br>可以通过<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$csrutil status</div></pre></td></tr></table></figure>
</li>
</ul>
<p>查看是否开启了Rootless。</p>
<h4 id="Gatekeeper安全机制"><a href="#Gatekeeper安全机制" class="headerlink" title="Gatekeeper安全机制"></a>Gatekeeper安全机制</h4><ul>
<li>用于检测从互联网上下载或者其他地方安装的软件，当他们在系统中首次运行时，确保他们的行为对系统没有危害。<br>可以通过<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo spctl --status</div></pre></td></tr></table></figure>
</li>
</ul>
<p>查看是否开启。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Rootless安全机制&quot;&gt;&lt;a href=&quot;#Rootless安全机制&quot; class=&quot;headerlink&quot; title=&quot;Rootless安全机制&quot;&gt;&lt;/a&gt;Rootless安全机制&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;又称SIP，System Integrity P
    
    </summary>
    
    
  </entry>
  
</feed>
